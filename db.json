{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"source/images/flutter/new_flutter_prj.png","path":"images/flutter/new_flutter_prj.png","modified":0,"renderable":0},{"_id":"source/images/flutter/created_flutter_app.png","path":"images/flutter/created_flutter_app.png","modified":0,"renderable":0},{"_id":"source/images/ionic/deal_list.webp","path":"images/ionic/deal_list.webp","modified":0,"renderable":0},{"_id":"source/images/ionic/folder_structure.png","path":"images/ionic/folder_structure.png","modified":0,"renderable":0},{"_id":"source/images/ionic/play_store_menu.png","path":"images/ionic/play_store_menu.png","modified":0,"renderable":0},{"_id":"source/images/npm-registry/create_acc.png","path":"images/npm-registry/create_acc.png","modified":0,"renderable":0},{"_id":"source/images/npm-registry/set_realms.png","path":"images/npm-registry/set_realms.png","modified":0,"renderable":0},{"_id":"source/images/npm-registry/set_role.png","path":"images/npm-registry/set_role.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"source/images/ionic/p2p_statistics.webp","path":"images/ionic/p2p_statistics.webp","modified":0,"renderable":0},{"_id":"source/images/npm-registry/create_repo.png","path":"images/npm-registry/create_repo.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"source/images/flutter/virtual_device.png","path":"images/flutter/virtual_device.png","modified":0,"renderable":0},{"_id":"source/images/ionic/play_store.png","path":"images/ionic/play_store.png","modified":0,"renderable":0},{"_id":"source/images/ionic/ios_setting.png","path":"images/ionic/ios_setting.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"source/images/food/20190721_182339.jpg","path":"images/food/20190721_182339.jpg","modified":0,"renderable":0},{"_id":"source/images/food/20190616_005843.jpg","path":"images/food/20190616_005843.jpg","modified":0,"renderable":0},{"_id":"source/images/jenkins/1.png","path":"images/jenkins/1.png","modified":0,"renderable":0},{"_id":"source/about/i_want_what_you_have.jpg","path":"about/i_want_what_you_have.jpg","modified":0,"renderable":0},{"_id":"source/images/place/20190704_113309.jpg","path":"images/place/20190704_113309.jpg","modified":0,"renderable":0},{"_id":"source/images/food/20190616_004821.jpg","path":"images/food/20190616_004821.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190420_210834_북경오리.jpg","path":"images/food/20190420_210834_북경오리.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190601_134629_송화단.jpg","path":"images/food/20190601_134629_송화단.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190605_124042_멘보샤.jpg","path":"images/food/20190605_124042_멘보샤.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190607_125701_로스펀.jpg","path":"images/food/20190607_125701_로스펀.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190607_210106_카오위.jpg","path":"images/food/20190607_210106_카오위.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190417_120846_마라샹궈.jpg","path":"images/food/20190417_120846_마라샹궈.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190308_180439_라피.jpg","path":"images/food/20190308_180439_라피.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190612_201140_쉐이주위.jpg","path":"images/food/20190612_201140_쉐이주위.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190614_193438_마라탕.jpg","path":"images/food/20190614_193438_마라탕.jpg","modified":1,"renderable":0},{"_id":"source/images/food/20190612_200306_치아오지아오곱창.jpg","path":"images/food/20190612_200306_치아오지아오곱창.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1546690546207},{"_id":"themes/next/.all-contributorsrc","hash":"0ca0200bb5cba4cd157f2cb74703c4cb4c29cda5","modified":1546690546203},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1546690546208},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1546690546205},{"_id":"themes/next/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1546690546218},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1546690546208},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1546690546220},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1546690546222},{"_id":"themes/next/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1546690546223},{"_id":"themes/next/README.md","hash":"5cc097c71ba6e99aaf4b19955a4df3951879d8c9","modified":1546690546224},{"_id":"themes/next/bower.json","hash":"edbe7db4e39af86bb3163df5f0ab87cc0b420479","modified":1546690546227},{"_id":"themes/next/_config.yml","hash":"07cdabf3b86166b29e62affa4340732150281c61","modified":1563890391330},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1546690546228},{"_id":"themes/next/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1546690546260},{"_id":"themes/next/package.json","hash":"0a6b9a8d9ccf52a5941ce4ec28d5b490adbd9970","modified":1546690546406},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"22f2ccc5522563b67c8663849fc1d6cbae93a8ff","modified":1546690546210},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"40b0fd9fdb8586fab98e23f713940e7a2f80e2f9","modified":1546690546211},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1546690546212},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"36201119490a04107c8179b10202548a9d0e5e60","modified":1546690546213},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1546690546231},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1546690546217},{"_id":"themes/next/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1546690546217},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1546690546232},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1546690546229},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1546690546235},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"f2fd611a84dd6f9ed5395b63e187e29e9effbcd3","modified":1546690546237},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1546690546233},{"_id":"themes/next/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1546690546238},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1546690546241},{"_id":"themes/next/docs/MATH.md","hash":"0540cd9c961b07931af9f38a83bc9a0f90cd5291","modified":1546690546240},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1546690546263},{"_id":"themes/next/languages/de.yml","hash":"18b1fbab4b891813954482975c7bd4e8242b789b","modified":1562078930982},{"_id":"themes/next/languages/en.yml","hash":"84a9c4101169bd6c0f8df3174f98842d4e06d52c","modified":1562078930931},{"_id":"themes/next/languages/fr.yml","hash":"ad4f192c1a6f9e8a2f93df57627640a48054dcd5","modified":1562078930991},{"_id":"themes/next/languages/id.yml","hash":"38644041081ac7ae80e5d523097baae5868612af","modified":1562078931025},{"_id":"themes/next/languages/it.yml","hash":"1e6c15e8d98f44aee3662972374a580c3626d6ae","modified":1562078931043},{"_id":"themes/next/languages/ja.yml","hash":"2ae7eab656892187a6cc307df7444249911904e8","modified":1562078931059},{"_id":"themes/next/languages/ko.yml","hash":"822eaf0913049f87452c9485d72915908bb09732","modified":1562078931033},{"_id":"themes/next/languages/nl.yml","hash":"3dd7ddae143f2038d6aa5d70c28e6775b770bf63","modified":1562078930944},{"_id":"themes/next/languages/pt-BR.yml","hash":"f61c047f0695ff2ad4682c675a110e14384bf94e","modified":1562078930999},{"_id":"themes/next/languages/pt.yml","hash":"f83b016e5e0cca640aac83d429640207f2b0496f","modified":1562078930963},{"_id":"themes/next/languages/ru.yml","hash":"312dba201270278da350b1222e5f9c533e6f3213","modified":1562078930973},{"_id":"themes/next/languages/tr.yml","hash":"02e8d1cc0a453285e587e75ec494a53c30333c75","modified":1562078930906},{"_id":"themes/next/languages/vi.yml","hash":"d2467c03dd668438232750527c041c026ff540bd","modified":1562078930954},{"_id":"themes/next/languages/zh-HK.yml","hash":"246e156494819b7dccd01c7d4540d6a4d8486c0d","modified":1562078931051},{"_id":"themes/next/languages/zh-CN.yml","hash":"3a384fc54cabf06d6fb5c67b9b99460751c37067","modified":1562078931017},{"_id":"themes/next/languages/zh-TW.yml","hash":"26fdc215c89bb7b7d980fe123dcdcc27e111dc58","modified":1562078931008},{"_id":"themes/next/layout/_layout.swig","hash":"34476a17f8c12c9f094a6cc59208c5af6dd89202","modified":1546690546286},{"_id":"themes/next/layout/archive.swig","hash":"4b53070008775ecfd03953bd1b4adfcb0fabcaac","modified":1546690546397},{"_id":"themes/next/layout/category.swig","hash":"f0e3338bfa5efb205d2c28e635e9611f1fff3b55","modified":1546690546398},{"_id":"themes/next/layout/index.swig","hash":"bdcc9f57adef49706b16b107791cacecbc23c1dc","modified":1546690546400},{"_id":"themes/next/layout/post.swig","hash":"0554f42f90f4a524666c2b520be30b689c1d6a87","modified":1546690546402},{"_id":"themes/next/layout/page.swig","hash":"22a4ce71857a871b6fd474ec28fc80f736c45185","modified":1546690546401},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1546690546430},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1546690546443},{"_id":"themes/next/layout/schedule.swig","hash":"e79f43df0e9a6cf48bbf00882de48c5a58080247","modified":1546690546404},{"_id":"themes/next/layout/tag.swig","hash":"7cda2822e50b9fee9848a6b81e6c2d1aca830aeb","modified":1546690546405},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1546690546825},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1546690546828},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1546690546831},{"_id":"source/_posts/flutter.md","hash":"e313e92fb5899c2098bbdb44d2f9ffaaa6771bb7","modified":1547903779611},{"_id":"source/_posts/hello-world.md","hash":"3445c92cb329b85ceee02add5eb764799c52eebb","modified":1562080106101},{"_id":"source/_posts/markdown.md","hash":"23cb7a397d00254d000eea3f12a947e989662123","modified":1547903779615},{"_id":"source/_drafts/intellij-tip.md","hash":"402a4d0443ba50a67247ac336a03b815a6052454","modified":1560561451889},{"_id":"source/_drafts/rsync.md","hash":"c02076ae536684a1cd3e02e40e1ca49782259671","modified":1553403371718},{"_id":"source/_drafts/jpa.md","hash":"78dd894126a80bfaa1f1c9c47ec6631d03c556a0","modified":1551009657329},{"_id":"source/about/index.md","hash":"6ea1c1c84bc0b08aa6edc4685b739234f1591116","modified":1550391716750},{"_id":"source/admire/index.md","hash":"0a33867c171a66f58f9743b2168bfd7003f86f71","modified":1546349549648},{"_id":"source/categories/index.md","hash":"e551b870ed03bcfdeda7b4ed8f539ae484a7dc71","modified":1546349549651},{"_id":"source/tags/index.md","hash":"524b0f0cf6a5c0bb514c247756c4259dd451377f","modified":1546349549652},{"_id":"source/path/index.md","hash":"189affd66947d822694ee20916a2a1822aa71a02","modified":1564821975970},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546629},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1546690546242},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1546690546246},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1546690546244},{"_id":"themes/next/docs/ru/README.md","hash":"caaad965f9d54f82382c934f44a507d37a863fa3","modified":1546690546245},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1546690546248},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1546690546249},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"6ea741f380dc3e90661d12db7e115a94b77643a4","modified":1546690546250},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1546690546252},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1546690546254},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"7214fcd1b5830e62b3ac0836ad2d1b0fa391ae12","modified":1546690546255},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"69d73e86d8f7d2deafc436df84713a1425704d8a","modified":1546690546256},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1546690546258},{"_id":"themes/next/docs/zh-CN/README.md","hash":"0e6652be1b6bca87479f2601ff89105def200b4c","modified":1546690546257},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546690546283},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1546690546282},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546690546284},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"32b1f74e6a144133ce3a60cd06dbef50d8286919","modified":1546690546291},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"e8dfb86eb62b9c2bc1435d6d1afa95d3b4c7b931","modified":1546690546292},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6e7d0af24b4d52d168a4eb0fb29bffa69621395","modified":1546690546295},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"7a9b687087793bf5e218cbc345214f927fa5601a","modified":1546690546297},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"be4904c682934bdda4a406f4c24f487b34047c09","modified":1546690546296},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"27fb1d81151b9b79683e488579df19eee7e654d6","modified":1546690546330},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"f544e21883d249d5a341c684c97bd25831008f07","modified":1546690546331},{"_id":"themes/next/layout/_macro/post.swig","hash":"cbc5abd9a7caa3b280387d06519c9a74af5f6ecc","modified":1547903779620},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"4b48fdbfe3bf41ddeda4ff74c1ff17ab9f15c14e","modified":1546690546299},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"f8c7e729ad6e72b4c705a2c5d5041589c2b4cc52","modified":1546690546332},{"_id":"themes/next/layout/_partials/comments.swig","hash":"f1e25d53d76f898d280d0422d037e646d11f342b","modified":1546690546300},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"92ffb13ef1f6075f77f41b43ca04aaa0e9e65c10","modified":1546690546341},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"206cbd6ac9ca6a219a8516f59beae25b3c770199","modified":1546690546315},{"_id":"themes/next/layout/_partials/footer.swig","hash":"6d56acdcdc12ebca9c1d90f8a2b52ad17aafca6e","modified":1546690546303},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1546690546316},{"_id":"themes/next/layout/_partials/post-copyright.swig","hash":"55de88525c05af6053524c78ef4b42b46c3bfb6d","modified":1546690546317},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"ed62ea83d3f2c9db2ea57bf23a7d765ed82504c2","modified":1546690546361},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"c62c37474c8de78cf34e54c6219b503ec28d9815","modified":1546690546373},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"53861f78a1fb52e96a43cf6909e1530dcf6cbff8","modified":1546690546374},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"debba9b7110f635204a15df148194d4c2fd2668b","modified":1546690546380},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"20704846a29d72b24f6e446a6c22b10cf50a624b","modified":1546690546375},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"ccf0035086e14dcefa24c2907301edf4c37d5448","modified":1546690546381},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"3bdd2ec6c75a2c3f62c55e7e43162c4802722edb","modified":1546690546382},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"a174d4a0c9188f9c4a2652f49bfa7a60ad0a83e3","modified":1546690546386},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1546690546383},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cdb6152582313268d970ffeef99b4a8a7850f034","modified":1546690546416},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1546690546384},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"3db90c52bc8af57c6fa4a9dbdc524e1ecdc8b7b1","modified":1546690546421},{"_id":"themes/next/scripts/tags/button.js","hash":"510f3711a9c9d3e2a844250647d90e8359e7d130","modified":1546690546447},{"_id":"themes/next/scripts/tags/exturl.js","hash":"e9dab948e6327b22b4fc0c66cf97f6600a444dd5","modified":1546690546455},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1546690546450},{"_id":"themes/next/scripts/tags/full-image.js","hash":"ef2c2985a3edb9f69740740c5bc42d4b692c86fd","modified":1546690546458},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"aface11629970a5c4ee38aaa15550d2caee59560","modified":1546690546462},{"_id":"themes/next/scripts/tags/note.js","hash":"bd3310a5890bded1bda9ba3ad6f98ee44ecb101a","modified":1546690546470},{"_id":"themes/next/scripts/tags/label.js","hash":"bb502616bfabe85de5de903074ec6afe627f8413","modified":1546690546467},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1546690546465},{"_id":"themes/next/scripts/tags/tabs.js","hash":"2d257e26718d4011509fd6f530d2ea37e50e3e66","modified":1546690546475},{"_id":"themes/next/source/css/main.styl","hash":"2a62e2a11e9cdcc69e538d856d6f9ce228a07c93","modified":1546690546628},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1546690546633},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1546690546631},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1546690546635},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1546690546640},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1546690546644},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1546690546647},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1546690546651},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1546690546656},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1546690546663},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1546690546659},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1546690546661},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546690546666},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546690546672},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1546690546665},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1546690546674},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1546690546670},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1546690546680},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1546690546677},{"_id":"source/_posts/cloudiajs/claudiajs-get-started.md","hash":"4ba00b8661831fb32d82b81859029c451b1adab4","modified":1547904545700},{"_id":"source/_posts/cloudiajs/claudiajs-rest-api.md","hash":"26d9bce4907425a9e7f58915231b503e430f9071","modified":1547904545688},{"_id":"source/_posts/docker/docker-mysql-galera.md","hash":"8aa99b2050c61db198d830fc905a31650c267430","modified":1561797023225},{"_id":"source/_posts/docker/docker-redis.md","hash":"c11f1bfce7b6d02fcbe38d6f4689ff6a4be9e2f7","modified":1561796571682},{"_id":"source/_posts/docker/docker.md","hash":"b2e1ae71265c36a284c901ee9cc09f753b962ca5","modified":1561792527736},{"_id":"source/_posts/ionic/ionic-app-play-store-registration.md","hash":"b3ec00de108b7338f838675283ceb7ac7b6b9a7d","modified":1549264888175},{"_id":"source/_posts/ionic/ionic-get-started.md","hash":"27c8ce08bfc6c40c63443c4c00559aa9c406dc08","modified":1549264397959},{"_id":"source/_posts/ionic/ionic-prototype-app-development.md","hash":"341c05660657f2b6046c2d50bcdf8acdf67275ac","modified":1549264888183},{"_id":"source/_posts/nodejs/nodejs-passport.md","hash":"ae0d89aba21480c299621c6c2fc739597c00bd3e","modified":1550395912545},{"_id":"source/_posts/ionic/ionic-set-environment.md","hash":"c63fa8b528d6ce76b374f9d706e39b804b1d2988","modified":1549264901766},{"_id":"source/_posts/nodejs/npm-registry.md","hash":"3b60ccd78cbd2c1b52a3f5b6858379a474e90623","modified":1551014641349},{"_id":"source/_posts/ionic/ionic-make-android-jar.md","hash":"608ca6e5f2a5ba8bf55a267fd3b925df43f143a7","modified":1549264888166},{"_id":"source/images/flutter/new_flutter_prj.png","hash":"93fc1df64813067400d08edeeb8191f32c8f353d","modified":1528461954836},{"_id":"source/path/food/china.md","hash":"f0dab3e98e896e08bd04975fa6626f60d65de8e3","modified":1563890112097},{"_id":"source/path/place/beijing.md","hash":"531bffc9fec85a071f5cef4c891807ca2b008c0a","modified":1563890112083},{"_id":"source/path/food/index.md","hash":"e54b9f9c649e16b49c302e405bfd2062fed8588c","modified":1566714028598},{"_id":"source/path/place/index.md","hash":"21edce43818c46ee7b88481792b86cf303e3b04d","modified":1563890112068},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546338},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546337},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546578},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546578},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546581},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546623},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546626},{"_id":"source/images/flutter/created_flutter_app.png","hash":"58e559a758b882e6a176cd435caa6bd061d14c2a","modified":1528462658575},{"_id":"source/images/ionic/deal_list.webp","hash":"fab22ff65bb3718ea2eed47327714dba4bf5057d","modified":1526121943170},{"_id":"source/images/ionic/folder_structure.png","hash":"dcf28a52ca938b027ccaafbaa0bf7bdaa069db08","modified":1526121943172},{"_id":"source/images/ionic/play_store_menu.png","hash":"85c9be11515099c71034c5119695e5e5c4c1f8bc","modified":1526121943184},{"_id":"source/images/npm-registry/create_acc.png","hash":"a57710b318e9f75b6567d859b1716e6425880290","modified":1551013251564},{"_id":"source/images/npm-registry/set_realms.png","hash":"cb368acefc6dd020a6ae773c42c0ca0fe093c6fd","modified":1551013283307},{"_id":"source/images/npm-registry/set_role.png","hash":"ba6dcd8ea7773fc2da758202a1fb2b5c70ce73e6","modified":1551013301358},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1546690546289},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"ef791a725ee7292a5207a629dbcae16022a6d068","modified":1546690546290},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1546690546336},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1546690546340},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"580e9d9c4d8783ee6200d845ae16c98979bf1ea3","modified":1546690546334},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1546690546306},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"0b8349710caf9691741a457aa746add35245048e","modified":1546690546307},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"09109a5c5a301e7cc5e3c7aec32b0164739fc7d4","modified":1546690546308},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1546690546310},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1546690546344},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"19050627bc23b0b2c2e65e7248c0f88468eb8ea5","modified":1546690546309},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1546690546345},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"3f11ae8e9084f39628cd2006931d39a2069b9dd6","modified":1546690546314},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"f3ae3168801304af3d80ec3b84264e1d4201cb89","modified":1546690546311},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1546690546347},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1546690546349},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"1ce5fa218a44cf6e620583e9013e0b674dd6a989","modified":1546690546348},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1546690546350},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"8ab040fccba41675bc835973515530af8a51f8bd","modified":1546690546351},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"cfc932c5db04fef64cc56d3ba0b8ddf3a15a63bd","modified":1546690546352},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"39928f358dd13d9fc1a4641800e57be157ecd815","modified":1546690546356},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"bd8382d4f12df207ed52f75f6e5fb06527970167","modified":1546690546357},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"d461dfe853e5317f62e8551f9d8338c66a9935e7","modified":1546690546354},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1546690546358},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1546690546360},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1546690546326},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1546690546359},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"f6454c452b2e90a8c760321bce7e3dc6119b71fa","modified":1546690546319},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1546690546327},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1546690546321},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1546690546328},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1546690546323},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1546690546363},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2440f1e66cb8e39cc2bacfd783fb6fe904a628e9","modified":1546690546364},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1546690546324},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"080a3a30c65e9e97782b8c56a866ba4204247cc8","modified":1546690546366},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1546690546368},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"b98e8acb635beeaa929dab41c8cc5e519b9609b0","modified":1546690546369},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"30e9e55d9af2ced6e6b156a042026a8b480f0ab0","modified":1546690546377},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c49a3b10b2f2f64a7ac41fa3d436fd2c8d31cca8","modified":1546690546370},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"860de4ce6fccc516d2f779a4b600a4214d8c18e2","modified":1546690546378},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"d05e70a416963023ee1978e4168d58bcfd956ed3","modified":1546690546372},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"6fec78f40913a284b38ffe48fc8c78e23efa8e27","modified":1546690546379},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1546690546392},{"_id":"themes/next/scripts/filters/after_post_render/exturl.js","hash":"899b5a5e80e2bf441b7c40f24123f26a5097b8de","modified":1546690546413},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"71c897f9b107dd0de1b7f649633cf583c206a9db","modified":1546690546393},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1546690546395},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1546690546396},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1546690546577},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1546690546580},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"d1deb849e697cfb6258b8ab7bfb47e219210ccd9","modified":1546690546581},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1546690546576},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1546690546622},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"8d6cf29f63c90364f4d3c336f7c9bb794b4c46cc","modified":1546690546620},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"72927abd51d3a607a6ba32cf882390792b34e834","modified":1546690546624},{"_id":"themes/next/source/js/src/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1546690546687},{"_id":"themes/next/source/css/_variables/base.styl","hash":"e27a1034b0cd9821bab094565e9aa9bb80c6fa3e","modified":1546690546625},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1546690546692},{"_id":"themes/next/source/js/src/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1546690546698},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1546690546702},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"c7e2a588b679d46379124141bb2f30bc2f3210e2","modified":1546690546695},{"_id":"themes/next/source/js/src/motion.js","hash":"4c7f94e499743f4cc958f6cd1260a93d765d3051","modified":1546690546708},{"_id":"themes/next/source/js/src/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1546690546712},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1546690546723},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1546690546727},{"_id":"themes/next/source/js/src/utils.js","hash":"406145e8eda9f0cec4f7a09b7c1f9247aa24e46e","modified":1546690546732},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1546690546804},{"_id":"source/images/ionic/p2p_statistics.webp","hash":"985a58f6667e81df11abda1b96c9010403e869a8","modified":1526121943179},{"_id":"source/images/npm-registry/create_repo.png","hash":"83eae23fd810226a2224a681cad82607924c0cbc","modified":1551012942155},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1546690546822},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1546690546815},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1546690546760},{"_id":"source/images/flutter/virtual_device.png","hash":"9328d41f8a6518026819e111c21ea774f8cc25f9","modified":1528463574281},{"_id":"source/images/ionic/play_store.png","hash":"efba53df109c7f5a315021569fd3f8f62635e979","modified":1526121943182},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6e076b5e183eedf425a445e99851f938789c3194","modified":1546690546390},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"df72d012a51e0c705aa14c68cffd689a312f7250","modified":1546690546565},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1546690546391},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1546690546566},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"ab775f23ad475efb25376b5aad752ae8b56cfd8c","modified":1546690546568},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"1fd0650a8e5bff2c7146c810b04b3b88ee1f670e","modified":1546690546479},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1546690546571},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1546690546480},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1546690546572},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"60179df0e5c9f7c2e9fda046040536c5d8b02f65","modified":1546690546573},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1546690546481},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1546690546482},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1546690546483},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1546690546508},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1546690546541},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"fbb6be577529c750ef7c872fe7abdc7ab0faf0f8","modified":1546690546563},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"8e67eea73e9346f51ef26ecb35f67a1f5f672dcd","modified":1546690546584},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1546690546588},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1546690546589},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1546690546587},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"a80782a6eb3b40da2e14251da49069aff3115d8a","modified":1546690546591},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa6c00fdaf8f0ca3b690a5a556671745fb67e2c9","modified":1546690546592},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546690546593},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ccf5a4761cb0ce451b5e994cfabf8769248a45c1","modified":1546690546611},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"2ccb9bdc309b7c1ef183a3dbb0a4621bec54a328","modified":1546690546594},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1546690546610},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1546690546617},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1546690546614},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9f125e2b46ac4542c600fa514b66daf2f58f4c07","modified":1546690546615},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"11fcaaf7524445a194801e1048ea2fb84b316414","modified":1546690546613},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1546690546600},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"be72740313a9a0477b8a22f62e4c8ffa6d23a2e5","modified":1546690546616},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1546690546601},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4ed12bf17eeb7cd4f22dd01fdd486cda68d169a8","modified":1546690546603},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1546690546606},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546690546605},{"_id":"source/images/ionic/ios_setting.png","hash":"c5012e5980888eee2d80c5148ccb25fe5938791f","modified":1526121943177},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"e185d1bb2f5805db2bddaf9b0ed1e689f95bcd13","modified":1546690546719},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1546690546792},{"_id":"source/images/food/20190721_182339.jpg","hash":"9c8d6365c5fed3096a0d29aace17ca1a61f74929","modified":1563889941290},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1546690546490},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1ec3102ee8f5b8cc0877da1fd109d37470401e7b","modified":1546690546492},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1546690546491},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"3f3d2a43d1a326bad25b633c8ec9ddd87867224c","modified":1546690546488},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7dd247c8869fdefb5a007045d00f3ef8ceecf300","modified":1546690546485},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1546690546496},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1546690546493},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"cdd55b143453b0ca8bfabc9843abe9b4f85fb516","modified":1546690546500},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1546690546494},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"5a3b94bf978a9259d0a3a66bdfa8d7aa336a7934","modified":1546690546497},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"630be616447a982413030e561bbd3a80ac14b120","modified":1546690546501},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1546690546498},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1546690546505},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1546690546503},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1546690546510},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1546690546506},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1546690546514},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"ef588bc56eaa5b84296e28f4c2c36d9ea8b3b8c3","modified":1546690546507},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"fc94dd09b4245143b452d6cf2fc4c12134d99d6d","modified":1546690546513},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3241c9ae85ca11b6c4e125ac471aa4342ba1ce9c","modified":1546690546511},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1546690546516},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"317c9ceda655e9dc373ce8e7b71d20b794fce9a4","modified":1546690546515},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"330c8884efb5612e7eb03986d87d29e8b0651974","modified":1546690546517},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1546690546518},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1546690546520},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ff50a32ae6fea5fcdf2939dc9b01e1eb76cc73f0","modified":1546690546522},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1546690546524},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1546690546523},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1546690546526},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5c3141d58970a0614896b6a62fd7a8a8caf4e401","modified":1546690546527},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"539fc0880b2e035e8316d5d4b423703195c1b7ba","modified":1546690546525},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"2e36956c5f8802f703c7ce3893d16323a0e09d4c","modified":1546690546528},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1546690546530},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"41858f2dfd34a57d0a2016b1bce08efb61943b7a","modified":1546690546532},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1546690546533},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"00a504620c454287111dc0ace64c989e1ff97f54","modified":1546690546531},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1546690546534},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1546690546535},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9e05a2232faabb41bcebb51d545d897a76f077da","modified":1546690546537},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1546690546540},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1546690546538},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"94d76e6da600a36d80e2470326ebb6b3be447ccb","modified":1546690546539},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1546690546546},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1546690546543},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1546690546547},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1546690546545},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1546690546544},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1546690546549},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"f1640253cbbf71d0c04c34c25bd61045894f98bc","modified":1546690546550},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1546690546548},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"f4d8144c22544bdb89787c14ab9d39578dae4b7c","modified":1546690546552},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1546690546554},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"a01484e350ad5fc9b1fdfbfafb2ddd9687ad4d20","modified":1546690546555},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1546690546556},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1546690546557},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1546690546558},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1546690546559},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546690546598},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"84d844ff296fb7c8c8bec8296cdf82af40299fdb","modified":1546690546561},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"acfdd76b1c90d2e384affb3d0006a39b524609d2","modified":1546690546560},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1546690546596},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546690546608},{"_id":"source/images/food/20190616_005843.jpg","hash":"d0fa56b278642e41b154ba08ba0a1c210ed4c7f8","modified":1563720270305},{"_id":"source/images/jenkins/1.png","hash":"c5fa45241d6b1cf226350e12e2ba35f9f6f26425","modified":1526121943167},{"_id":"source/about/i_want_what_you_have.jpg","hash":"8ee7b845b60143308c72b28fe6e88fd571c4647e","modified":1491118683000},{"_id":"source/images/place/20190704_113309.jpg","hash":"54a6073bb6ca40409823558979c44dd25d4ef4a9","modified":1563719894623},{"_id":"source/path/food/마라롱샤.md","hash":"9c00f4f706e2588a489e0cb40a2a79cee0b75df3","modified":1566713000101},{"_id":"source/path/food/전병.md","hash":"cc5f57ac8e7971bc5885d575eaec29c6dfa99924","modified":1566711662775},{"_id":"public/admire/index.html","hash":"7eb47c0c4b1e4701758b2153bf64a8c6f85c62a4","modified":1566711696728},{"_id":"public/categories/index.html","hash":"f37fe883daaf9ba24f5cc3f6323d3868dcac21f3","modified":1566711696879},{"_id":"public/about/index.html","hash":"0216fb71fa2ca441ba97228d1900b5cd48df9b03","modified":1566711696879},{"_id":"public/path/index.html","hash":"7b10f4d43de4b09b05958f7947768857fa6400bc","modified":1566711696880},{"_id":"public/path/food/index.html","hash":"276296b09e30d6901d935ae78442785e3ebcd83b","modified":1566714067039},{"_id":"public/tags/index.html","hash":"0eeeecfbfb66a64dc91556baffefee45372b6782","modified":1566711696880},{"_id":"public/path/place/beijing.html","hash":"5b7e4544c700cd47ceff9b1bb8cbd2d14a21c06d","modified":1566711696880},{"_id":"public/path/place/index.html","hash":"d66808de7d07c37f9cdfc584e3948905f8caa340","modified":1566711696880},{"_id":"public/archives/page/2/index.html","hash":"287c6d2892e20f132404cdb55b3e0f7fa702ef8a","modified":1566711696880},{"_id":"public/archives/2019/page/2/index.html","hash":"ec3779fe0434cc52f887aa6338567d9a37f18a80","modified":1566711696880},{"_id":"public/archives/2019/01/index.html","hash":"d4ea25bb3248f0a222c36a28ff613824ba4d138c","modified":1566711696881},{"_id":"public/archives/2019/06/index.html","hash":"9ba2daa7cbb8c9bb6de1bd1518ca078b44993038","modified":1566711696881},{"_id":"public/categories/markdown/index.html","hash":"30013f26bbeb848bed3a5b53e1f153683ff0c96e","modified":1566711696881},{"_id":"public/categories/flutter/index.html","hash":"f94d11474d4664bae0058b7d2e2b62294d363af1","modified":1566711696881},{"_id":"public/categories/docker/index.html","hash":"2077b9f979f62621882a4a1b65aedd8431dea3d9","modified":1566711696881},{"_id":"public/categories/claudiajs/index.html","hash":"68b767a8e6e4bebba4efbb755d40a4599ce367f1","modified":1566711696881},{"_id":"public/categories/ionic/index.html","hash":"ba71f83870d909b413667bc5829e90e14455c662","modified":1566711696881},{"_id":"public/categories/nodejs/index.html","hash":"4c1362bda27d293bc76b7dc48c9e1c916dca0a4b","modified":1566711696881},{"_id":"public/tags/mobile/index.html","hash":"06ae7b0846e7c504bc223959d40ac2567db5378f","modified":1566711696881},{"_id":"public/tags/flutter/index.html","hash":"f9ece5f98df460e316bb99fb11fa52df7ab38c72","modified":1566711696881},{"_id":"public/tags/markdown/index.html","hash":"11ed13b746cae41f74a858f2de93f53ee964b82c","modified":1566711696882},{"_id":"public/tags/aws/index.html","hash":"36d452caf7f404170c5ab14e89c6a18466019811","modified":1566711696882},{"_id":"public/tags/lambda/index.html","hash":"ed2a3378e0e4c31d577f52bf6fbdee11cfece536","modified":1566711696882},{"_id":"public/tags/claudiajs/index.html","hash":"b02ad33f6019e4023485ddc352fefbf91c3776b3","modified":1566711696882},{"_id":"public/tags/container/index.html","hash":"25675612ad3ba209e779759eebaab3124983ee8e","modified":1566711696882},{"_id":"public/tags/redis/index.html","hash":"b7992b96f8a5746a8efced0a0e55cec4a75a8bc7","modified":1566711696882},{"_id":"public/tags/docker/index.html","hash":"e34b44f87a7d8c69505663a97d1d1931989401e5","modified":1566711696882},{"_id":"public/tags/swarm/index.html","hash":"c10a8924af40199fcd81a8f612045f8d8e4d1958","modified":1566711696882},{"_id":"public/tags/ionic/index.html","hash":"cc6ca818605c5360f443e539d5a6bd39f13e657e","modified":1566711696883},{"_id":"public/tags/angular/index.html","hash":"890da248d10726319e9adbebf8c49a958702484b","modified":1566711696883},{"_id":"public/tags/sentinel/index.html","hash":"65b5cae04598d7c4a36fc17c31b02ababd06d7e7","modified":1566711696883},{"_id":"public/tags/docker-compose/index.html","hash":"66dac3316b0d7d321dd2108394e32f9152f33d84","modified":1566711696883},{"_id":"public/tags/android/index.html","hash":"efb503db649f95c67324af89489723bccbcd41a0","modified":1566711696883},{"_id":"public/tags/play-store/index.html","hash":"7facc9dc80cdb08fabc6fc60967b82ae6be8ba0d","modified":1566711696883},{"_id":"public/tags/nodejs/index.html","hash":"577a877121ccaab68d28e2754ba2340433734bda","modified":1566711696883},{"_id":"public/tags/vagrant/index.html","hash":"138248f5b94d34053cc81809ab9bcefd56ca0347","modified":1566711696883},{"_id":"public/tags/express/index.html","hash":"ff51265d219911766e71e62de3d0e68bfdca89fa","modified":1566711696883},{"_id":"public/tags/passport/index.html","hash":"4b31827b2ff756b16e6cb748e052dcf079f36001","modified":1566711696883},{"_id":"public/tags/authentication/index.html","hash":"1a0f3a432c3bc6599d9fc27c9898e76a0a7191b1","modified":1566711696884},{"_id":"public/tags/npm/index.html","hash":"999abb16616bd4b1c89e06786d87834d91cc2ab0","modified":1566711696884},{"_id":"public/tags/nexus/index.html","hash":"dfe71b1c346bd80e3fa9e404190cebdc16e8c8ef","modified":1566711696884},{"_id":"public/2019/06/29/docker/docker-redis/index.html","hash":"d94ed8921eca31e389ef2e4051cdc43251cf5f5f","modified":1566711696884},{"_id":"public/2019/02/24/nodejs/npm-registry/index.html","hash":"e676716d2298d3f0f150373939bf1f33d66f2daa","modified":1566711696884},{"_id":"public/2019/06/29/docker/docker-mysql-galera/index.html","hash":"20fa4079ad0a1ea5475a80ff7205beb63783c89d","modified":1566711696884},{"_id":"public/2019/02/24/docker/docker/index.html","hash":"c0e6c1e55a13799cf4a25cead7e5773784dfa88e","modified":1566711696884},{"_id":"public/2019/02/04/ionic/ionic-make-android-jar/index.html","hash":"fa55613e4a507564d30c1d129d4ef9ecf4db069d","modified":1566711696884},{"_id":"public/2019/02/17/nodejs/nodejs-passport/index.html","hash":"e063866a016acd97f07fbffdd2fe427547679d22","modified":1566711696884},{"_id":"public/2019/02/04/ionic/ionic-set-environment/index.html","hash":"d4780222c32d967c0ecd577a01008ae6404aa4b7","modified":1566711696884},{"_id":"public/2019/02/04/ionic/ionic-prototype-app-development/index.html","hash":"da6845863969b28eb9be8eb813e56dbea0ca0aac","modified":1566711696884},{"_id":"public/2019/02/04/ionic/ionic-get-started/index.html","hash":"def4195e70ff290a1c8e99daaef2e91e9da7bb5b","modified":1566711696884},{"_id":"public/2019/02/04/ionic/ionic-app-play-store-registration/index.html","hash":"d50921afb26fce79a93e971ff5bbc7ac8fcf3cec","modified":1566711696884},{"_id":"public/2019/01/18/flutter/index.html","hash":"0c45e437bcd59ece3336f4b0f5da351df3ddd589","modified":1566711696884},{"_id":"public/2019/01/19/cloudiajs/claudiajs-get-started/index.html","hash":"be283f3c92c0c4f105c85c2f27c01588d37ad954","modified":1566711696884},{"_id":"public/2019/01/19/cloudiajs/claudiajs-rest-api/index.html","hash":"0386e307b8570ba8a080de841a386e7783b116f8","modified":1566711696885},{"_id":"public/2019/01/12/markdown/index.html","hash":"d860189edf56deee36ff89e64e015cac2fb8b601","modified":1566711696885},{"_id":"public/2019/01/01/hello-world/index.html","hash":"535f833a8dd0547619fc6efb81b6834c4aa37e73","modified":1566711696885},{"_id":"public/index.html","hash":"bfc9a70e8d10574de2e6d112bffcd725aa5adcd4","modified":1566711696885},{"_id":"public/page/2/index.html","hash":"828a72e33e901f3a73019a8e20f533610aebd378","modified":1566711696885},{"_id":"public/page/6/index.html","hash":"956b316140ace48121f00d18bc5d67c61e9a3706","modified":1566711696885},{"_id":"public/page/4/index.html","hash":"7e114a126b6aa9e19ab309596c8003222ac4cb0b","modified":1566711696885},{"_id":"public/page/5/index.html","hash":"6c3a662385c1eba26ff6c4be2be4e06275822f71","modified":1566711696885},{"_id":"public/page/3/index.html","hash":"c2e4eb2329a369a4d240836b04da6b776a1be821","modified":1566711696885},{"_id":"public/page/8/index.html","hash":"12193ca5b3d85817301130f01b48d72cca40053f","modified":1566711696885},{"_id":"public/archives/index.html","hash":"4607146aaab06269582ee7d66d0efd504d95ef08","modified":1566711696885},{"_id":"public/page/7/index.html","hash":"53008fc9b6f3d1b846393c68c66f854f375f2e29","modified":1566711696886},{"_id":"public/archives/2019/index.html","hash":"0bbf2cd9f4e807be5bd78953568abe26d873a672","modified":1566711696886},{"_id":"public/archives/2019/02/index.html","hash":"a0d4c6ba66bf739b374cf5b09d9b6ef3037b5626","modified":1566711696886},{"_id":"public/path/food/마라롱샤.html","hash":"1705c45dd39091059d54ca41c0acad901e2161c9","modified":1566714067039},{"_id":"public/path/food/전병.html","hash":"2f7f9c9d360524339ad6e90ab3be92bdbc01fd94","modified":1566711696889},{"_id":"source/path/food/라피.md","hash":"5ec943c0f0b1d29710cf805f62ce14cd3eb1add5","modified":1566714028571},{"_id":"source/path/food/로스펀.md","hash":"657476690225bc9fa9e62ef9fc864b708beaebe9","modified":1566714028532},{"_id":"source/path/food/마라샹궈.md","hash":"ef9e11712031d7088dc18247f352669639acb241","modified":1566714028506},{"_id":"source/path/food/마라탕.md","hash":"5bf42717b77e3f7ad64d4d040b2728da34a21251","modified":1566714028589},{"_id":"source/path/food/멘보샤.md","hash":"88d7f2bd0b6207d1d59fdabefb5f22c4f1d91a7b","modified":1566714028523},{"_id":"source/path/food/북경오리.md","hash":"f41f526cf4869748fe71366bdc08eca44fbf6e24","modified":1566714028560},{"_id":"source/path/food/송화단.md","hash":"10c80a884e1b93c06b5cd1b5facaf32fc0816973","modified":1566714028579},{"_id":"source/path/food/쉐이주위.md","hash":"53d92301d4e1e6c4d7f7000501a9a14504320812","modified":1566714028606},{"_id":"source/path/food/치아오지아오곱창.md","hash":"e877349f0c9a2f1eb77af1fd97ca1bd54cf17971","modified":1566714028542},{"_id":"source/path/food/카오위.md","hash":"b5e79f17e05f61fb58a6888bfccd155c7add1dcd","modified":1566714028551},{"_id":"source/images/food/20190605_124042_멘보샤.jpg","hash":"f6319b2a01c15bba4283d9edc26e4fe949a435e2","modified":1566713293565},{"_id":"source/images/food/20190308_180439_라피.jpg","hash":"ab4dc8a14bb1d1c0581225089d410287ea811c32","modified":1566713377355},{"_id":"source/images/food/20190420_210834_북경오리.jpg","hash":"fef361afccf2bb95b33bf175130bdd852fbbed86","modified":1566713271343},{"_id":"source/images/food/20190612_200306_치아오지아오곱창.jpg","hash":"5d2fd24e2f44f7ad6f4ca4d5da17ea88d487453c","modified":1566713326021},{"_id":"source/images/food/20190601_134629_송화단.jpg","hash":"b24e113db24e02ab355552f9ba19da44b67e163d","modified":1566713284625},{"_id":"source/images/food/20190612_201140_쉐이주위.jpg","hash":"a4b7db5662cf8a00164a0a47abbb77c523e52618","modified":1566713335417},{"_id":"source/images/food/20190417_120846_마라샹궈.jpg","hash":"acf642f09884a4e92aa4925d354faab4f6b9cc0e","modified":1566713386616},{"_id":"source/images/food/20190607_125701_로스펀.jpg","hash":"7b39a113e0b437708f6fe5437c104b6cce651fa5","modified":1566713306151},{"_id":"source/images/food/20190614_193438_마라탕.jpg","hash":"3c0cef364d84bafdeb7c2065684b039c69d7feb6","modified":1566713346082},{"_id":"source/images/food/20190616_004821.jpg","hash":"58ad3b10556acdddf06127bd32ca32bf20e998aa","modified":1566712943269},{"_id":"source/images/food/20190607_210106_카오위.jpg","hash":"738b44643441598159152368470d56bd0059a017","modified":1566713316871},{"_id":"public/path/food/라피.html","hash":"8993c16060ea81a0f9fed73049184c16c862f28c","modified":1566714067438},{"_id":"public/path/food/마라샹궈.html","hash":"056b38a5fc223bad6032bb8bfbca364dc4870ca8","modified":1566714067438},{"_id":"public/path/food/북경오리.html","hash":"8758a49d867d2596d23307cab87f607147216ff5","modified":1566714067440},{"_id":"public/path/food/송화단.html","hash":"50c1c67435178318178cec38ff0e600bb23e3fdd","modified":1566714067440},{"_id":"public/path/food/멘보샤.html","hash":"19efeb69b6dc993176ef847044505078d638c125","modified":1566714067473},{"_id":"public/path/food/로스펀.html","hash":"dcd250388779b6374f22eaedbb5fcce1848a821b","modified":1566714067473},{"_id":"public/path/food/치아오지아오곱창.html","hash":"a48a87e1b27c585caf7f0dbe8ee7bf2fbc3c470e","modified":1566714067473},{"_id":"public/path/food/마라탕.html","hash":"861311d62c8b7008566452adfa0b49b6c608ba0b","modified":1566714067474},{"_id":"public/path/food/쉐이주위.html","hash":"eeda2f489fda6f9cf6899cd560cbf315ba1ba560","modified":1566714067474},{"_id":"public/path/food/카오위.html","hash":"1e693e9f08ec961df65c1eb19a2ce68e357081fa","modified":1566714067474},{"_id":"public/images/food/20190605_124042_멘보샤.jpg","hash":"f6319b2a01c15bba4283d9edc26e4fe949a435e2","modified":1566714067495},{"_id":"public/images/food/20190420_210834_북경오리.jpg","hash":"fef361afccf2bb95b33bf175130bdd852fbbed86","modified":1566714067501},{"_id":"public/images/food/20190308_180439_라피.jpg","hash":"ab4dc8a14bb1d1c0581225089d410287ea811c32","modified":1566714067503},{"_id":"public/images/food/20190612_200306_치아오지아오곱창.jpg","hash":"5d2fd24e2f44f7ad6f4ca4d5da17ea88d487453c","modified":1566714067503},{"_id":"public/images/food/20190601_134629_송화단.jpg","hash":"b24e113db24e02ab355552f9ba19da44b67e163d","modified":1566714067503},{"_id":"public/images/food/20190612_201140_쉐이주위.jpg","hash":"a4b7db5662cf8a00164a0a47abbb77c523e52618","modified":1566714067506},{"_id":"public/images/food/20190417_120846_마라샹궈.jpg","hash":"acf642f09884a4e92aa4925d354faab4f6b9cc0e","modified":1566714067506},{"_id":"public/images/food/20190607_125701_로스펀.jpg","hash":"7b39a113e0b437708f6fe5437c104b6cce651fa5","modified":1566714067510},{"_id":"public/images/food/20190614_193438_마라탕.jpg","hash":"3c0cef364d84bafdeb7c2065684b039c69d7feb6","modified":1566714067511},{"_id":"public/images/food/20190616_004821.jpg","hash":"58ad3b10556acdddf06127bd32ca32bf20e998aa","modified":1566714067511},{"_id":"public/images/food/20190607_210106_카오위.jpg","hash":"738b44643441598159152368470d56bd0059a017","modified":1566714067518}],"Category":[{"name":"flutter","_id":"cjzqjd8v70004y8uh4zpgn7q8"},{"name":"markdown","_id":"cjzqjd8vj000by8uh8pjd4b1n"},{"name":"claudiajs","_id":"cjzqjd8zc000py8uhp50a3t6f"},{"name":"docker","_id":"cjzqjd8zs0010y8uhp6qtcqur"},{"name":"ionic","_id":"cjzqjd901001by8uh7gsengml"},{"name":"nodejs","_id":"cjzqjd90b001uy8uhc19u0u55"}],"Data":[],"Page":[{"title":"admire","comments":0,"date":"2018-12-29T01:45:37.000Z","_content":"","source":"admire/index.md","raw":"---\ntitle: admire\ncomments: false\ndate: 2018-12-29 10:45:37\n---\n","updated":"2019-01-01T13:32:29.648Z","path":"admire/index.html","layout":"page","_id":"cjzqjd8v20001y8uh3w67v0is","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2018-12-29T01:34:08.000Z","comments":0,"_content":"\n![](i_want_what_you_have.jpg \"i_want_what_you_have\")\n\nYou can see me on [Linkedin](https://www.linkedin.com/in/jiseob-kim/)🧐","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-12-29 10:34:08\ncomments: false\n---\n\n![](i_want_what_you_have.jpg \"i_want_what_you_have\")\n\nYou can see me on [Linkedin](https://www.linkedin.com/in/jiseob-kim/)🧐","updated":"2019-02-17T08:21:56.750Z","path":"about/index.html","layout":"page","_id":"cjzqjd8v60003y8uhgtbpa0a3","content":"<p><img src=\"i_want_what_you_have.jpg\" alt=\"\" title=\"i_want_what_you_have\"></p>\n<p>You can see me on <a href=\"https://www.linkedin.com/in/jiseob-kim/\" target=\"_blank\" rel=\"noopener\">Linkedin</a>🧐</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"i_want_what_you_have.jpg\" alt=\"\" title=\"i_want_what_you_have\"></p>\n<p>You can see me on <a href=\"https://www.linkedin.com/in/jiseob-kim/\" target=\"_blank\" rel=\"noopener\">Linkedin</a>🧐</p>\n"},{"title":"categories","date":"2018-12-29T01:26:20.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-12-29 10:26:20\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-01-01T13:32:29.651Z","path":"categories/index.html","layout":"page","_id":"cjzqjd8vb0007y8uhahhq4r54","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"path","comments":1,"date":"2019-07-02T13:39:37.000Z","_content":"\n[eating](/path/food) and [walking](/path/place).....\n\n{% googlemaps 37.498095 127.07610 5 100% 480px %}\n  Beijing, 39.904030, 116.407526\n{% endgooglemaps %}\n","source":"path/index.md","raw":"---\ntitle: path\ncomments: true\ndate: 2019-07-02 22:39:37\n---\n\n[eating](/path/food) and [walking](/path/place).....\n\n{% googlemaps 37.498095 127.07610 5 100% 480px %}\n  Beijing, 39.904030, 116.407526\n{% endgooglemaps %}\n","updated":"2019-08-03T08:46:15.970Z","path":"path/index.html","layout":"page","_id":"cjzqjd8ve0009y8uhyilfsb1l","content":"<p><a href=\"/path/food\">eating</a> and <a href=\"/path/place\">walking</a>…..</p>\n<div id=\"googleMap5391\" style=\"\r\n            height: 480px;\r\n            width: 100%;\r\n            margin: 0px;\r\n            padding: 0px\r\n            \">\r\n</div>\r\n<style>.gmnoprint img {max-width: none !important;}</style>\r\n<script defer=\"defer\">\r\n  window.hexoGmaps = window.hexoGmaps || { maps: {}};\r\n  window.hexoGmaps.maps['initgoogleMap5391'] = function init() {\r\n    var mapOptions = {\r\n       'scrollwheel': false,\r\n       'zoom': 5,\r\n       'center': new window.google.maps.LatLng( 37.498095 , 127.07610 ),\r\n     },\r\n     target = document.getElementById('googleMap5391'),\r\n     map = new window.google.maps.Map(target, mapOptions);\r\n      \r\n     \r\n     \r\n     var opts0 = {\r\n        'position': new window.google.maps.LatLng( 39.90403 , 116.407526 ),\r\n        'map': map,\r\n        'title': 'Beijing',\r\n        'zIndex' : 0,\r\n        'icon': ''\r\n      };\r\n\r\n     var infowindow0 = new window.google.maps.InfoWindow({\r\n       content: 'Beijing'\r\n     });\r\n\r\n     var marker0 = new window.google.maps.Marker(opts0);\r\n\r\n     marker0.addListener('click', function(){\r\n       infowindow0.open(map, marker0)\r\n     })\r\n   \r\n\r\n  }\r\n  function makeMaps() {\r\n    for (var map in window.hexoGmaps.maps) {\r\n       console.log('map #', map);\r\n       window.hexoGmaps.maps[map]();\r\n    }\r\n  }\r\n  function loadScript() {\r\n    window.hexoGmaps.googleScriptLoaded = true;\r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyANgPfI0-VrNLw1Fe1Kd7f-5gcScdG4s7o';\r\n    document.body.appendChild(script);\r\n  }\r\n  if (!window.hexoGmaps.googleScriptLoaded) {\r\n    loadScript();\r\n  }\r\n</script>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"/path/food\">eating</a> and <a href=\"/path/place\">walking</a>…..</p>\n<div id=\"googleMap5391\" style=\"\r\n            height: 480px;\r\n            width: 100%;\r\n            margin: 0px;\r\n            padding: 0px\r\n            \">\r\n</div>\r\n<style>.gmnoprint img {max-width: none !important;}</style>\r\n<script defer=\"defer\">\r\n  window.hexoGmaps = window.hexoGmaps || { maps: {}};\r\n  window.hexoGmaps.maps['initgoogleMap5391'] = function init() {\r\n    var mapOptions = {\r\n       'scrollwheel': false,\r\n       'zoom': 5,\r\n       'center': new window.google.maps.LatLng( 37.498095 , 127.07610 ),\r\n     },\r\n     target = document.getElementById('googleMap5391'),\r\n     map = new window.google.maps.Map(target, mapOptions);\r\n      \r\n     \r\n     \r\n     var opts0 = {\r\n        'position': new window.google.maps.LatLng( 39.90403 , 116.407526 ),\r\n        'map': map,\r\n        'title': 'Beijing',\r\n        'zIndex' : 0,\r\n        'icon': ''\r\n      };\r\n\r\n     var infowindow0 = new window.google.maps.InfoWindow({\r\n       content: 'Beijing'\r\n     });\r\n\r\n     var marker0 = new window.google.maps.Marker(opts0);\r\n\r\n     marker0.addListener('click', function(){\r\n       infowindow0.open(map, marker0)\r\n     })\r\n   \r\n\r\n  }\r\n  function makeMaps() {\r\n    for (var map in window.hexoGmaps.maps) {\r\n       console.log('map #', map);\r\n       window.hexoGmaps.maps[map]();\r\n    }\r\n  }\r\n  function loadScript() {\r\n    window.hexoGmaps.googleScriptLoaded = true;\r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n        script.src = '//maps.googleapis.com/maps/api/js?v=3.exp&callback=makeMaps&key=AIzaSyANgPfI0-VrNLw1Fe1Kd7f-5gcScdG4s7o';\r\n    document.body.appendChild(script);\r\n  }\r\n  if (!window.hexoGmaps.googleScriptLoaded) {\r\n    loadScript();\r\n  }\r\n</script>\n"},{"title":"tags","date":"2018-12-29T01:26:41.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-12-29 10:26:41\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-01-01T13:32:29.652Z","path":"tags/index.html","layout":"page","_id":"cjzqjd8vk000dy8uhhy9yi0o7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"beijing","date":"2019-07-04T05:49:46.000Z","tags":["street","china","beijing"],"categories":["place"],"_content":"\n![2019.07 beijing wangjing](/images/place/20190704_113309.jpg \"2019.07 beijing wangjing\")\n\n**왕징**","source":"path/place/beijing.md","raw":"---\ntitle: beijing\ndate: 2019-07-04 14:49:46\ntags:\n- street\n- china\n- beijing\ncategories:\n- place\n---\n\n![2019.07 beijing wangjing](/images/place/20190704_113309.jpg \"2019.07 beijing wangjing\")\n\n**왕징**","updated":"2019-07-23T13:55:12.083Z","path":"path/place/beijing.html","comments":1,"layout":"page","_id":"cjzqjd8zb000oy8uhou6ldd9m","content":"<p><img src=\"/images/place/20190704_113309.jpg\" alt=\"2019.07 beijing wangjing\" title=\"2019.07 beijing wangjing\"></p>\n<p><strong>왕징</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/place/20190704_113309.jpg\" alt=\"2019.07 beijing wangjing\" title=\"2019.07 beijing wangjing\"></p>\n<p><strong>왕징</strong></p>\n"},{"title":"food","comments":1,"date":"2019-07-07T13:39:37.000Z","_content":"\n- [마라롱샤](/path/food/마라롱샤.html) \n- [전병](/path/food/전병.html)\n- [라피](/path/food/라피.html)\n- [로스펀](/path/food/로스펀.html)\n- [마라샹궈](/path/food/마라샹궈.html)\n- [마라탕](/path/food/마라탕.html)\n- [멘보샤](/path/food/멘보샤.html)\n- [북경오리](/path/food/북경오리.html)\n- [송화단](/path/food/송화단.html)\n- [쉐이주위](/path/food/쉐이주위.html)\n- [치아오지아오곱창](/path/food/치아오지아오곱창.html)\n- [카오위](/path/food/카오위.html)\n","source":"path/food/index.md","raw":"---\ntitle: food\ncomments: true\ndate: 2019-07-07 22:39:37\n---\n\n- [마라롱샤](/path/food/마라롱샤.html) \n- [전병](/path/food/전병.html)\n- [라피](/path/food/라피.html)\n- [로스펀](/path/food/로스펀.html)\n- [마라샹궈](/path/food/마라샹궈.html)\n- [마라탕](/path/food/마라탕.html)\n- [멘보샤](/path/food/멘보샤.html)\n- [북경오리](/path/food/북경오리.html)\n- [송화단](/path/food/송화단.html)\n- [쉐이주위](/path/food/쉐이주위.html)\n- [치아오지아오곱창](/path/food/치아오지아오곱창.html)\n- [카오위](/path/food/카오위.html)\n","updated":"2019-08-25T06:20:28.598Z","path":"path/food/index.html","_id":"cjzqjd8zf000sy8uhdvwa91av","layout":"page","content":"<ul>\n<li><a href=\"/path/food/마라롱샤.html\">마라롱샤</a> </li>\n<li><a href=\"/path/food/전병.html\">전병</a></li>\n<li><a href=\"/path/food/라피.html\">라피</a></li>\n<li><a href=\"/path/food/로스펀.html\">로스펀</a></li>\n<li><a href=\"/path/food/마라샹궈.html\">마라샹궈</a></li>\n<li><a href=\"/path/food/마라탕.html\">마라탕</a></li>\n<li><a href=\"/path/food/멘보샤.html\">멘보샤</a></li>\n<li><a href=\"/path/food/북경오리.html\">북경오리</a></li>\n<li><a href=\"/path/food/송화단.html\">송화단</a></li>\n<li><a href=\"/path/food/쉐이주위.html\">쉐이주위</a></li>\n<li><a href=\"/path/food/치아오지아오곱창.html\">치아오지아오곱창</a></li>\n<li><a href=\"/path/food/카오위.html\">카오위</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"/path/food/마라롱샤.html\">마라롱샤</a> </li>\n<li><a href=\"/path/food/전병.html\">전병</a></li>\n<li><a href=\"/path/food/라피.html\">라피</a></li>\n<li><a href=\"/path/food/로스펀.html\">로스펀</a></li>\n<li><a href=\"/path/food/마라샹궈.html\">마라샹궈</a></li>\n<li><a href=\"/path/food/마라탕.html\">마라탕</a></li>\n<li><a href=\"/path/food/멘보샤.html\">멘보샤</a></li>\n<li><a href=\"/path/food/북경오리.html\">북경오리</a></li>\n<li><a href=\"/path/food/송화단.html\">송화단</a></li>\n<li><a href=\"/path/food/쉐이주위.html\">쉐이주위</a></li>\n<li><a href=\"/path/food/치아오지아오곱창.html\">치아오지아오곱창</a></li>\n<li><a href=\"/path/food/카오위.html\">카오위</a></li>\n</ul>\n"},{"title":"place","comments":1,"date":"2019-07-07T13:39:37.000Z","_content":"\n- [beijing](/path/place/beijing.html) : 북경에서..\n","source":"path/place/index.md","raw":"---\ntitle: place\ncomments: true\ndate: 2019-07-07 22:39:37\n---\n\n- [beijing](/path/place/beijing.html) : 북경에서..\n","updated":"2019-07-23T13:55:12.068Z","path":"path/place/index.html","layout":"page","_id":"cjzqjd8zh000uy8uh8lnz352b","content":"<ul>\n<li><a href=\"/path/place/beijing.html\">beijing</a> : 북경에서..</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"/path/place/beijing.html\">beijing</a> : 북경에서..</li>\n</ul>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","마라롱샤"],"categories":["food"],"_content":"\n![마라롱샤1](/images/food/20190616_005843.jpg \"마라롱샤\")\n\n![마라롱샤2](/images/food/20190616_004821.jpg \"마라롱샤\")\n\n**마라롱샤**\n","source":"path/food/마라롱샤.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 마라롱샤\ncategories:\n- food\n---\n\n![마라롱샤1](/images/food/20190616_005843.jpg \"마라롱샤\")\n\n![마라롱샤2](/images/food/20190616_004821.jpg \"마라롱샤\")\n\n**마라롱샤**\n","updated":"2019-08-25T06:03:20.101Z","path":"path/food/마라롱샤.html","_id":"cjzqjlc48003vy8uhj2zovell","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190616_005843.jpg\" alt=\"마라롱샤1\" title=\"마라롱샤\"></p>\n<p><img src=\"/images/food/20190616_004821.jpg\" alt=\"마라롱샤2\" title=\"마라롱샤\"></p>\n<p><strong>마라롱샤</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190616_005843.jpg\" alt=\"마라롱샤1\" title=\"마라롱샤\"></p>\n<p><img src=\"/images/food/20190616_004821.jpg\" alt=\"마라롱샤2\" title=\"마라롱샤\"></p>\n<p><strong>마라롱샤</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","전병"],"categories":["food"],"_content":"\n![전병](/images/food/20190721_182339.jpg \"전병\")\n\n**전병**","source":"path/food/전병.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 전병\ncategories:\n- food\n---\n\n![전병](/images/food/20190721_182339.jpg \"전병\")\n\n**전병**","updated":"2019-08-25T05:41:02.775Z","path":"path/food/전병.html","_id":"cjzqjnbbd003wy8uhvnnf6ive","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190721_182339.jpg\" alt=\"전병\" title=\"전병\"></p>\n<p><strong>전병</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190721_182339.jpg\" alt=\"전병\" title=\"전병\"></p>\n<p><strong>전병</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","라피"],"categories":["food"],"_content":"\n![라피](/images/food/20190308_180439_라피.jpg \"라피\")\n\n**라피**","source":"path/food/라피.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 라피\ncategories:\n- food\n---\n\n![라피](/images/food/20190308_180439_라피.jpg \"라피\")\n\n**라피**","updated":"2019-08-25T06:20:28.571Z","path":"path/food/라피.html","_id":"cjzqks43j0000u8uhco9shpv3","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190308_180439_라피.jpg\" alt=\"라피\" title=\"라피\"></p>\n<p><strong>라피</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190308_180439_라피.jpg\" alt=\"라피\" title=\"라피\"></p>\n<p><strong>라피</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","마라샹궈"],"categories":["food"],"_content":"\n![마라샹궈](/images/food/20190417_120846_마라샹궈.jpg \"마라샹궈\")\n\n**마라샹궈**","source":"path/food/마라샹궈.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 마라샹궈\ncategories:\n- food\n---\n\n![마라샹궈](/images/food/20190417_120846_마라샹궈.jpg \"마라샹궈\")\n\n**마라샹궈**","updated":"2019-08-25T06:20:28.506Z","path":"path/food/마라샹궈.html","_id":"cjzqks95n0001u8uhaka53f1i","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190417_120846_마라샹궈.jpg\" alt=\"마라샹궈\" title=\"마라샹궈\"></p>\n<p><strong>마라샹궈</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190417_120846_마라샹궈.jpg\" alt=\"마라샹궈\" title=\"마라샹궈\"></p>\n<p><strong>마라샹궈</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","북경오리"],"categories":["food"],"_content":"\n![북경오리](/images/food/20190420_210834_북경오리.jpg \"북경오리\")\n\n**북경오리**","source":"path/food/북경오리.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 북경오리\ncategories:\n- food\n---\n\n![북경오리](/images/food/20190420_210834_북경오리.jpg \"북경오리\")\n\n**북경오리**","updated":"2019-08-25T06:20:28.560Z","path":"path/food/북경오리.html","_id":"cjzqksdh20002u8uhb28zhww3","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190420_210834_북경오리.jpg\" alt=\"북경오리\" title=\"북경오리\"></p>\n<p><strong>북경오리</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190420_210834_북경오리.jpg\" alt=\"북경오리\" title=\"북경오리\"></p>\n<p><strong>북경오리</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","송화단"],"categories":["food"],"_content":"\n![송화단](/images/food/20190601_134629_송화단.jpg \"송화단\")\n\n**송화단**","source":"path/food/송화단.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 송화단\ncategories:\n- food\n---\n\n![송화단](/images/food/20190601_134629_송화단.jpg \"송화단\")\n\n**송화단**","updated":"2019-08-25T06:20:28.579Z","path":"path/food/송화단.html","_id":"cjzqkshyg0003u8uhn7bw9v83","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190601_134629_송화단.jpg\" alt=\"송화단\" title=\"송화단\"></p>\n<p><strong>송화단</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190601_134629_송화단.jpg\" alt=\"송화단\" title=\"송화단\"></p>\n<p><strong>송화단</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","멘보샤"],"categories":["food"],"_content":"\n![멘보샤](/images/food/20190605_124042_멘보샤.jpg \"멘보샤\")\n\n**멘보샤**","source":"path/food/멘보샤.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 멘보샤\ncategories:\n- food\n---\n\n![멘보샤](/images/food/20190605_124042_멘보샤.jpg \"멘보샤\")\n\n**멘보샤**","updated":"2019-08-25T06:20:28.523Z","path":"path/food/멘보샤.html","_id":"cjzqksops0004u8uhdciesfod","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190605_124042_멘보샤.jpg\" alt=\"멘보샤\" title=\"멘보샤\"></p>\n<p><strong>멘보샤</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190605_124042_멘보샤.jpg\" alt=\"멘보샤\" title=\"멘보샤\"></p>\n<p><strong>멘보샤</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","로스펀"],"categories":["food"],"_content":"\n![로스펀](/images/food/20190607_125701_로스펀.jpg \"로스펀\")\n\n**로스펀**","source":"path/food/로스펀.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 로스펀\ncategories:\n- food\n---\n\n![로스펀](/images/food/20190607_125701_로스펀.jpg \"로스펀\")\n\n**로스펀**","updated":"2019-08-25T06:20:28.532Z","path":"path/food/로스펀.html","_id":"cjzqkss2u0005u8uh167p0zuv","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190607_125701_로스펀.jpg\" alt=\"로스펀\" title=\"로스펀\"></p>\n<p><strong>로스펀</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190607_125701_로스펀.jpg\" alt=\"로스펀\" title=\"로스펀\"></p>\n<p><strong>로스펀</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","치아오지아오곱창"],"categories":["food"],"_content":"\n![치아오지아오곱창](/images/food/20190612_200306_치아오지아오곱창.jpg \"치아오지아오곱창\")\n\n**치아오지아오곱창**","source":"path/food/치아오지아오곱창.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 치아오지아오곱창\ncategories:\n- food\n---\n\n![치아오지아오곱창](/images/food/20190612_200306_치아오지아오곱창.jpg \"치아오지아오곱창\")\n\n**치아오지아오곱창**","updated":"2019-08-25T06:20:28.542Z","path":"path/food/치아오지아오곱창.html","_id":"cjzqkt1200007u8uhkh2rgl1v","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190612_200306_치아오지아오곱창.jpg\" alt=\"치아오지아오곱창\" title=\"치아오지아오곱창\"></p>\n<p><strong>치아오지아오곱창</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190612_200306_치아오지아오곱창.jpg\" alt=\"치아오지아오곱창\" title=\"치아오지아오곱창\"></p>\n<p><strong>치아오지아오곱창</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","쉐이주위"],"categories":["food"],"_content":"\n![쉐이주위](/images/food/20190612_201140_쉐이주위.jpg \"쉐이주위\")\n\n**쉐이주위**","source":"path/food/쉐이주위.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 쉐이주위\ncategories:\n- food\n---\n\n![쉐이주위](/images/food/20190612_201140_쉐이주위.jpg \"쉐이주위\")\n\n**쉐이주위**","updated":"2019-08-25T06:20:28.606Z","path":"path/food/쉐이주위.html","_id":"cjzqktaor0008u8uhew0yord7","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190612_201140_쉐이주위.jpg\" alt=\"쉐이주위\" title=\"쉐이주위\"></p>\n<p><strong>쉐이주위</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190612_201140_쉐이주위.jpg\" alt=\"쉐이주위\" title=\"쉐이주위\"></p>\n<p><strong>쉐이주위</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","마라탕"],"categories":["food"],"_content":"\n![마라탕](/images/food/20190614_193438_마라탕.jpg \"마라탕\")\n\n**마라탕**","source":"path/food/마라탕.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 마라탕\ncategories:\n- food\n---\n\n![마라탕](/images/food/20190614_193438_마라탕.jpg \"마라탕\")\n\n**마라탕**","updated":"2019-08-25T06:20:28.589Z","path":"path/food/마라탕.html","_id":"cjzqktf6j0009u8uh2ubi808l","comments":1,"layout":"page","content":"<p><img src=\"/images/food/20190614_193438_마라탕.jpg\" alt=\"마라탕\" title=\"마라탕\"></p>\n<p><strong>마라탕</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190614_193438_마라탕.jpg\" alt=\"마라탕\" title=\"마라탕\"></p>\n<p><strong>마라탕</strong></p>\n"},{"title":"chinese food","date":"2019-07-04T05:49:46.000Z","tags":["food","china","beijing","카오위"],"categories":["food"],"_content":"\n![카오위](/images/food/20190607_210106_카오위.jpg \"카오위\")\n\n**카오위**","source":"path/food/카오위.md","raw":"---\ntitle: chinese food\ndate: 2019-07-04 14:49:46\ntags:\n- food\n- china\n- beijing\n- 카오위\ncategories:\n- food\n---\n\n![카오위](/images/food/20190607_210106_카오위.jpg \"카오위\")\n\n**카오위**","updated":"2019-08-25T06:20:28.551Z","path":"path/food/카오위.html","comments":1,"layout":"page","_id":"cjzql3n2u0000k4uhr5we0zd0","content":"<p><img src=\"/images/food/20190607_210106_카오위.jpg\" alt=\"카오위\" title=\"카오위\"></p>\n<p><strong>카오위</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/food/20190607_210106_카오위.jpg\" alt=\"카오위\" title=\"카오위\"></p>\n<p><strong>카오위</strong></p>\n"}],"Post":[{"title":"flutter","date":"2019-01-18T05:49:46.000Z","_content":"\n## flutter 설치하기 \n\nflutter는 windows, mac, linux에 설치할 수 있다.\n\n### 시스템 요구사항\n- windows 7 이상\n- 400mb 이상 disk\n- powershell 5.0 이상 / git 사용가능 상태\n\n### SDK 설치(https://flutter.io/setup-windows/)\n1. SDK 다운로드 받기\n2. 다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기\n3.  `flutter` 디렉토리에 있는 `flutter_console.bat`파일을 더블클릭해서 실행\n\n### 설정에 필요한 flutter 기본 command\n```jshelllanguage\n#setup 완료를 위해 필요한 디펜던시 확인하기\nflutter doctor\n#flutter 설정 확인하기\nflutter config\n```\n\n### 기타\n- flutter 업그레이드 하기 (https://flutter.io/upgrading/)\n- flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)\n  - 윈도우 환경설정 path에 `flutter\\bin;` 위치 추가하기\n  \n## android studio 설치\n\nIDE는 vs code, intellij, android studio를 지원한다. (https://flutter.io/get-started/editor/)\n\nandroid studio, flutter plugin 설치하기\n- file -> settings -> plugins, search flutter and install (dart plugin 같이 설치필요)\n\n\n## 프로젝트 생성하기 (android studio)\n\n1. flutter 프로젝트 생성\n![new flutter project](/images/flutter/new_flutter_prj.png \"create flutter project\")\n2. flutter application 선택 \n3. flutter sdk path 는 압축해제한 flutter 디렉토리 지정\n4. finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.\n![main.dart](/images/flutter/created_flutter_app.png \"created flutter\")\n\n## device 설정하기 (android studio)\n\n- flutter는 Android API 16이상 device가 필요합니다.\n- tools -> AVD Manager -> Create Virtual Device...\n- tools -> SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)\n- 가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.\n![virtual device](/images/flutter/virtual_device.png \"virtual device\")\n- command로 디바이스 확인하고 실행하기\n  - 디바이스 확인 : `flutter devices`\n  - 디바이스 실행 : `flutter run`\n\n## flutter package repository\nhttps://pub.dartlang.org/flutter/\n\n## flutter 공부하기 \n- free course : https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905","source":"_posts/flutter.md","raw":"---\ntitle: flutter\ndate: 2019-01-18 14:49:46\ntags:\n- mobile\n- flutter\ncategories:\n- flutter\n---\n\n## flutter 설치하기 \n\nflutter는 windows, mac, linux에 설치할 수 있다.\n\n### 시스템 요구사항\n- windows 7 이상\n- 400mb 이상 disk\n- powershell 5.0 이상 / git 사용가능 상태\n\n### SDK 설치(https://flutter.io/setup-windows/)\n1. SDK 다운로드 받기\n2. 다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기\n3.  `flutter` 디렉토리에 있는 `flutter_console.bat`파일을 더블클릭해서 실행\n\n### 설정에 필요한 flutter 기본 command\n```jshelllanguage\n#setup 완료를 위해 필요한 디펜던시 확인하기\nflutter doctor\n#flutter 설정 확인하기\nflutter config\n```\n\n### 기타\n- flutter 업그레이드 하기 (https://flutter.io/upgrading/)\n- flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)\n  - 윈도우 환경설정 path에 `flutter\\bin;` 위치 추가하기\n  \n## android studio 설치\n\nIDE는 vs code, intellij, android studio를 지원한다. (https://flutter.io/get-started/editor/)\n\nandroid studio, flutter plugin 설치하기\n- file -> settings -> plugins, search flutter and install (dart plugin 같이 설치필요)\n\n\n## 프로젝트 생성하기 (android studio)\n\n1. flutter 프로젝트 생성\n![new flutter project](/images/flutter/new_flutter_prj.png \"create flutter project\")\n2. flutter application 선택 \n3. flutter sdk path 는 압축해제한 flutter 디렉토리 지정\n4. finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.\n![main.dart](/images/flutter/created_flutter_app.png \"created flutter\")\n\n## device 설정하기 (android studio)\n\n- flutter는 Android API 16이상 device가 필요합니다.\n- tools -> AVD Manager -> Create Virtual Device...\n- tools -> SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)\n- 가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.\n![virtual device](/images/flutter/virtual_device.png \"virtual device\")\n- command로 디바이스 확인하고 실행하기\n  - 디바이스 확인 : `flutter devices`\n  - 디바이스 실행 : `flutter run`\n\n## flutter package repository\nhttps://pub.dartlang.org/flutter/\n\n## flutter 공부하기 \n- free course : https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905","slug":"flutter","published":1,"updated":"2019-01-19T13:16:19.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8uy0000y8uhzvcekkrs","content":"<h2 id=\"flutter-설치하기\"><a href=\"#flutter-설치하기\" class=\"headerlink\" title=\"flutter 설치하기\"></a>flutter 설치하기</h2><p>flutter는 windows, mac, linux에 설치할 수 있다.</p>\n<h3 id=\"시스템-요구사항\"><a href=\"#시스템-요구사항\" class=\"headerlink\" title=\"시스템 요구사항\"></a>시스템 요구사항</h3><ul>\n<li>windows 7 이상</li>\n<li>400mb 이상 disk</li>\n<li>powershell 5.0 이상 / git 사용가능 상태</li>\n</ul>\n<h3 id=\"SDK-설치-https-flutter-io-setup-windows\"><a href=\"#SDK-설치-https-flutter-io-setup-windows\" class=\"headerlink\" title=\"SDK 설치(https://flutter.io/setup-windows/)\"></a>SDK 설치(<a href=\"https://flutter.io/setup-windows/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/setup-windows/</a>)</h3><ol>\n<li>SDK 다운로드 받기</li>\n<li>다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기</li>\n<li><code>flutter</code> 디렉토리에 있는 <code>flutter_console.bat</code>파일을 더블클릭해서 실행</li>\n</ol>\n<h3 id=\"설정에-필요한-flutter-기본-command\"><a href=\"#설정에-필요한-flutter-기본-command\" class=\"headerlink\" title=\"설정에 필요한 flutter 기본 command\"></a>설정에 필요한 flutter 기본 command</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#setup 완료를 위해 필요한 디펜던시 확인하기</span><br><span class=\"line\">flutter doctor</span><br><span class=\"line\">#flutter 설정 확인하기</span><br><span class=\"line\">flutter config</span><br></pre></td></tr></table></figure>\n<h3 id=\"기타\"><a href=\"#기타\" class=\"headerlink\" title=\"기타\"></a>기타</h3><ul>\n<li>flutter 업그레이드 하기 (<a href=\"https://flutter.io/upgrading/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/upgrading/</a>)</li>\n<li>flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)<ul>\n<li>윈도우 환경설정 path에 <code>flutter\\bin;</code> 위치 추가하기</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"android-studio-설치\"><a href=\"#android-studio-설치\" class=\"headerlink\" title=\"android studio 설치\"></a>android studio 설치</h2><p>IDE는 vs code, intellij, android studio를 지원한다. (<a href=\"https://flutter.io/get-started/editor/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/get-started/editor/</a>)</p>\n<p>android studio, flutter plugin 설치하기</p>\n<ul>\n<li>file -&gt; settings -&gt; plugins, search flutter and install (dart plugin 같이 설치필요)</li>\n</ul>\n<h2 id=\"프로젝트-생성하기-android-studio\"><a href=\"#프로젝트-생성하기-android-studio\" class=\"headerlink\" title=\"프로젝트 생성하기 (android studio)\"></a>프로젝트 생성하기 (android studio)</h2><ol>\n<li>flutter 프로젝트 생성<br><img src=\"/images/flutter/new_flutter_prj.png\" alt=\"new flutter project\" title=\"create flutter project\"></li>\n<li>flutter application 선택 </li>\n<li>flutter sdk path 는 압축해제한 flutter 디렉토리 지정</li>\n<li>finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.<br><img src=\"/images/flutter/created_flutter_app.png\" alt=\"main.dart\" title=\"created flutter\"></li>\n</ol>\n<h2 id=\"device-설정하기-android-studio\"><a href=\"#device-설정하기-android-studio\" class=\"headerlink\" title=\"device 설정하기 (android studio)\"></a>device 설정하기 (android studio)</h2><ul>\n<li>flutter는 Android API 16이상 device가 필요합니다.</li>\n<li>tools -&gt; AVD Manager -&gt; Create Virtual Device…</li>\n<li>tools -&gt; SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)</li>\n<li>가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.<br><img src=\"/images/flutter/virtual_device.png\" alt=\"virtual device\" title=\"virtual device\"></li>\n<li>command로 디바이스 확인하고 실행하기<ul>\n<li>디바이스 확인 : <code>flutter devices</code></li>\n<li>디바이스 실행 : <code>flutter run</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"flutter-package-repository\"><a href=\"#flutter-package-repository\" class=\"headerlink\" title=\"flutter package repository\"></a>flutter package repository</h2><p><a href=\"https://pub.dartlang.org/flutter/\" target=\"_blank\" rel=\"noopener\">https://pub.dartlang.org/flutter/</a></p>\n<h2 id=\"flutter-공부하기\"><a href=\"#flutter-공부하기\" class=\"headerlink\" title=\"flutter 공부하기\"></a>flutter 공부하기</h2><ul>\n<li>free course : <a href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\" target=\"_blank\" rel=\"noopener\">https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"flutter-설치하기\"><a href=\"#flutter-설치하기\" class=\"headerlink\" title=\"flutter 설치하기\"></a>flutter 설치하기</h2><p>flutter는 windows, mac, linux에 설치할 수 있다.</p>\n<h3 id=\"시스템-요구사항\"><a href=\"#시스템-요구사항\" class=\"headerlink\" title=\"시스템 요구사항\"></a>시스템 요구사항</h3><ul>\n<li>windows 7 이상</li>\n<li>400mb 이상 disk</li>\n<li>powershell 5.0 이상 / git 사용가능 상태</li>\n</ul>\n<h3 id=\"SDK-설치-https-flutter-io-setup-windows\"><a href=\"#SDK-설치-https-flutter-io-setup-windows\" class=\"headerlink\" title=\"SDK 설치(https://flutter.io/setup-windows/)\"></a>SDK 설치(<a href=\"https://flutter.io/setup-windows/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/setup-windows/</a>)</h3><ol>\n<li>SDK 다운로드 받기</li>\n<li>다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기</li>\n<li><code>flutter</code> 디렉토리에 있는 <code>flutter_console.bat</code>파일을 더블클릭해서 실행</li>\n</ol>\n<h3 id=\"설정에-필요한-flutter-기본-command\"><a href=\"#설정에-필요한-flutter-기본-command\" class=\"headerlink\" title=\"설정에 필요한 flutter 기본 command\"></a>설정에 필요한 flutter 기본 command</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#setup 완료를 위해 필요한 디펜던시 확인하기</span><br><span class=\"line\">flutter doctor</span><br><span class=\"line\">#flutter 설정 확인하기</span><br><span class=\"line\">flutter config</span><br></pre></td></tr></table></figure>\n<h3 id=\"기타\"><a href=\"#기타\" class=\"headerlink\" title=\"기타\"></a>기타</h3><ul>\n<li>flutter 업그레이드 하기 (<a href=\"https://flutter.io/upgrading/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/upgrading/</a>)</li>\n<li>flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)<ul>\n<li>윈도우 환경설정 path에 <code>flutter\\bin;</code> 위치 추가하기</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"android-studio-설치\"><a href=\"#android-studio-설치\" class=\"headerlink\" title=\"android studio 설치\"></a>android studio 설치</h2><p>IDE는 vs code, intellij, android studio를 지원한다. (<a href=\"https://flutter.io/get-started/editor/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/get-started/editor/</a>)</p>\n<p>android studio, flutter plugin 설치하기</p>\n<ul>\n<li>file -&gt; settings -&gt; plugins, search flutter and install (dart plugin 같이 설치필요)</li>\n</ul>\n<h2 id=\"프로젝트-생성하기-android-studio\"><a href=\"#프로젝트-생성하기-android-studio\" class=\"headerlink\" title=\"프로젝트 생성하기 (android studio)\"></a>프로젝트 생성하기 (android studio)</h2><ol>\n<li>flutter 프로젝트 생성<br><img src=\"/images/flutter/new_flutter_prj.png\" alt=\"new flutter project\" title=\"create flutter project\"></li>\n<li>flutter application 선택 </li>\n<li>flutter sdk path 는 압축해제한 flutter 디렉토리 지정</li>\n<li>finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.<br><img src=\"/images/flutter/created_flutter_app.png\" alt=\"main.dart\" title=\"created flutter\"></li>\n</ol>\n<h2 id=\"device-설정하기-android-studio\"><a href=\"#device-설정하기-android-studio\" class=\"headerlink\" title=\"device 설정하기 (android studio)\"></a>device 설정하기 (android studio)</h2><ul>\n<li>flutter는 Android API 16이상 device가 필요합니다.</li>\n<li>tools -&gt; AVD Manager -&gt; Create Virtual Device…</li>\n<li>tools -&gt; SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)</li>\n<li>가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.<br><img src=\"/images/flutter/virtual_device.png\" alt=\"virtual device\" title=\"virtual device\"></li>\n<li>command로 디바이스 확인하고 실행하기<ul>\n<li>디바이스 확인 : <code>flutter devices</code></li>\n<li>디바이스 실행 : <code>flutter run</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"flutter-package-repository\"><a href=\"#flutter-package-repository\" class=\"headerlink\" title=\"flutter package repository\"></a>flutter package repository</h2><p><a href=\"https://pub.dartlang.org/flutter/\" target=\"_blank\" rel=\"noopener\">https://pub.dartlang.org/flutter/</a></p>\n<h2 id=\"flutter-공부하기\"><a href=\"#flutter-공부하기\" class=\"headerlink\" title=\"flutter 공부하기\"></a>flutter 공부하기</h2><ul>\n<li>free course : <a href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\" target=\"_blank\" rel=\"noopener\">https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905</a></li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n$ hexo new post title\n\n$ hexo new draft title\n\n# draft to post\n$ hexo publish post title\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n$ hexo new post title\n\n$ hexo new draft title\n\n# draft to post\n$ hexo publish post title\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-01-01T13:32:29.641Z","updated":"2019-07-02T15:08:26.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8v40002y8uh3unw9ox6","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br><span class=\"line\">$ hexo new post title</span><br><span class=\"line\"></span><br><span class=\"line\">$ hexo new draft title</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># draft to post</span></span><br><span class=\"line\">$ hexo publish post title</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br><span class=\"line\">$ hexo new post title</span><br><span class=\"line\"></span><br><span class=\"line\">$ hexo new draft title</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># draft to post</span></span><br><span class=\"line\">$ hexo publish post title</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"how to use markdown","date":"2019-01-12T13:27:47.000Z","_content":"\nmarkdown으로 글쓰기\n\n### 제목을 지정해보자\n\n```\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n```\n\n### 링크 첨부하기\n\n```\n[Link1](https://j2yes.github.io/)\n\n[j2yess@gmail.com](mailto:j2yess@gmail.com)\n```\n> [Link1](https://j2yes.github.io/)\n\n> [j2yess@gmail.com](mailto:j2yess@gmail.com)\n\n### 이미지 첨부하기\n\n```\n![background](/images/jenkins/1.png \"Optional title\")\n```\n\n![background](/images/jenkins/1.png \"Optional title\")\n\n### 파일(PDF) 첨부하기\n\n```\n[다운로드](/assets/mydoc.pdf)\n```\n\n> [다운로드](/assets/mydoc.pdf)\n\n### 코드(GIST) 첨부하기\n\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n\n### 코드블럭 첨부하기\n\n```sbtshell\nps -ef | grep oh\n```\n\n```javascript\nconsole.log('oh');\n```\n\n```java\nstatic void main(String args[]) {\n    \n}\n```\n    \n\n### 수평선으로 구분하기\n\n```\n---\nor\n***\nor\n___\n```\n\n### 번호 없는 리스트\n\n```\n+ Java\n- Python\n* Ruby\n```\n\n+ Java\n- Python\n* Ruby\n\n### 번호 있는 리스트\n\n```\n1. 첫번째\n2. 두번째\n3. 세번째\n```\n\n1. 첫번째\n2. 두번째\n3. 세번째\n\n### 체크박스 \n\n```\n- [ ] 리스트1\n- [X] 리스트2\n```\n\n- [ ] 리스트1\n- [X] 리스트1\n\n### 텍스트에 효과주기\n\n```\n**두껍게**\n~~취소선~~\n```\n\n기본글씨\n\n**두껍게**\n\n~~취소선~~\n\n### \\` 사용하기\n\n```\n\\`\n```\n\n> \\`\n\n### 음영효과주기\n\n```\n`keyword`\n```\n\n`keyword`\n\n\n### Table\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n\n### 참고사이트\n* https://sourceforge.net/p/collapse/wiki/markdown_syntax/\n* http://commonmark.org/help/tutorial/index.html\n* https://guides.github.com/features/mastering-markdown/\n* http://marxi.co/","source":"_posts/markdown.md","raw":"---\ntitle: how to use markdown\ndate: 2019-01-12 22:27:47\ntags:\n- markdown\ncategories:\n- markdown\n---\n\nmarkdown으로 글쓰기\n\n### 제목을 지정해보자\n\n```\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n```\n\n### 링크 첨부하기\n\n```\n[Link1](https://j2yes.github.io/)\n\n[j2yess@gmail.com](mailto:j2yess@gmail.com)\n```\n> [Link1](https://j2yes.github.io/)\n\n> [j2yess@gmail.com](mailto:j2yess@gmail.com)\n\n### 이미지 첨부하기\n\n```\n![background](/images/jenkins/1.png \"Optional title\")\n```\n\n![background](/images/jenkins/1.png \"Optional title\")\n\n### 파일(PDF) 첨부하기\n\n```\n[다운로드](/assets/mydoc.pdf)\n```\n\n> [다운로드](/assets/mydoc.pdf)\n\n### 코드(GIST) 첨부하기\n\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n\n### 코드블럭 첨부하기\n\n```sbtshell\nps -ef | grep oh\n```\n\n```javascript\nconsole.log('oh');\n```\n\n```java\nstatic void main(String args[]) {\n    \n}\n```\n    \n\n### 수평선으로 구분하기\n\n```\n---\nor\n***\nor\n___\n```\n\n### 번호 없는 리스트\n\n```\n+ Java\n- Python\n* Ruby\n```\n\n+ Java\n- Python\n* Ruby\n\n### 번호 있는 리스트\n\n```\n1. 첫번째\n2. 두번째\n3. 세번째\n```\n\n1. 첫번째\n2. 두번째\n3. 세번째\n\n### 체크박스 \n\n```\n- [ ] 리스트1\n- [X] 리스트2\n```\n\n- [ ] 리스트1\n- [X] 리스트1\n\n### 텍스트에 효과주기\n\n```\n**두껍게**\n~~취소선~~\n```\n\n기본글씨\n\n**두껍게**\n\n~~취소선~~\n\n### \\` 사용하기\n\n```\n\\`\n```\n\n> \\`\n\n### 음영효과주기\n\n```\n`keyword`\n```\n\n`keyword`\n\n\n### Table\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n\n### 참고사이트\n* https://sourceforge.net/p/collapse/wiki/markdown_syntax/\n* http://commonmark.org/help/tutorial/index.html\n* https://guides.github.com/features/mastering-markdown/\n* http://marxi.co/","slug":"markdown","published":1,"updated":"2019-01-19T13:16:19.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8va0006y8uhlkvqjzib","content":"<p>markdown으로 글쓰기</p>\n<h3 id=\"제목을-지정해보자\"><a href=\"#제목을-지정해보자\" class=\"headerlink\" title=\"제목을 지정해보자\"></a>제목을 지정해보자</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># H1</span><br><span class=\"line\">## H2</span><br><span class=\"line\">### H3</span><br><span class=\"line\">#### H4</span><br><span class=\"line\">##### H5</span><br><span class=\"line\">###### H6</span><br></pre></td></tr></table></figure>\n<h3 id=\"링크-첨부하기\"><a href=\"#링크-첨부하기\" class=\"headerlink\" title=\"링크 첨부하기\"></a>링크 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Link1](https://j2yes.github.io/)</span><br><span class=\"line\"></span><br><span class=\"line\">[j2yess@gmail.com](mailto:j2yess@gmail.com)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"https://j2yes.github.io/\">Link1</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"mailto:j2yess@gmail.com\" target=\"_blank\" rel=\"noopener\">j2yess@gmail.com</a></p>\n</blockquote>\n<h3 id=\"이미지-첨부하기\"><a href=\"#이미지-첨부하기\" class=\"headerlink\" title=\"이미지 첨부하기\"></a>이미지 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![background](/images/jenkins/1.png &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/jenkins/1.png\" alt=\"background\" title=\"Optional title\"></p>\n<h3 id=\"파일-PDF-첨부하기\"><a href=\"#파일-PDF-첨부하기\" class=\"headerlink\" title=\"파일(PDF) 첨부하기\"></a>파일(PDF) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[다운로드](/assets/mydoc.pdf)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"/assets/mydoc.pdf\">다운로드</a></p>\n</blockquote>\n<h3 id=\"코드-GIST-첨부하기\"><a href=\"#코드-GIST-첨부하기\" class=\"headerlink\" title=\"코드(GIST) 첨부하기\"></a>코드(GIST) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gist j2yes/3451d495ee5b9a601385 %&#125;</span><br></pre></td></tr></table></figure>\n<script src=\"//gist.github.com/j2yes/3451d495ee5b9a601385.js\"></script>\n<h3 id=\"코드블럭-첨부하기\"><a href=\"#코드블럭-첨부하기\" class=\"headerlink\" title=\"코드블럭 첨부하기\"></a>코드블럭 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep oh</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'oh'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"수평선으로-구분하기\"><a href=\"#수평선으로-구분하기\" class=\"headerlink\" title=\"수평선으로 구분하기\"></a>수평선으로 구분하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">or</span><br><span class=\"line\">***</span><br><span class=\"line\">or</span><br><span class=\"line\">___</span><br></pre></td></tr></table></figure>\n<h3 id=\"번호-없는-리스트\"><a href=\"#번호-없는-리스트\" class=\"headerlink\" title=\"번호 없는 리스트\"></a>번호 없는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ Java</span><br><span class=\"line\">- Python</span><br><span class=\"line\">* Ruby</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Java</li>\n</ul>\n<ul>\n<li>Python</li>\n</ul>\n<ul>\n<li>Ruby</li>\n</ul>\n<h3 id=\"번호-있는-리스트\"><a href=\"#번호-있는-리스트\" class=\"headerlink\" title=\"번호 있는 리스트\"></a>번호 있는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 첫번째</span><br><span class=\"line\">2. 두번째</span><br><span class=\"line\">3. 세번째</span><br></pre></td></tr></table></figure>\n<ol>\n<li>첫번째</li>\n<li>두번째</li>\n<li>세번째</li>\n</ol>\n<h3 id=\"체크박스\"><a href=\"#체크박스\" class=\"headerlink\" title=\"체크박스\"></a>체크박스</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- [ ] 리스트1</span><br><span class=\"line\">- [X] 리스트2</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 리스트1</li>\n<li>[X] 리스트1</li>\n</ul>\n<h3 id=\"텍스트에-효과주기\"><a href=\"#텍스트에-효과주기\" class=\"headerlink\" title=\"텍스트에 효과주기\"></a>텍스트에 효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**두껍게**</span><br><span class=\"line\">~~취소선~~</span><br></pre></td></tr></table></figure>\n<p>기본글씨</p>\n<p><strong>두껍게</strong></p>\n<p><del>취소선</del></p>\n<h3 id=\"사용하기\"><a href=\"#사용하기\" class=\"headerlink\" title=\"` 사용하기\"></a>` 사용하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\`</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>`</p>\n</blockquote>\n<h3 id=\"음영효과주기\"><a href=\"#음영효과주기\" class=\"headerlink\" title=\"음영효과주기\"></a>음영효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`keyword`</span><br></pre></td></tr></table></figure>\n<p><code>keyword</code></p>\n<h3 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Item</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Qty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Computer</td>\n<td style=\"text-align:right\">1600 USD</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Phone</td>\n<td style=\"text-align:right\">12 USD</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Pipe</td>\n<td style=\"text-align:right\">1 USD</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"참고사이트\"><a href=\"#참고사이트\" class=\"headerlink\" title=\"참고사이트\"></a>참고사이트</h3><ul>\n<li><a href=\"https://sourceforge.net/p/collapse/wiki/markdown_syntax/\" target=\"_blank\" rel=\"noopener\">https://sourceforge.net/p/collapse/wiki/markdown_syntax/</a></li>\n<li><a href=\"http://commonmark.org/help/tutorial/index.html\" target=\"_blank\" rel=\"noopener\">http://commonmark.org/help/tutorial/index.html</a></li>\n<li><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></li>\n<li><a href=\"http://marxi.co/\" target=\"_blank\" rel=\"noopener\">http://marxi.co/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>markdown으로 글쓰기</p>\n<h3 id=\"제목을-지정해보자\"><a href=\"#제목을-지정해보자\" class=\"headerlink\" title=\"제목을 지정해보자\"></a>제목을 지정해보자</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># H1</span><br><span class=\"line\">## H2</span><br><span class=\"line\">### H3</span><br><span class=\"line\">#### H4</span><br><span class=\"line\">##### H5</span><br><span class=\"line\">###### H6</span><br></pre></td></tr></table></figure>\n<h3 id=\"링크-첨부하기\"><a href=\"#링크-첨부하기\" class=\"headerlink\" title=\"링크 첨부하기\"></a>링크 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Link1](https://j2yes.github.io/)</span><br><span class=\"line\"></span><br><span class=\"line\">[j2yess@gmail.com](mailto:j2yess@gmail.com)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"https://j2yes.github.io/\">Link1</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"mailto:j2yess@gmail.com\" target=\"_blank\" rel=\"noopener\">j2yess@gmail.com</a></p>\n</blockquote>\n<h3 id=\"이미지-첨부하기\"><a href=\"#이미지-첨부하기\" class=\"headerlink\" title=\"이미지 첨부하기\"></a>이미지 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![background](/images/jenkins/1.png &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/jenkins/1.png\" alt=\"background\" title=\"Optional title\"></p>\n<h3 id=\"파일-PDF-첨부하기\"><a href=\"#파일-PDF-첨부하기\" class=\"headerlink\" title=\"파일(PDF) 첨부하기\"></a>파일(PDF) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[다운로드](/assets/mydoc.pdf)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"/assets/mydoc.pdf\">다운로드</a></p>\n</blockquote>\n<h3 id=\"코드-GIST-첨부하기\"><a href=\"#코드-GIST-첨부하기\" class=\"headerlink\" title=\"코드(GIST) 첨부하기\"></a>코드(GIST) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gist j2yes/3451d495ee5b9a601385 %&#125;</span><br></pre></td></tr></table></figure>\n<script src=\"//gist.github.com/j2yes/3451d495ee5b9a601385.js\"></script>\n<h3 id=\"코드블럭-첨부하기\"><a href=\"#코드블럭-첨부하기\" class=\"headerlink\" title=\"코드블럭 첨부하기\"></a>코드블럭 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep oh</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'oh'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"수평선으로-구분하기\"><a href=\"#수평선으로-구분하기\" class=\"headerlink\" title=\"수평선으로 구분하기\"></a>수평선으로 구분하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">or</span><br><span class=\"line\">***</span><br><span class=\"line\">or</span><br><span class=\"line\">___</span><br></pre></td></tr></table></figure>\n<h3 id=\"번호-없는-리스트\"><a href=\"#번호-없는-리스트\" class=\"headerlink\" title=\"번호 없는 리스트\"></a>번호 없는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ Java</span><br><span class=\"line\">- Python</span><br><span class=\"line\">* Ruby</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Java</li>\n</ul>\n<ul>\n<li>Python</li>\n</ul>\n<ul>\n<li>Ruby</li>\n</ul>\n<h3 id=\"번호-있는-리스트\"><a href=\"#번호-있는-리스트\" class=\"headerlink\" title=\"번호 있는 리스트\"></a>번호 있는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 첫번째</span><br><span class=\"line\">2. 두번째</span><br><span class=\"line\">3. 세번째</span><br></pre></td></tr></table></figure>\n<ol>\n<li>첫번째</li>\n<li>두번째</li>\n<li>세번째</li>\n</ol>\n<h3 id=\"체크박스\"><a href=\"#체크박스\" class=\"headerlink\" title=\"체크박스\"></a>체크박스</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- [ ] 리스트1</span><br><span class=\"line\">- [X] 리스트2</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 리스트1</li>\n<li>[X] 리스트1</li>\n</ul>\n<h3 id=\"텍스트에-효과주기\"><a href=\"#텍스트에-효과주기\" class=\"headerlink\" title=\"텍스트에 효과주기\"></a>텍스트에 효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**두껍게**</span><br><span class=\"line\">~~취소선~~</span><br></pre></td></tr></table></figure>\n<p>기본글씨</p>\n<p><strong>두껍게</strong></p>\n<p><del>취소선</del></p>\n<h3 id=\"사용하기\"><a href=\"#사용하기\" class=\"headerlink\" title=\"` 사용하기\"></a>` 사용하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\`</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>`</p>\n</blockquote>\n<h3 id=\"음영효과주기\"><a href=\"#음영효과주기\" class=\"headerlink\" title=\"음영효과주기\"></a>음영효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`keyword`</span><br></pre></td></tr></table></figure>\n<p><code>keyword</code></p>\n<h3 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Item</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Qty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Computer</td>\n<td style=\"text-align:right\">1600 USD</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Phone</td>\n<td style=\"text-align:right\">12 USD</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Pipe</td>\n<td style=\"text-align:right\">1 USD</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"참고사이트\"><a href=\"#참고사이트\" class=\"headerlink\" title=\"참고사이트\"></a>참고사이트</h3><ul>\n<li><a href=\"https://sourceforge.net/p/collapse/wiki/markdown_syntax/\" target=\"_blank\" rel=\"noopener\">https://sourceforge.net/p/collapse/wiki/markdown_syntax/</a></li>\n<li><a href=\"http://commonmark.org/help/tutorial/index.html\" target=\"_blank\" rel=\"noopener\">http://commonmark.org/help/tutorial/index.html</a></li>\n<li><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></li>\n<li><a href=\"http://marxi.co/\" target=\"_blank\" rel=\"noopener\">http://marxi.co/</a></li>\n</ul>\n"},{"title":"intellij-tip","_content":"","source":"_drafts/intellij-tip.md","raw":"---\ntitle: intellij-tip\ntags:\ncategories:\n---\n","slug":"intellij-tip","published":0,"date":"2019-06-15T01:17:31.888Z","updated":"2019-06-15T01:17:31.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8vc0008y8uhio555s5g","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"rsync","_content":"","source":"_drafts/rsync.md","raw":"---\ntitle: rsync\ntags:\ncategories:\n---\n","slug":"rsync","published":0,"date":"2019-03-24T04:56:11.716Z","updated":"2019-03-24T04:56:11.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8vg000ay8uh9qr8psig","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"jpa","_content":"","source":"_drafts/jpa.md","raw":"---\ntitle: jpa\ntags:\ncategories:\n---\n","slug":"jpa","published":0,"date":"2019-02-24T12:00:57.328Z","updated":"2019-02-24T12:00:57.329Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8vl000ey8uh19ej3npq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"claudiajs-get-started","date":"2019-01-19T13:20:19.000Z","_content":"### claudiajs : https://claudiajs.com\n\n1. install claudia\n2. execute command `npm init`\n3. make lambda.js\n4. set aws credential on user root path\n5. create lambda function as command with profile\n6. invoke lambda with profile : `claudia test-lambda --profile claudia`\n7. update lambda : `claudia update`\n8. mongodb example project\n\n### install claudia\n\n```jshelllanguage\n# global installation\nnpm install claudia -g\n\n# check installation\nclaudia -version\n```\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n### make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\n\n```javascript\n// 1.normal example\nexports.myHandler = function(event, context) {\n   ...\n}\n// 2.you can use callback\nexports.handler = function(event, context, callback) {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    console.log('value1 =', event.key1);\n    console.log('value2 =', event.key2);\n    console.log('value3 =', event.key3);\n    console.log('remaining time =', context.getRemainingTimeInMillis());\n    console.log('functionName =', context.functionName);\n    console.log('AWSrequestID =', context.awsRequestId);\n    console.log('logGroupName =', context.log_group_name);\n    console.log('logStreamName =', context.log_stream_name);\n    console.log('clientContext =', context.clientContext);\n    if (typeof context.identity !== 'undefined') {\n        console.log('Cognitoidentity ID =', context.identity.cognitoIdentityId);\n    }    \n    callback(null, event.key1); // Echo back the first key value\n    // or\n    // callback(\"some error type\"); \n};\n// 3.below is available on node 8.xx\nexports.myHandler = async function(event, context) {\n   console.log(\"value1 = \" + event.key1);\n   console.log(\"value2 = \" + event.key2);  \n   return \"some success message\";\n   // or \n   // throw new Error(“some error type”); \n} \n```\n\n### setting AWS IAM \n- https://claudiajs.com/tutorials/installing.html \n- https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\n\nmake file `.aws/credentials`  \n\n> first line is profile name.\n\n```jshelllanguage\n[claudia]\naws_access_key_id = YOUR_ACCESS_KEY\naws_secret_access_key = YOUR_ACCESS_SECRET\n```\n\n### create lambda function\n\nseoul region is `ap-northeast-2`.\n \n```jshelllanguage\n# create lambda\nclaudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia\n```\n\n### invoke lambda\n\n```jshelllanguage\n#'test-' prefix is required.\nclaudia test-lambda --profile claudia\n```\n\n### update lambda with npm run command\n\npackage.json\n\n```json\n...\n  \"scripts\": {\n    \"test\": \"claudia test-lambda --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\nupdate command : `npm run deploy`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-mongodb)","source":"_posts/cloudiajs/claudiajs-get-started.md","raw":"---\ntitle: claudiajs-get-started\ndate: 2019-01-19 22:20:19\ntags:\n- aws\n- lambda\n- claudiajs\ncategories:\n- claudiajs\n---\n### claudiajs : https://claudiajs.com\n\n1. install claudia\n2. execute command `npm init`\n3. make lambda.js\n4. set aws credential on user root path\n5. create lambda function as command with profile\n6. invoke lambda with profile : `claudia test-lambda --profile claudia`\n7. update lambda : `claudia update`\n8. mongodb example project\n\n### install claudia\n\n```jshelllanguage\n# global installation\nnpm install claudia -g\n\n# check installation\nclaudia -version\n```\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n### make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\n\n```javascript\n// 1.normal example\nexports.myHandler = function(event, context) {\n   ...\n}\n// 2.you can use callback\nexports.handler = function(event, context, callback) {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    console.log('value1 =', event.key1);\n    console.log('value2 =', event.key2);\n    console.log('value3 =', event.key3);\n    console.log('remaining time =', context.getRemainingTimeInMillis());\n    console.log('functionName =', context.functionName);\n    console.log('AWSrequestID =', context.awsRequestId);\n    console.log('logGroupName =', context.log_group_name);\n    console.log('logStreamName =', context.log_stream_name);\n    console.log('clientContext =', context.clientContext);\n    if (typeof context.identity !== 'undefined') {\n        console.log('Cognitoidentity ID =', context.identity.cognitoIdentityId);\n    }    \n    callback(null, event.key1); // Echo back the first key value\n    // or\n    // callback(\"some error type\"); \n};\n// 3.below is available on node 8.xx\nexports.myHandler = async function(event, context) {\n   console.log(\"value1 = \" + event.key1);\n   console.log(\"value2 = \" + event.key2);  \n   return \"some success message\";\n   // or \n   // throw new Error(“some error type”); \n} \n```\n\n### setting AWS IAM \n- https://claudiajs.com/tutorials/installing.html \n- https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\n\nmake file `.aws/credentials`  \n\n> first line is profile name.\n\n```jshelllanguage\n[claudia]\naws_access_key_id = YOUR_ACCESS_KEY\naws_secret_access_key = YOUR_ACCESS_SECRET\n```\n\n### create lambda function\n\nseoul region is `ap-northeast-2`.\n \n```jshelllanguage\n# create lambda\nclaudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia\n```\n\n### invoke lambda\n\n```jshelllanguage\n#'test-' prefix is required.\nclaudia test-lambda --profile claudia\n```\n\n### update lambda with npm run command\n\npackage.json\n\n```json\n...\n  \"scripts\": {\n    \"test\": \"claudia test-lambda --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\nupdate command : `npm run deploy`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-mongodb)","slug":"cloudiajs/claudiajs-get-started","published":1,"updated":"2019-01-19T13:29:05.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8z6000ly8uh6o9xs31m","content":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>install claudia</li>\n<li>execute command <code>npm init</code></li>\n<li>make lambda.js</li>\n<li>set aws credential on user root path</li>\n<li>create lambda function as command with profile</li>\n<li>invoke lambda with profile : <code>claudia test-lambda --profile claudia</code></li>\n<li>update lambda : <code>claudia update</code></li>\n<li>mongodb example project</li>\n</ol>\n<h3 id=\"install-claudia\"><a href=\"#install-claudia\" class=\"headerlink\" title=\"install claudia\"></a>install claudia</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># global installation</span><br><span class=\"line\">npm install claudia -g</span><br><span class=\"line\"></span><br><span class=\"line\"># check installation</span><br><span class=\"line\">claudia -version</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\"><a href=\"#make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\" class=\"headerlink\" title=\"make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\"></a>make a lambda.js file : <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html</a></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.normal example</span></span><br><span class=\"line\">exports.myHandler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2.you can use callback</span></span><br><span class=\"line\">exports.handler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.log('Received event:', JSON.stringify(event, null, 2));</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value1 ='</span>, event.key1);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value2 ='</span>, event.key2);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value3 ='</span>, event.key3);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'remaining time ='</span>, context.getRemainingTimeInMillis());</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'functionName ='</span>, context.functionName);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'AWSrequestID ='</span>, context.awsRequestId);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logGroupName ='</span>, context.log_group_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logStreamName ='</span>, context.log_stream_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'clientContext ='</span>, context.clientContext);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> context.identity !== <span class=\"string\">'undefined'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Cognitoidentity ID ='</span>, context.identity.cognitoIdentityId);</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    callback(<span class=\"literal\">null</span>, event.key1); <span class=\"comment\">// Echo back the first key value</span></span><br><span class=\"line\">    <span class=\"comment\">// or</span></span><br><span class=\"line\">    <span class=\"comment\">// callback(\"some error type\"); </span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 3.below is available on node 8.xx</span></span><br><span class=\"line\">exports.myHandler = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value1 = \"</span> + event.key1);</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value2 = \"</span> + event.key2);  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">\"some success message\"</span>;</span><br><span class=\"line\">   <span class=\"comment\">// or </span></span><br><span class=\"line\">   <span class=\"comment\">// throw new Error(“some error type”); </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"setting-AWS-IAM\"><a href=\"#setting-AWS-IAM\" class=\"headerlink\" title=\"setting AWS IAM\"></a>setting AWS IAM</h3><ul>\n<li><a href=\"https://claudiajs.com/tutorials/installing.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/installing.html</a> </li>\n<li><a href=\"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html</a></li>\n</ul>\n<p>make file <code>.aws/credentials</code>  </p>\n<blockquote>\n<p>first line is profile name.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[claudia]</span><br><span class=\"line\">aws_access_key_id = YOUR_ACCESS_KEY</span><br><span class=\"line\">aws_secret_access_key = YOUR_ACCESS_SECRET</span><br></pre></td></tr></table></figure>\n<h3 id=\"create-lambda-function\"><a href=\"#create-lambda-function\" class=\"headerlink\" title=\"create lambda function\"></a>create lambda function</h3><p>seoul region is <code>ap-northeast-2</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># create lambda</span><br><span class=\"line\">claudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"invoke-lambda\"><a href=\"#invoke-lambda\" class=\"headerlink\" title=\"invoke lambda\"></a>invoke lambda</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#&apos;test-&apos; prefix is required.</span><br><span class=\"line\">claudia test-lambda --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"update-lambda-with-npm-run-command\"><a href=\"#update-lambda-with-npm-run-command\" class=\"headerlink\" title=\"update lambda with npm run command\"></a>update lambda with npm run command</h3><p>package.json</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"test\": \"claudia test-lambda --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>update command : <code>npm run deploy</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-mongodb\" target=\"_blank\" rel=\"noopener\">github</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>install claudia</li>\n<li>execute command <code>npm init</code></li>\n<li>make lambda.js</li>\n<li>set aws credential on user root path</li>\n<li>create lambda function as command with profile</li>\n<li>invoke lambda with profile : <code>claudia test-lambda --profile claudia</code></li>\n<li>update lambda : <code>claudia update</code></li>\n<li>mongodb example project</li>\n</ol>\n<h3 id=\"install-claudia\"><a href=\"#install-claudia\" class=\"headerlink\" title=\"install claudia\"></a>install claudia</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># global installation</span><br><span class=\"line\">npm install claudia -g</span><br><span class=\"line\"></span><br><span class=\"line\"># check installation</span><br><span class=\"line\">claudia -version</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\"><a href=\"#make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\" class=\"headerlink\" title=\"make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\"></a>make a lambda.js file : <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html</a></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.normal example</span></span><br><span class=\"line\">exports.myHandler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2.you can use callback</span></span><br><span class=\"line\">exports.handler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.log('Received event:', JSON.stringify(event, null, 2));</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value1 ='</span>, event.key1);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value2 ='</span>, event.key2);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value3 ='</span>, event.key3);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'remaining time ='</span>, context.getRemainingTimeInMillis());</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'functionName ='</span>, context.functionName);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'AWSrequestID ='</span>, context.awsRequestId);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logGroupName ='</span>, context.log_group_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logStreamName ='</span>, context.log_stream_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'clientContext ='</span>, context.clientContext);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> context.identity !== <span class=\"string\">'undefined'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Cognitoidentity ID ='</span>, context.identity.cognitoIdentityId);</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    callback(<span class=\"literal\">null</span>, event.key1); <span class=\"comment\">// Echo back the first key value</span></span><br><span class=\"line\">    <span class=\"comment\">// or</span></span><br><span class=\"line\">    <span class=\"comment\">// callback(\"some error type\"); </span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 3.below is available on node 8.xx</span></span><br><span class=\"line\">exports.myHandler = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value1 = \"</span> + event.key1);</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value2 = \"</span> + event.key2);  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">\"some success message\"</span>;</span><br><span class=\"line\">   <span class=\"comment\">// or </span></span><br><span class=\"line\">   <span class=\"comment\">// throw new Error(“some error type”); </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"setting-AWS-IAM\"><a href=\"#setting-AWS-IAM\" class=\"headerlink\" title=\"setting AWS IAM\"></a>setting AWS IAM</h3><ul>\n<li><a href=\"https://claudiajs.com/tutorials/installing.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/installing.html</a> </li>\n<li><a href=\"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html</a></li>\n</ul>\n<p>make file <code>.aws/credentials</code>  </p>\n<blockquote>\n<p>first line is profile name.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[claudia]</span><br><span class=\"line\">aws_access_key_id = YOUR_ACCESS_KEY</span><br><span class=\"line\">aws_secret_access_key = YOUR_ACCESS_SECRET</span><br></pre></td></tr></table></figure>\n<h3 id=\"create-lambda-function\"><a href=\"#create-lambda-function\" class=\"headerlink\" title=\"create lambda function\"></a>create lambda function</h3><p>seoul region is <code>ap-northeast-2</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># create lambda</span><br><span class=\"line\">claudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"invoke-lambda\"><a href=\"#invoke-lambda\" class=\"headerlink\" title=\"invoke lambda\"></a>invoke lambda</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#&apos;test-&apos; prefix is required.</span><br><span class=\"line\">claudia test-lambda --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"update-lambda-with-npm-run-command\"><a href=\"#update-lambda-with-npm-run-command\" class=\"headerlink\" title=\"update lambda with npm run command\"></a>update lambda with npm run command</h3><p>package.json</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"test\": \"claudia test-lambda --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>update command : <code>npm run deploy</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-mongodb\" target=\"_blank\" rel=\"noopener\">github</a></p>\n"},{"title":"claudiajs-rest-api","date":"2019-01-19T13:22:17.000Z","_content":"### claudiajs : https://claudiajs.com\n\n1. make project\n2. install claudia api module\n3. modify package.json script command\n4. make api.js file\n5. make api gateway\n6. example code\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n\n### install claudia api module : https://claudiajs.com/claudia-api-builder.html\n\n```jshelllanguage\nnpm install claudia-api-builder -S\n```\n\n### modify package.json script command\n\npackage.json\n```json\n...\n  \"scripts\": {\n    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\n\n### make a api.js file : \n- https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\n- https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\n\n```javascript\nvar ApiBuilder = require('claudia-api-builder'),\n\tapi = new ApiBuilder(),\n\tsuperb = require('superb');\n\nmodule.exports = api;\n\napi.get('/greet', function (request) {\n\treturn request.queryString.name + ' is ' + superb();\n});\n```\n\n### make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\n\nexecute command\n\n```jshelllanguage\n#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]\nnpm run start\n```\n\nyou can see below console as result\n\nsaving configuration\n```json\n{\n  \"lambda\": {\n    \"role\": \"rest-api-test-executor\",\n    \"name\": \"rest-api-test\",\n    \"region\": \"ap-northeast-2\"\n  },\n  \"api\": {\n    \"id\": \"XXXXXXXX\",\n    \"module\": \"api\",\n    \"url\": \"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"\n  }\n}\n```\n\nyou can connect to `api.url`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-rest-claudia)\n\n### 인증관련 Reference\n- 카카오 : https://github.com/bskim/gamingonaws2017_serverless\n- setting authorization to call api by aws iam : https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n","source":"_posts/cloudiajs/claudiajs-rest-api.md","raw":"---\ntitle: claudiajs-rest-api\ndate: 2019-01-19 22:22:17\ntags:\n- aws\n- lambda\n- claudiajs\ncategories:\n- claudiajs\n---\n### claudiajs : https://claudiajs.com\n\n1. make project\n2. install claudia api module\n3. modify package.json script command\n4. make api.js file\n5. make api gateway\n6. example code\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n\n### install claudia api module : https://claudiajs.com/claudia-api-builder.html\n\n```jshelllanguage\nnpm install claudia-api-builder -S\n```\n\n### modify package.json script command\n\npackage.json\n```json\n...\n  \"scripts\": {\n    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\n\n### make a api.js file : \n- https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\n- https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\n\n```javascript\nvar ApiBuilder = require('claudia-api-builder'),\n\tapi = new ApiBuilder(),\n\tsuperb = require('superb');\n\nmodule.exports = api;\n\napi.get('/greet', function (request) {\n\treturn request.queryString.name + ' is ' + superb();\n});\n```\n\n### make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\n\nexecute command\n\n```jshelllanguage\n#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]\nnpm run start\n```\n\nyou can see below console as result\n\nsaving configuration\n```json\n{\n  \"lambda\": {\n    \"role\": \"rest-api-test-executor\",\n    \"name\": \"rest-api-test\",\n    \"region\": \"ap-northeast-2\"\n  },\n  \"api\": {\n    \"id\": \"XXXXXXXX\",\n    \"module\": \"api\",\n    \"url\": \"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"\n  }\n}\n```\n\nyou can connect to `api.url`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-rest-claudia)\n\n### 인증관련 Reference\n- 카카오 : https://github.com/bskim/gamingonaws2017_serverless\n- setting authorization to call api by aws iam : https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n","slug":"cloudiajs/claudiajs-rest-api","published":1,"updated":"2019-01-19T13:29:05.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8za000ny8uh8k806l2r","content":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>make project</li>\n<li>install claudia api module</li>\n<li>modify package.json script command</li>\n<li>make api.js file</li>\n<li>make api gateway</li>\n<li>example code</li>\n</ol>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\"><a href=\"#install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\" class=\"headerlink\" title=\"install claudia api module : https://claudiajs.com/claudia-api-builder.html\"></a>install claudia api module : <a href=\"https://claudiajs.com/claudia-api-builder.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/claudia-api-builder.html</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install claudia-api-builder -S</span><br></pre></td></tr></table></figure>\n<h3 id=\"modify-package-json-script-command\"><a href=\"#modify-package-json-script-command\" class=\"headerlink\" title=\"modify package.json script command\"></a>modify package.json script command</h3><p>package.json<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"make-a-api-js-file\"><a href=\"#make-a-api-js-file\" class=\"headerlink\" title=\"make a api.js file :\"></a>make a api.js file :</h3><ul>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax</a></li>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md</a></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ApiBuilder = <span class=\"built_in\">require</span>(<span class=\"string\">'claudia-api-builder'</span>),</span><br><span class=\"line\">\tapi = <span class=\"keyword\">new</span> ApiBuilder(),</span><br><span class=\"line\">\tsuperb = <span class=\"built_in\">require</span>(<span class=\"string\">'superb'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = api;</span><br><span class=\"line\"></span><br><span class=\"line\">api.get(<span class=\"string\">'/greet'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">request</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> request.queryString.name + <span class=\"string\">' is '</span> + superb();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\"><a href=\"#make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\" class=\"headerlink\" title=\"make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\"></a>make api gateway : <a href=\"https://claudiajs.com/tutorials/hello-world-api-gateway.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/hello-world-api-gateway.html</a></h3><p>execute command</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]</span><br><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n<p>you can see below console as result</p>\n<p>saving configuration<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"lambda\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"role\"</span>: <span class=\"string\">\"rest-api-test-executor\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"rest-api-test\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"region\"</span>: <span class=\"string\">\"ap-northeast-2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"api\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"string\">\"XXXXXXXX\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"api\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"url\"</span>: <span class=\"string\">\"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>you can connect to <code>api.url</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-rest-claudia\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<h3 id=\"인증관련-Reference\"><a href=\"#인증관련-Reference\" class=\"headerlink\" title=\"인증관련 Reference\"></a>인증관련 Reference</h3><ul>\n<li>카카오 : <a href=\"https://github.com/bskim/gamingonaws2017_serverless\" target=\"_blank\" rel=\"noopener\">https://github.com/bskim/gamingonaws2017_serverless</a></li>\n<li>setting authorization to call api by aws iam : <a href=\"https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>make project</li>\n<li>install claudia api module</li>\n<li>modify package.json script command</li>\n<li>make api.js file</li>\n<li>make api gateway</li>\n<li>example code</li>\n</ol>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\"><a href=\"#install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\" class=\"headerlink\" title=\"install claudia api module : https://claudiajs.com/claudia-api-builder.html\"></a>install claudia api module : <a href=\"https://claudiajs.com/claudia-api-builder.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/claudia-api-builder.html</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install claudia-api-builder -S</span><br></pre></td></tr></table></figure>\n<h3 id=\"modify-package-json-script-command\"><a href=\"#modify-package-json-script-command\" class=\"headerlink\" title=\"modify package.json script command\"></a>modify package.json script command</h3><p>package.json<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"make-a-api-js-file\"><a href=\"#make-a-api-js-file\" class=\"headerlink\" title=\"make a api.js file :\"></a>make a api.js file :</h3><ul>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax</a></li>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md</a></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ApiBuilder = <span class=\"built_in\">require</span>(<span class=\"string\">'claudia-api-builder'</span>),</span><br><span class=\"line\">\tapi = <span class=\"keyword\">new</span> ApiBuilder(),</span><br><span class=\"line\">\tsuperb = <span class=\"built_in\">require</span>(<span class=\"string\">'superb'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = api;</span><br><span class=\"line\"></span><br><span class=\"line\">api.get(<span class=\"string\">'/greet'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">request</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> request.queryString.name + <span class=\"string\">' is '</span> + superb();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\"><a href=\"#make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\" class=\"headerlink\" title=\"make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\"></a>make api gateway : <a href=\"https://claudiajs.com/tutorials/hello-world-api-gateway.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/hello-world-api-gateway.html</a></h3><p>execute command</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]</span><br><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n<p>you can see below console as result</p>\n<p>saving configuration<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"lambda\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"role\"</span>: <span class=\"string\">\"rest-api-test-executor\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"rest-api-test\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"region\"</span>: <span class=\"string\">\"ap-northeast-2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"api\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"string\">\"XXXXXXXX\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"api\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"url\"</span>: <span class=\"string\">\"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>you can connect to <code>api.url</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-rest-claudia\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<h3 id=\"인증관련-Reference\"><a href=\"#인증관련-Reference\" class=\"headerlink\" title=\"인증관련 Reference\"></a>인증관련 Reference</h3><ul>\n<li>카카오 : <a href=\"https://github.com/bskim/gamingonaws2017_serverless\" target=\"_blank\" rel=\"noopener\">https://github.com/bskim/gamingonaws2017_serverless</a></li>\n<li>setting authorization to call api by aws iam : <a href=\"https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html</a></li>\n</ul>\n"},{"title":"docker mysql galera clustering","date":"2019-06-29T08:30:23.000Z","_content":"\n\n# mysql galera clustering \n\n- galera 공식 사이트 : http://galeracluster.com/2015/05/getting-started-galera-with-docker-part-1/\n- marriadb 설명 : https://mariadb.com/kb/en/library/getting-started-with-mariadb-galera-cluster/\n\n## docker hub에 있는 image 이용하기\n\n1. image  pull\n\n```sbtshell\nsudo docker pull erkules/galera\n```\n\n2. container 실행\n\n```sbtshell\nsudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 --name nodea erkules/galera --wsrep-cluster-address=gcomm://\n```\n\n## image 만들어서 사용하기\n\n1. 필요한 파일 만들기\n\n- Dockerfile\n\n```sbtshell\nFROM ubuntu:16.04\nENV VERSION 20180305\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\n\nRUN apt-get install -y software-properties-common\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv BC19DDBA\nRUN add-apt-repository 'deb http://releases.galeracluster.com/mysql-wsrep-5.7/ubuntu/ xenial main'\nRUN add-apt-repository 'deb http://releases.galeracluster.com/galera-3/ubuntu/ xenial main'\n\nCOPY galera.pref /etc/apt/preferences.d/galera.pref\n\nRUN apt-get update\n\nRUN apt-get -y install galera-3 galera-arbitrator-3 mysql-wsrep-5.7 rsync lsof\n\nRUN rm -r /var/lib/mysql\n\nCOPY my.cnf /etc/mysql/my.cnf\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod 700 /entrypoint.sh\nEXPOSE 3306/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\n\nLABEL mysql_verion=5.7\n\n```\n\n- docker.cnf\n\n```sbtshell\n[mysqld]\nbind-address   = 0.0.0.0\nuser           = mysql\nlog_bin\n[mysql]\nprompt = \"\\h\\> \"\n```\n\n- my.cnf\n\n```sbtshell\n[mysqld]\nuser                              = mysql\nbind-address                      = 0.0.0.0\nwsrep_provider                    = /usr/lib/galera/libgalera_smm.so\nwsrep_sst_method                  = rsync\ndefault_storage_engine            = innodb\nbinlog_format                     = row\ninnodb_autoinc_lock_mode          = 2\ninnodb_flush_log_at_trx_commit    = 0\nquery_cache_size                  = 0\nquery_cache_type                  = 0\nskip_name_resolve\n\n```\n\n- entrypoint.sh\n\n```sbtshell\n#!/bin/bash\n# Taken from the official mysql-repo\n# And changed for simplification of course :)\n# I.e. DATADIR is always /var/lib/mysql\n# We don't force the usage of MYSQL_ALLOW_EMPTY_PASSWORD\n# erkan.yanar@linsenraum.de\nset -e\nset -x\n# Check ENV (MYSQL_) and stop if they are not known variables\n# TODO\n\ntempSqlFile='/tmp/mysql-first-time.sql'\n\nmysqld --initialize --datadir=/var/lib/mysql\n\ncat > \"$tempSqlFile\" <<-EOSQL\n        -- What's done in this file shouldn't be replicated\n        --  or products like mysql-fabric won't work\n        SET @@SESSION.SQL_LOG_BIN=0;\n\n        DELETE FROM mysql.user ;\n        CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;\n        GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ;\n        DROP DATABASE IF EXISTS test ;\n    EOSQL\n\n\n    if [ \"$MYSQL_DATABASE\" ]; then\n        echo \"CREATE DATABASE IF NOT EXISTS \\`$MYSQL_DATABASE\\` ;\" >> \"$tempSqlFile\"\n    fi\n\n    if [ \"$MYSQL_USER\" -a \"$MYSQL_PASSWORD\" ]; then\n        echo \"CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD' ;\" >> \"$tempSqlFile\"\n        echo \"CREATE USER '$MYSQL_USER'@'localhost' IDENTIFIED BY '$MYSQL_PASSWORD' ;\" >> \"$tempSqlFile\"\n  fi\n    if [ \"$MYSQL_USER\" -a ! \"$MYSQL_PASSWORD\" ]; then\n        echo \"CREATE USER '$MYSQL_USER'@'%'  ;\"         >> \"$tempSqlFile\"\n        echo \"CREATE USER '$MYSQL_USER'@'localhost'  ;\" >> \"$tempSqlFile\"\n  fi\n\n  if [ \"$MYSQL_USER\" -a  \"$MYSQL_DATABASE\"  ]; then\n      echo \"GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO '$MYSQL_USER'@'%' ;\" >> \"$tempSqlFile\"\n      echo \"GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO '$MYSQL_USER'@'localhost' ;\" >> \"$tempSqlFile\"\n  fi\n\n    echo 'FLUSH PRIVILEGES ;' >> \"$tempSqlFile\"\n\n    set -- \"$@\" --init-file=\"$tempSqlFile\"\n\necho @a\nset -- mysqld \"$@\"\nchown -R mysql:mysql /var/lib/mysql\nmkdir -p /var/run/mysqld\nchown -R mysql:mysql /var/run/mysqld\necho \"Checking to upgrade the schema\"\necho \"A failed upgrade is ok when there was no upgrade\"\n# mysql_upgrade || true\nexec \"$@\"\n```\n\n- galera.pref\n\n```sbtshell\n# Prefer Codership repository\nPackage: *\nPin: origin releases.galeracluster.com\nPin-Priority: 1001\n```\n\n2. 빌드하기\n\n```sbtshell\n#sudo docker build -t 이름:버전 docker_file_path\nsudo docker build -t galera:1.0 /vagrant/galera\n```\n\n3. container 실행하기\n\n```sbtshell\nsudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 galera:1.0 --wsrep-cluster-address=gcomm://\n```\n","source":"_posts/docker/docker-mysql-galera.md","raw":"---\ntitle: docker mysql galera clustering\ntags:\n  - docker\n  - container\n  - swarm\n  - redis\n  - sentinel\ncategories:\n  - docker\ndate: 2019-06-29 17:30:23\n---\n\n\n# mysql galera clustering \n\n- galera 공식 사이트 : http://galeracluster.com/2015/05/getting-started-galera-with-docker-part-1/\n- marriadb 설명 : https://mariadb.com/kb/en/library/getting-started-with-mariadb-galera-cluster/\n\n## docker hub에 있는 image 이용하기\n\n1. image  pull\n\n```sbtshell\nsudo docker pull erkules/galera\n```\n\n2. container 실행\n\n```sbtshell\nsudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 --name nodea erkules/galera --wsrep-cluster-address=gcomm://\n```\n\n## image 만들어서 사용하기\n\n1. 필요한 파일 만들기\n\n- Dockerfile\n\n```sbtshell\nFROM ubuntu:16.04\nENV VERSION 20180305\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\n\nRUN apt-get install -y software-properties-common\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv BC19DDBA\nRUN add-apt-repository 'deb http://releases.galeracluster.com/mysql-wsrep-5.7/ubuntu/ xenial main'\nRUN add-apt-repository 'deb http://releases.galeracluster.com/galera-3/ubuntu/ xenial main'\n\nCOPY galera.pref /etc/apt/preferences.d/galera.pref\n\nRUN apt-get update\n\nRUN apt-get -y install galera-3 galera-arbitrator-3 mysql-wsrep-5.7 rsync lsof\n\nRUN rm -r /var/lib/mysql\n\nCOPY my.cnf /etc/mysql/my.cnf\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod 700 /entrypoint.sh\nEXPOSE 3306/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\n\nLABEL mysql_verion=5.7\n\n```\n\n- docker.cnf\n\n```sbtshell\n[mysqld]\nbind-address   = 0.0.0.0\nuser           = mysql\nlog_bin\n[mysql]\nprompt = \"\\h\\> \"\n```\n\n- my.cnf\n\n```sbtshell\n[mysqld]\nuser                              = mysql\nbind-address                      = 0.0.0.0\nwsrep_provider                    = /usr/lib/galera/libgalera_smm.so\nwsrep_sst_method                  = rsync\ndefault_storage_engine            = innodb\nbinlog_format                     = row\ninnodb_autoinc_lock_mode          = 2\ninnodb_flush_log_at_trx_commit    = 0\nquery_cache_size                  = 0\nquery_cache_type                  = 0\nskip_name_resolve\n\n```\n\n- entrypoint.sh\n\n```sbtshell\n#!/bin/bash\n# Taken from the official mysql-repo\n# And changed for simplification of course :)\n# I.e. DATADIR is always /var/lib/mysql\n# We don't force the usage of MYSQL_ALLOW_EMPTY_PASSWORD\n# erkan.yanar@linsenraum.de\nset -e\nset -x\n# Check ENV (MYSQL_) and stop if they are not known variables\n# TODO\n\ntempSqlFile='/tmp/mysql-first-time.sql'\n\nmysqld --initialize --datadir=/var/lib/mysql\n\ncat > \"$tempSqlFile\" <<-EOSQL\n        -- What's done in this file shouldn't be replicated\n        --  or products like mysql-fabric won't work\n        SET @@SESSION.SQL_LOG_BIN=0;\n\n        DELETE FROM mysql.user ;\n        CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;\n        GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ;\n        DROP DATABASE IF EXISTS test ;\n    EOSQL\n\n\n    if [ \"$MYSQL_DATABASE\" ]; then\n        echo \"CREATE DATABASE IF NOT EXISTS \\`$MYSQL_DATABASE\\` ;\" >> \"$tempSqlFile\"\n    fi\n\n    if [ \"$MYSQL_USER\" -a \"$MYSQL_PASSWORD\" ]; then\n        echo \"CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD' ;\" >> \"$tempSqlFile\"\n        echo \"CREATE USER '$MYSQL_USER'@'localhost' IDENTIFIED BY '$MYSQL_PASSWORD' ;\" >> \"$tempSqlFile\"\n  fi\n    if [ \"$MYSQL_USER\" -a ! \"$MYSQL_PASSWORD\" ]; then\n        echo \"CREATE USER '$MYSQL_USER'@'%'  ;\"         >> \"$tempSqlFile\"\n        echo \"CREATE USER '$MYSQL_USER'@'localhost'  ;\" >> \"$tempSqlFile\"\n  fi\n\n  if [ \"$MYSQL_USER\" -a  \"$MYSQL_DATABASE\"  ]; then\n      echo \"GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO '$MYSQL_USER'@'%' ;\" >> \"$tempSqlFile\"\n      echo \"GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO '$MYSQL_USER'@'localhost' ;\" >> \"$tempSqlFile\"\n  fi\n\n    echo 'FLUSH PRIVILEGES ;' >> \"$tempSqlFile\"\n\n    set -- \"$@\" --init-file=\"$tempSqlFile\"\n\necho @a\nset -- mysqld \"$@\"\nchown -R mysql:mysql /var/lib/mysql\nmkdir -p /var/run/mysqld\nchown -R mysql:mysql /var/run/mysqld\necho \"Checking to upgrade the schema\"\necho \"A failed upgrade is ok when there was no upgrade\"\n# mysql_upgrade || true\nexec \"$@\"\n```\n\n- galera.pref\n\n```sbtshell\n# Prefer Codership repository\nPackage: *\nPin: origin releases.galeracluster.com\nPin-Priority: 1001\n```\n\n2. 빌드하기\n\n```sbtshell\n#sudo docker build -t 이름:버전 docker_file_path\nsudo docker build -t galera:1.0 /vagrant/galera\n```\n\n3. container 실행하기\n\n```sbtshell\nsudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 galera:1.0 --wsrep-cluster-address=gcomm://\n```\n","slug":"docker/docker-mysql-galera","published":1,"updated":"2019-06-29T08:30:23.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zd000ry8uheqen94ul","content":"<h1 id=\"mysql-galera-clustering\"><a href=\"#mysql-galera-clustering\" class=\"headerlink\" title=\"mysql galera clustering\"></a>mysql galera clustering</h1><ul>\n<li>galera 공식 사이트 : <a href=\"http://galeracluster.com/2015/05/getting-started-galera-with-docker-part-1/\" target=\"_blank\" rel=\"noopener\">http://galeracluster.com/2015/05/getting-started-galera-with-docker-part-1/</a></li>\n<li>marriadb 설명 : <a href=\"https://mariadb.com/kb/en/library/getting-started-with-mariadb-galera-cluster/\" target=\"_blank\" rel=\"noopener\">https://mariadb.com/kb/en/library/getting-started-with-mariadb-galera-cluster/</a></li>\n</ul>\n<h2 id=\"docker-hub에-있는-image-이용하기\"><a href=\"#docker-hub에-있는-image-이용하기\" class=\"headerlink\" title=\"docker hub에 있는 image 이용하기\"></a>docker hub에 있는 image 이용하기</h2><ol>\n<li>image  pull</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull erkules/galera</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>container 실행</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 --name nodea erkules/galera --wsrep-cluster-address=gcomm://</span><br></pre></td></tr></table></figure>\n<h2 id=\"image-만들어서-사용하기\"><a href=\"#image-만들어서-사용하기\" class=\"headerlink\" title=\"image 만들어서 사용하기\"></a>image 만들어서 사용하기</h2><ol>\n<li>필요한 파일 만들기</li>\n</ol>\n<ul>\n<li>Dockerfile</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM ubuntu:16.04</span><br><span class=\"line\">ENV VERSION 20180305</span><br><span class=\"line\">ENV DEBIAN_FRONTEND noninteractive</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get install -y software-properties-common</span><br><span class=\"line\">RUN apt-key adv --keyserver keyserver.ubuntu.com --recv BC19DDBA</span><br><span class=\"line\">RUN add-apt-repository &apos;deb http://releases.galeracluster.com/mysql-wsrep-5.7/ubuntu/ xenial main&apos;</span><br><span class=\"line\">RUN add-apt-repository &apos;deb http://releases.galeracluster.com/galera-3/ubuntu/ xenial main&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">COPY galera.pref /etc/apt/preferences.d/galera.pref</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get -y install galera-3 galera-arbitrator-3 mysql-wsrep-5.7 rsync lsof</span><br><span class=\"line\"></span><br><span class=\"line\">RUN rm -r /var/lib/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">COPY my.cnf /etc/mysql/my.cnf</span><br><span class=\"line\">COPY entrypoint.sh /entrypoint.sh</span><br><span class=\"line\">RUN chmod 700 /entrypoint.sh</span><br><span class=\"line\">EXPOSE 3306/tcp</span><br><span class=\"line\">ENTRYPOINT [&quot;/entrypoint.sh&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">LABEL mysql_verion=5.7</span><br></pre></td></tr></table></figure>\n<ul>\n<li>docker.cnf</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">bind-address   = 0.0.0.0</span><br><span class=\"line\">user           = mysql</span><br><span class=\"line\">log_bin</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">prompt = &quot;\\h\\&gt; &quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>my.cnf</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">user                              = mysql</span><br><span class=\"line\">bind-address                      = 0.0.0.0</span><br><span class=\"line\">wsrep_provider                    = /usr/lib/galera/libgalera_smm.so</span><br><span class=\"line\">wsrep_sst_method                  = rsync</span><br><span class=\"line\">default_storage_engine            = innodb</span><br><span class=\"line\">binlog_format                     = row</span><br><span class=\"line\">innodb_autoinc_lock_mode          = 2</span><br><span class=\"line\">innodb_flush_log_at_trx_commit    = 0</span><br><span class=\"line\">query_cache_size                  = 0</span><br><span class=\"line\">query_cache_type                  = 0</span><br><span class=\"line\">skip_name_resolve</span><br></pre></td></tr></table></figure>\n<ul>\n<li>entrypoint.sh</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"># Taken from the official mysql-repo</span><br><span class=\"line\"># And changed for simplification of course :)</span><br><span class=\"line\"># I.e. DATADIR is always /var/lib/mysql</span><br><span class=\"line\"># We don&apos;t force the usage of MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class=\"line\"># erkan.yanar@linsenraum.de</span><br><span class=\"line\">set -e</span><br><span class=\"line\">set -x</span><br><span class=\"line\"># Check ENV (MYSQL_) and stop if they are not known variables</span><br><span class=\"line\"># TODO</span><br><span class=\"line\"></span><br><span class=\"line\">tempSqlFile=&apos;/tmp/mysql-first-time.sql&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">mysqld --initialize --datadir=/var/lib/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt; &quot;$tempSqlFile&quot; &lt;&lt;-EOSQL</span><br><span class=\"line\">        -- What&apos;s done in this file shouldn&apos;t be replicated</span><br><span class=\"line\">        --  or products like mysql-fabric won&apos;t work</span><br><span class=\"line\">        SET @@SESSION.SQL_LOG_BIN=0;</span><br><span class=\"line\"></span><br><span class=\"line\">        DELETE FROM mysql.user ;</span><br><span class=\"line\">        CREATE USER &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;$&#123;MYSQL_ROOT_PASSWORD&#125;&apos; ;</span><br><span class=\"line\">        GRANT ALL ON *.* TO &apos;root&apos;@&apos;%&apos; WITH GRANT OPTION ;</span><br><span class=\"line\">        DROP DATABASE IF EXISTS test ;</span><br><span class=\"line\">    EOSQL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    if [ &quot;$MYSQL_DATABASE&quot; ]; then</span><br><span class=\"line\">        echo &quot;CREATE DATABASE IF NOT EXISTS \\`$MYSQL_DATABASE\\` ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    if [ &quot;$MYSQL_USER&quot; -a &quot;$MYSQL_PASSWORD&quot; ]; then</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;%&apos; IDENTIFIED BY &apos;$MYSQL_PASSWORD&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$MYSQL_PASSWORD&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">  fi</span><br><span class=\"line\">    if [ &quot;$MYSQL_USER&quot; -a ! &quot;$MYSQL_PASSWORD&quot; ]; then</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;%&apos;  ;&quot;         &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;localhost&apos;  ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">  if [ &quot;$MYSQL_USER&quot; -a  &quot;$MYSQL_DATABASE&quot;  ]; then</span><br><span class=\"line\">      echo &quot;GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO &apos;$MYSQL_USER&apos;@&apos;%&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">      echo &quot;GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO &apos;$MYSQL_USER&apos;@&apos;localhost&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &apos;FLUSH PRIVILEGES ;&apos; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    set -- &quot;$@&quot; --init-file=&quot;$tempSqlFile&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo @a</span><br><span class=\"line\">set -- mysqld &quot;$@&quot;</span><br><span class=\"line\">chown -R mysql:mysql /var/lib/mysql</span><br><span class=\"line\">mkdir -p /var/run/mysqld</span><br><span class=\"line\">chown -R mysql:mysql /var/run/mysqld</span><br><span class=\"line\">echo &quot;Checking to upgrade the schema&quot;</span><br><span class=\"line\">echo &quot;A failed upgrade is ok when there was no upgrade&quot;</span><br><span class=\"line\"># mysql_upgrade || true</span><br><span class=\"line\">exec &quot;$@&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>galera.pref</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Prefer Codership repository</span><br><span class=\"line\">Package: *</span><br><span class=\"line\">Pin: origin releases.galeracluster.com</span><br><span class=\"line\">Pin-Priority: 1001</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>빌드하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#sudo docker build -t 이름:버전 docker_file_path</span><br><span class=\"line\">sudo docker build -t galera:1.0 /vagrant/galera</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>container 실행하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 galera:1.0 --wsrep-cluster-address=gcomm://</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mysql-galera-clustering\"><a href=\"#mysql-galera-clustering\" class=\"headerlink\" title=\"mysql galera clustering\"></a>mysql galera clustering</h1><ul>\n<li>galera 공식 사이트 : <a href=\"http://galeracluster.com/2015/05/getting-started-galera-with-docker-part-1/\" target=\"_blank\" rel=\"noopener\">http://galeracluster.com/2015/05/getting-started-galera-with-docker-part-1/</a></li>\n<li>marriadb 설명 : <a href=\"https://mariadb.com/kb/en/library/getting-started-with-mariadb-galera-cluster/\" target=\"_blank\" rel=\"noopener\">https://mariadb.com/kb/en/library/getting-started-with-mariadb-galera-cluster/</a></li>\n</ul>\n<h2 id=\"docker-hub에-있는-image-이용하기\"><a href=\"#docker-hub에-있는-image-이용하기\" class=\"headerlink\" title=\"docker hub에 있는 image 이용하기\"></a>docker hub에 있는 image 이용하기</h2><ol>\n<li>image  pull</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull erkules/galera</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>container 실행</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 --name nodea erkules/galera --wsrep-cluster-address=gcomm://</span><br></pre></td></tr></table></figure>\n<h2 id=\"image-만들어서-사용하기\"><a href=\"#image-만들어서-사용하기\" class=\"headerlink\" title=\"image 만들어서 사용하기\"></a>image 만들어서 사용하기</h2><ol>\n<li>필요한 파일 만들기</li>\n</ol>\n<ul>\n<li>Dockerfile</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM ubuntu:16.04</span><br><span class=\"line\">ENV VERSION 20180305</span><br><span class=\"line\">ENV DEBIAN_FRONTEND noninteractive</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get install -y software-properties-common</span><br><span class=\"line\">RUN apt-key adv --keyserver keyserver.ubuntu.com --recv BC19DDBA</span><br><span class=\"line\">RUN add-apt-repository &apos;deb http://releases.galeracluster.com/mysql-wsrep-5.7/ubuntu/ xenial main&apos;</span><br><span class=\"line\">RUN add-apt-repository &apos;deb http://releases.galeracluster.com/galera-3/ubuntu/ xenial main&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">COPY galera.pref /etc/apt/preferences.d/galera.pref</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apt-get -y install galera-3 galera-arbitrator-3 mysql-wsrep-5.7 rsync lsof</span><br><span class=\"line\"></span><br><span class=\"line\">RUN rm -r /var/lib/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">COPY my.cnf /etc/mysql/my.cnf</span><br><span class=\"line\">COPY entrypoint.sh /entrypoint.sh</span><br><span class=\"line\">RUN chmod 700 /entrypoint.sh</span><br><span class=\"line\">EXPOSE 3306/tcp</span><br><span class=\"line\">ENTRYPOINT [&quot;/entrypoint.sh&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">LABEL mysql_verion=5.7</span><br></pre></td></tr></table></figure>\n<ul>\n<li>docker.cnf</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">bind-address   = 0.0.0.0</span><br><span class=\"line\">user           = mysql</span><br><span class=\"line\">log_bin</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">prompt = &quot;\\h\\&gt; &quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>my.cnf</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">user                              = mysql</span><br><span class=\"line\">bind-address                      = 0.0.0.0</span><br><span class=\"line\">wsrep_provider                    = /usr/lib/galera/libgalera_smm.so</span><br><span class=\"line\">wsrep_sst_method                  = rsync</span><br><span class=\"line\">default_storage_engine            = innodb</span><br><span class=\"line\">binlog_format                     = row</span><br><span class=\"line\">innodb_autoinc_lock_mode          = 2</span><br><span class=\"line\">innodb_flush_log_at_trx_commit    = 0</span><br><span class=\"line\">query_cache_size                  = 0</span><br><span class=\"line\">query_cache_type                  = 0</span><br><span class=\"line\">skip_name_resolve</span><br></pre></td></tr></table></figure>\n<ul>\n<li>entrypoint.sh</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"># Taken from the official mysql-repo</span><br><span class=\"line\"># And changed for simplification of course :)</span><br><span class=\"line\"># I.e. DATADIR is always /var/lib/mysql</span><br><span class=\"line\"># We don&apos;t force the usage of MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class=\"line\"># erkan.yanar@linsenraum.de</span><br><span class=\"line\">set -e</span><br><span class=\"line\">set -x</span><br><span class=\"line\"># Check ENV (MYSQL_) and stop if they are not known variables</span><br><span class=\"line\"># TODO</span><br><span class=\"line\"></span><br><span class=\"line\">tempSqlFile=&apos;/tmp/mysql-first-time.sql&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">mysqld --initialize --datadir=/var/lib/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt; &quot;$tempSqlFile&quot; &lt;&lt;-EOSQL</span><br><span class=\"line\">        -- What&apos;s done in this file shouldn&apos;t be replicated</span><br><span class=\"line\">        --  or products like mysql-fabric won&apos;t work</span><br><span class=\"line\">        SET @@SESSION.SQL_LOG_BIN=0;</span><br><span class=\"line\"></span><br><span class=\"line\">        DELETE FROM mysql.user ;</span><br><span class=\"line\">        CREATE USER &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;$&#123;MYSQL_ROOT_PASSWORD&#125;&apos; ;</span><br><span class=\"line\">        GRANT ALL ON *.* TO &apos;root&apos;@&apos;%&apos; WITH GRANT OPTION ;</span><br><span class=\"line\">        DROP DATABASE IF EXISTS test ;</span><br><span class=\"line\">    EOSQL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    if [ &quot;$MYSQL_DATABASE&quot; ]; then</span><br><span class=\"line\">        echo &quot;CREATE DATABASE IF NOT EXISTS \\`$MYSQL_DATABASE\\` ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    if [ &quot;$MYSQL_USER&quot; -a &quot;$MYSQL_PASSWORD&quot; ]; then</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;%&apos; IDENTIFIED BY &apos;$MYSQL_PASSWORD&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$MYSQL_PASSWORD&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">  fi</span><br><span class=\"line\">    if [ &quot;$MYSQL_USER&quot; -a ! &quot;$MYSQL_PASSWORD&quot; ]; then</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;%&apos;  ;&quot;         &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">        echo &quot;CREATE USER &apos;$MYSQL_USER&apos;@&apos;localhost&apos;  ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">  if [ &quot;$MYSQL_USER&quot; -a  &quot;$MYSQL_DATABASE&quot;  ]; then</span><br><span class=\"line\">      echo &quot;GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO &apos;$MYSQL_USER&apos;@&apos;%&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">      echo &quot;GRANT ALL ON \\`$MYSQL_DATABASE\\`.* TO &apos;$MYSQL_USER&apos;@&apos;localhost&apos; ;&quot; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &apos;FLUSH PRIVILEGES ;&apos; &gt;&gt; &quot;$tempSqlFile&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    set -- &quot;$@&quot; --init-file=&quot;$tempSqlFile&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo @a</span><br><span class=\"line\">set -- mysqld &quot;$@&quot;</span><br><span class=\"line\">chown -R mysql:mysql /var/lib/mysql</span><br><span class=\"line\">mkdir -p /var/run/mysqld</span><br><span class=\"line\">chown -R mysql:mysql /var/run/mysqld</span><br><span class=\"line\">echo &quot;Checking to upgrade the schema&quot;</span><br><span class=\"line\">echo &quot;A failed upgrade is ok when there was no upgrade&quot;</span><br><span class=\"line\"># mysql_upgrade || true</span><br><span class=\"line\">exec &quot;$@&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>galera.pref</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Prefer Codership repository</span><br><span class=\"line\">Package: *</span><br><span class=\"line\">Pin: origin releases.galeracluster.com</span><br><span class=\"line\">Pin-Priority: 1001</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>빌드하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#sudo docker build -t 이름:버전 docker_file_path</span><br><span class=\"line\">sudo docker build -t galera:1.0 /vagrant/galera</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>container 실행하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 galera:1.0 --wsrep-cluster-address=gcomm://</span><br></pre></td></tr></table></figure>\n"},{"title":"docker redis clustering","date":"2019-06-29T07:00:28.000Z","_content":"\n\ndocker를 이용한 redis sentinel clustering을 구성\n\n# redis clustering\n\n- tutorial : https://redis.io/topics/cluster-tutorial\n- spec : https://redis.io/topics/cluster-spec\n- redis sentinel : https://redis.io/topics/sentinel\n- zookeeper를 이용한 clustering : http://d2.naver.com/helloworld/294797\n\nRedis는 여러가지 방법으로 HA를 구성할 수 있다. \n\n## 멀티 마스터를 위한 Redis Cluster 방식\n\n- Redis Cluster는 샤딩 방식으로 데이터가 나뉘어 저장된다.\n- Redis Cluster Node 는 2개 포트가 필요하다. \n  - client를 위한 포트와 data를 위한 포트(client 포트 + 10000)\n  - data 포트가 node 사이의 채널 역할을 한다.\n- **docker에서 redis cluster를 사용하려면 host 네트워크를 사용해야 한다.**\n\n## sentinel 을 이용하는 방법\n\n- 3 + 2n 의 sentinel instance를 추천\n- 기본 포트는 26379\n- client에서 바라보는 end point는 sentinel instance이며, sentinel이 master 접속정보를 client에 전달한다. client는 해당 정보로 다시 master로 요청을 보냄.\n\n### docker 에서 1master + 1slave + 3sentinel 사용 예제 :\n\n- docker : https://github.com/mdevilliers/docker-rediscluster\n- docker-compose : https://github.com/AliyunContainerService/redis-cluster\n```sbtshell\nsudo apt-get install redis-server\nsudo apt-get purge --auto-remove redis-server\n```\n\nsentinel 실행 command : `redis-server /path/to/sentinel.conf --sentinel`\n\n\n### docker swarm 에서 sentinel 사용\n- https://github.com/thomasjpfan/redis-cluster-docker-swarm\n\ndocker-compose.yml \n```sbtshell\nversion: '3.1'\n\nservices:\n\n  redis-sentinel:\n    image: thomasjpfan/redis-sentinel:${TAG:-latest}\n    environment:\n      - REDIS_IP=redis-zero\n      - REDIS_MASTER_NAME=redismaster\n    deploy:\n      replicas: 3\n    networks:\n      - redis\n\n  redis:\n    image: thomasjpfan/redis-look:${TAG:-latest}\n    environment:\n      - REDIS_SENTINEL_IP=redis-sentinel\n      - REDIS_MASTER_NAME=redismaster\n      - REDIS_SENTINEL_PORT=26379\n    deploy:\n      replicas: 3\n    networks:\n      - redis\n\nnetworks:\n  redis:\n    external: tru\n```\n\n### 같은 네트워크에 접속해서 테스트해보기 : 같은 네트워크에서 ip주소 대신 docker service 이름으로 접속할 수 있다.\n\n```sbtshell\n#네트워크 접속\nsudo docker run -it --network redis redis /bin/bash\n\n#redis ip 정보 얻기\ndocker ps inspect continerID\n\n#네트워크에 속한 redis에 요청보내기\nredis-cli -h 10.0.0.7 -p 6379 set foo bb\n\n#redis-sentinel\nredis-cli -h redis-sentinel -p 26379 sentinel master redismaster\n\n```\n\n### 삭제할 때 stack 도 지워야 함\n\n```sbtshell\ndocker stack rm stachID\n```\n\n### 서버종료 대비 / manager node가 2개이상 이어야 함, 2대 중 1대 서버에서 장애가 나면 복구할 수 없음\n- manager node 는 static ip를 갖어야 함\n- **2개 노드만 사용하는 경우 둘다 manager로 사용하기** : leader 서버가 재시작하는 경우 자동 복구가 가능해짐\n  - https://docs.docker.com/engine/swarm/admin_guide/","source":"_posts/docker/docker-redis.md","raw":"---\ntitle: docker redis clustering\ncategories:\n  - docker\ntags:\n  - docker\n  - container\n  - swarm\n  - redis\n  - sentinel\ndate: 2019-06-29 16:00:28\n---\n\n\ndocker를 이용한 redis sentinel clustering을 구성\n\n# redis clustering\n\n- tutorial : https://redis.io/topics/cluster-tutorial\n- spec : https://redis.io/topics/cluster-spec\n- redis sentinel : https://redis.io/topics/sentinel\n- zookeeper를 이용한 clustering : http://d2.naver.com/helloworld/294797\n\nRedis는 여러가지 방법으로 HA를 구성할 수 있다. \n\n## 멀티 마스터를 위한 Redis Cluster 방식\n\n- Redis Cluster는 샤딩 방식으로 데이터가 나뉘어 저장된다.\n- Redis Cluster Node 는 2개 포트가 필요하다. \n  - client를 위한 포트와 data를 위한 포트(client 포트 + 10000)\n  - data 포트가 node 사이의 채널 역할을 한다.\n- **docker에서 redis cluster를 사용하려면 host 네트워크를 사용해야 한다.**\n\n## sentinel 을 이용하는 방법\n\n- 3 + 2n 의 sentinel instance를 추천\n- 기본 포트는 26379\n- client에서 바라보는 end point는 sentinel instance이며, sentinel이 master 접속정보를 client에 전달한다. client는 해당 정보로 다시 master로 요청을 보냄.\n\n### docker 에서 1master + 1slave + 3sentinel 사용 예제 :\n\n- docker : https://github.com/mdevilliers/docker-rediscluster\n- docker-compose : https://github.com/AliyunContainerService/redis-cluster\n```sbtshell\nsudo apt-get install redis-server\nsudo apt-get purge --auto-remove redis-server\n```\n\nsentinel 실행 command : `redis-server /path/to/sentinel.conf --sentinel`\n\n\n### docker swarm 에서 sentinel 사용\n- https://github.com/thomasjpfan/redis-cluster-docker-swarm\n\ndocker-compose.yml \n```sbtshell\nversion: '3.1'\n\nservices:\n\n  redis-sentinel:\n    image: thomasjpfan/redis-sentinel:${TAG:-latest}\n    environment:\n      - REDIS_IP=redis-zero\n      - REDIS_MASTER_NAME=redismaster\n    deploy:\n      replicas: 3\n    networks:\n      - redis\n\n  redis:\n    image: thomasjpfan/redis-look:${TAG:-latest}\n    environment:\n      - REDIS_SENTINEL_IP=redis-sentinel\n      - REDIS_MASTER_NAME=redismaster\n      - REDIS_SENTINEL_PORT=26379\n    deploy:\n      replicas: 3\n    networks:\n      - redis\n\nnetworks:\n  redis:\n    external: tru\n```\n\n### 같은 네트워크에 접속해서 테스트해보기 : 같은 네트워크에서 ip주소 대신 docker service 이름으로 접속할 수 있다.\n\n```sbtshell\n#네트워크 접속\nsudo docker run -it --network redis redis /bin/bash\n\n#redis ip 정보 얻기\ndocker ps inspect continerID\n\n#네트워크에 속한 redis에 요청보내기\nredis-cli -h 10.0.0.7 -p 6379 set foo bb\n\n#redis-sentinel\nredis-cli -h redis-sentinel -p 26379 sentinel master redismaster\n\n```\n\n### 삭제할 때 stack 도 지워야 함\n\n```sbtshell\ndocker stack rm stachID\n```\n\n### 서버종료 대비 / manager node가 2개이상 이어야 함, 2대 중 1대 서버에서 장애가 나면 복구할 수 없음\n- manager node 는 static ip를 갖어야 함\n- **2개 노드만 사용하는 경우 둘다 manager로 사용하기** : leader 서버가 재시작하는 경우 자동 복구가 가능해짐\n  - https://docs.docker.com/engine/swarm/admin_guide/","slug":"docker/docker-redis","published":1,"updated":"2019-06-29T08:22:51.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zg000ty8uhzyc2zvki","content":"<p>docker를 이용한 redis sentinel clustering을 구성</p>\n<h1 id=\"redis-clustering\"><a href=\"#redis-clustering\" class=\"headerlink\" title=\"redis clustering\"></a>redis clustering</h1><ul>\n<li>tutorial : <a href=\"https://redis.io/topics/cluster-tutorial\" target=\"_blank\" rel=\"noopener\">https://redis.io/topics/cluster-tutorial</a></li>\n<li>spec : <a href=\"https://redis.io/topics/cluster-spec\" target=\"_blank\" rel=\"noopener\">https://redis.io/topics/cluster-spec</a></li>\n<li>redis sentinel : <a href=\"https://redis.io/topics/sentinel\" target=\"_blank\" rel=\"noopener\">https://redis.io/topics/sentinel</a></li>\n<li>zookeeper를 이용한 clustering : <a href=\"http://d2.naver.com/helloworld/294797\" target=\"_blank\" rel=\"noopener\">http://d2.naver.com/helloworld/294797</a></li>\n</ul>\n<p>Redis는 여러가지 방법으로 HA를 구성할 수 있다. </p>\n<h2 id=\"멀티-마스터를-위한-Redis-Cluster-방식\"><a href=\"#멀티-마스터를-위한-Redis-Cluster-방식\" class=\"headerlink\" title=\"멀티 마스터를 위한 Redis Cluster 방식\"></a>멀티 마스터를 위한 Redis Cluster 방식</h2><ul>\n<li>Redis Cluster는 샤딩 방식으로 데이터가 나뉘어 저장된다.</li>\n<li>Redis Cluster Node 는 2개 포트가 필요하다. <ul>\n<li>client를 위한 포트와 data를 위한 포트(client 포트 + 10000)</li>\n<li>data 포트가 node 사이의 채널 역할을 한다.</li>\n</ul>\n</li>\n<li><strong>docker에서 redis cluster를 사용하려면 host 네트워크를 사용해야 한다.</strong></li>\n</ul>\n<h2 id=\"sentinel-을-이용하는-방법\"><a href=\"#sentinel-을-이용하는-방법\" class=\"headerlink\" title=\"sentinel 을 이용하는 방법\"></a>sentinel 을 이용하는 방법</h2><ul>\n<li>3 + 2n 의 sentinel instance를 추천</li>\n<li>기본 포트는 26379</li>\n<li>client에서 바라보는 end point는 sentinel instance이며, sentinel이 master 접속정보를 client에 전달한다. client는 해당 정보로 다시 master로 요청을 보냄.</li>\n</ul>\n<h3 id=\"docker-에서-1master-1slave-3sentinel-사용-예제\"><a href=\"#docker-에서-1master-1slave-3sentinel-사용-예제\" class=\"headerlink\" title=\"docker 에서 1master + 1slave + 3sentinel 사용 예제 :\"></a>docker 에서 1master + 1slave + 3sentinel 사용 예제 :</h3><ul>\n<li>docker : <a href=\"https://github.com/mdevilliers/docker-rediscluster\" target=\"_blank\" rel=\"noopener\">https://github.com/mdevilliers/docker-rediscluster</a></li>\n<li>docker-compose : <a href=\"https://github.com/AliyunContainerService/redis-cluster\" target=\"_blank\" rel=\"noopener\">https://github.com/AliyunContainerService/redis-cluster</a><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install redis-server</span><br><span class=\"line\">sudo apt-get purge --auto-remove redis-server</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>sentinel 실행 command : <code>redis-server /path/to/sentinel.conf --sentinel</code></p>\n<h3 id=\"docker-swarm-에서-sentinel-사용\"><a href=\"#docker-swarm-에서-sentinel-사용\" class=\"headerlink\" title=\"docker swarm 에서 sentinel 사용\"></a>docker swarm 에서 sentinel 사용</h3><ul>\n<li><a href=\"https://github.com/thomasjpfan/redis-cluster-docker-swarm\" target=\"_blank\" rel=\"noopener\">https://github.com/thomasjpfan/redis-cluster-docker-swarm</a></li>\n</ul>\n<p>docker-compose.yml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3.1&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\"></span><br><span class=\"line\">  redis-sentinel:</span><br><span class=\"line\">    image: thomasjpfan/redis-sentinel:$&#123;TAG:-latest&#125;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - REDIS_IP=redis-zero</span><br><span class=\"line\">      - REDIS_MASTER_NAME=redismaster</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 3</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - redis</span><br><span class=\"line\"></span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: thomasjpfan/redis-look:$&#123;TAG:-latest&#125;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - REDIS_SENTINEL_IP=redis-sentinel</span><br><span class=\"line\">      - REDIS_MASTER_NAME=redismaster</span><br><span class=\"line\">      - REDIS_SENTINEL_PORT=26379</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 3</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - redis</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    external: tru</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"같은-네트워크에-접속해서-테스트해보기-같은-네트워크에서-ip주소-대신-docker-service-이름으로-접속할-수-있다\"><a href=\"#같은-네트워크에-접속해서-테스트해보기-같은-네트워크에서-ip주소-대신-docker-service-이름으로-접속할-수-있다\" class=\"headerlink\" title=\"같은 네트워크에 접속해서 테스트해보기 : 같은 네트워크에서 ip주소 대신 docker service 이름으로 접속할 수 있다.\"></a>같은 네트워크에 접속해서 테스트해보기 : 같은 네트워크에서 ip주소 대신 docker service 이름으로 접속할 수 있다.</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#네트워크 접속</span><br><span class=\"line\">sudo docker run -it --network redis redis /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">#redis ip 정보 얻기</span><br><span class=\"line\">docker ps inspect continerID</span><br><span class=\"line\"></span><br><span class=\"line\">#네트워크에 속한 redis에 요청보내기</span><br><span class=\"line\">redis-cli -h 10.0.0.7 -p 6379 set foo bb</span><br><span class=\"line\"></span><br><span class=\"line\">#redis-sentinel</span><br><span class=\"line\">redis-cli -h redis-sentinel -p 26379 sentinel master redismaster</span><br></pre></td></tr></table></figure>\n<h3 id=\"삭제할-때-stack-도-지워야-함\"><a href=\"#삭제할-때-stack-도-지워야-함\" class=\"headerlink\" title=\"삭제할 때 stack 도 지워야 함\"></a>삭제할 때 stack 도 지워야 함</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stack rm stachID</span><br></pre></td></tr></table></figure>\n<h3 id=\"서버종료-대비-manager-node가-2개이상-이어야-함-2대-중-1대-서버에서-장애가-나면-복구할-수-없음\"><a href=\"#서버종료-대비-manager-node가-2개이상-이어야-함-2대-중-1대-서버에서-장애가-나면-복구할-수-없음\" class=\"headerlink\" title=\"서버종료 대비 / manager node가 2개이상 이어야 함, 2대 중 1대 서버에서 장애가 나면 복구할 수 없음\"></a>서버종료 대비 / manager node가 2개이상 이어야 함, 2대 중 1대 서버에서 장애가 나면 복구할 수 없음</h3><ul>\n<li>manager node 는 static ip를 갖어야 함</li>\n<li><strong>2개 노드만 사용하는 경우 둘다 manager로 사용하기</strong> : leader 서버가 재시작하는 경우 자동 복구가 가능해짐<ul>\n<li><a href=\"https://docs.docker.com/engine/swarm/admin_guide/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/swarm/admin_guide/</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>docker를 이용한 redis sentinel clustering을 구성</p>\n<h1 id=\"redis-clustering\"><a href=\"#redis-clustering\" class=\"headerlink\" title=\"redis clustering\"></a>redis clustering</h1><ul>\n<li>tutorial : <a href=\"https://redis.io/topics/cluster-tutorial\" target=\"_blank\" rel=\"noopener\">https://redis.io/topics/cluster-tutorial</a></li>\n<li>spec : <a href=\"https://redis.io/topics/cluster-spec\" target=\"_blank\" rel=\"noopener\">https://redis.io/topics/cluster-spec</a></li>\n<li>redis sentinel : <a href=\"https://redis.io/topics/sentinel\" target=\"_blank\" rel=\"noopener\">https://redis.io/topics/sentinel</a></li>\n<li>zookeeper를 이용한 clustering : <a href=\"http://d2.naver.com/helloworld/294797\" target=\"_blank\" rel=\"noopener\">http://d2.naver.com/helloworld/294797</a></li>\n</ul>\n<p>Redis는 여러가지 방법으로 HA를 구성할 수 있다. </p>\n<h2 id=\"멀티-마스터를-위한-Redis-Cluster-방식\"><a href=\"#멀티-마스터를-위한-Redis-Cluster-방식\" class=\"headerlink\" title=\"멀티 마스터를 위한 Redis Cluster 방식\"></a>멀티 마스터를 위한 Redis Cluster 방식</h2><ul>\n<li>Redis Cluster는 샤딩 방식으로 데이터가 나뉘어 저장된다.</li>\n<li>Redis Cluster Node 는 2개 포트가 필요하다. <ul>\n<li>client를 위한 포트와 data를 위한 포트(client 포트 + 10000)</li>\n<li>data 포트가 node 사이의 채널 역할을 한다.</li>\n</ul>\n</li>\n<li><strong>docker에서 redis cluster를 사용하려면 host 네트워크를 사용해야 한다.</strong></li>\n</ul>\n<h2 id=\"sentinel-을-이용하는-방법\"><a href=\"#sentinel-을-이용하는-방법\" class=\"headerlink\" title=\"sentinel 을 이용하는 방법\"></a>sentinel 을 이용하는 방법</h2><ul>\n<li>3 + 2n 의 sentinel instance를 추천</li>\n<li>기본 포트는 26379</li>\n<li>client에서 바라보는 end point는 sentinel instance이며, sentinel이 master 접속정보를 client에 전달한다. client는 해당 정보로 다시 master로 요청을 보냄.</li>\n</ul>\n<h3 id=\"docker-에서-1master-1slave-3sentinel-사용-예제\"><a href=\"#docker-에서-1master-1slave-3sentinel-사용-예제\" class=\"headerlink\" title=\"docker 에서 1master + 1slave + 3sentinel 사용 예제 :\"></a>docker 에서 1master + 1slave + 3sentinel 사용 예제 :</h3><ul>\n<li>docker : <a href=\"https://github.com/mdevilliers/docker-rediscluster\" target=\"_blank\" rel=\"noopener\">https://github.com/mdevilliers/docker-rediscluster</a></li>\n<li>docker-compose : <a href=\"https://github.com/AliyunContainerService/redis-cluster\" target=\"_blank\" rel=\"noopener\">https://github.com/AliyunContainerService/redis-cluster</a><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install redis-server</span><br><span class=\"line\">sudo apt-get purge --auto-remove redis-server</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>sentinel 실행 command : <code>redis-server /path/to/sentinel.conf --sentinel</code></p>\n<h3 id=\"docker-swarm-에서-sentinel-사용\"><a href=\"#docker-swarm-에서-sentinel-사용\" class=\"headerlink\" title=\"docker swarm 에서 sentinel 사용\"></a>docker swarm 에서 sentinel 사용</h3><ul>\n<li><a href=\"https://github.com/thomasjpfan/redis-cluster-docker-swarm\" target=\"_blank\" rel=\"noopener\">https://github.com/thomasjpfan/redis-cluster-docker-swarm</a></li>\n</ul>\n<p>docker-compose.yml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3.1&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\"></span><br><span class=\"line\">  redis-sentinel:</span><br><span class=\"line\">    image: thomasjpfan/redis-sentinel:$&#123;TAG:-latest&#125;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - REDIS_IP=redis-zero</span><br><span class=\"line\">      - REDIS_MASTER_NAME=redismaster</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 3</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - redis</span><br><span class=\"line\"></span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: thomasjpfan/redis-look:$&#123;TAG:-latest&#125;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - REDIS_SENTINEL_IP=redis-sentinel</span><br><span class=\"line\">      - REDIS_MASTER_NAME=redismaster</span><br><span class=\"line\">      - REDIS_SENTINEL_PORT=26379</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 3</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - redis</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    external: tru</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"같은-네트워크에-접속해서-테스트해보기-같은-네트워크에서-ip주소-대신-docker-service-이름으로-접속할-수-있다\"><a href=\"#같은-네트워크에-접속해서-테스트해보기-같은-네트워크에서-ip주소-대신-docker-service-이름으로-접속할-수-있다\" class=\"headerlink\" title=\"같은 네트워크에 접속해서 테스트해보기 : 같은 네트워크에서 ip주소 대신 docker service 이름으로 접속할 수 있다.\"></a>같은 네트워크에 접속해서 테스트해보기 : 같은 네트워크에서 ip주소 대신 docker service 이름으로 접속할 수 있다.</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#네트워크 접속</span><br><span class=\"line\">sudo docker run -it --network redis redis /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">#redis ip 정보 얻기</span><br><span class=\"line\">docker ps inspect continerID</span><br><span class=\"line\"></span><br><span class=\"line\">#네트워크에 속한 redis에 요청보내기</span><br><span class=\"line\">redis-cli -h 10.0.0.7 -p 6379 set foo bb</span><br><span class=\"line\"></span><br><span class=\"line\">#redis-sentinel</span><br><span class=\"line\">redis-cli -h redis-sentinel -p 26379 sentinel master redismaster</span><br></pre></td></tr></table></figure>\n<h3 id=\"삭제할-때-stack-도-지워야-함\"><a href=\"#삭제할-때-stack-도-지워야-함\" class=\"headerlink\" title=\"삭제할 때 stack 도 지워야 함\"></a>삭제할 때 stack 도 지워야 함</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stack rm stachID</span><br></pre></td></tr></table></figure>\n<h3 id=\"서버종료-대비-manager-node가-2개이상-이어야-함-2대-중-1대-서버에서-장애가-나면-복구할-수-없음\"><a href=\"#서버종료-대비-manager-node가-2개이상-이어야-함-2대-중-1대-서버에서-장애가-나면-복구할-수-없음\" class=\"headerlink\" title=\"서버종료 대비 / manager node가 2개이상 이어야 함, 2대 중 1대 서버에서 장애가 나면 복구할 수 없음\"></a>서버종료 대비 / manager node가 2개이상 이어야 함, 2대 중 1대 서버에서 장애가 나면 복구할 수 없음</h3><ul>\n<li>manager node 는 static ip를 갖어야 함</li>\n<li><strong>2개 노드만 사용하는 경우 둘다 manager로 사용하기</strong> : leader 서버가 재시작하는 경우 자동 복구가 가능해짐<ul>\n<li><a href=\"https://docs.docker.com/engine/swarm/admin_guide/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/swarm/admin_guide/</a></li>\n</ul>\n</li>\n</ul>\n"},{"title":"ionic-get-started","date":"2019-02-04T06:49:46.000Z","_content":"### 프로젝트 구조\n\n![폴더 구조](/images/ionic/folder_structure.png \"folder_structure\")\n\n- src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )\n- src/pages : 화면 페이지 단위로 구분\n- src/asset : 이미지 등 \n\n### ionic view life cycle\n\nhttp://blog.ionic.io/navigating-lifecycle-events/\n\n### 페이지 파일 구성\n\n한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음\n\n예) hello-ionic/\n- hello-ionic.html\n- hello-ionic.scss\n- hello-ionic.ts\n  ```javascript\n  import { Component } from '@angular/core';\n  \n  @Component({\n    //selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함\n    selector: 'page-hello-ionic',\n    templateUrl: 'hello-ionic.html'\n  })\n  export class HelloIonicPage {\n    constructor() {\n  \n    }\n  }\n  ```\n\n### ionic navigation\n\nionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.\n\n```sbtshell\n#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지\n<ion-nav [root]=\"rootPage\"></ion-nav>\n```\n\n페이지 이동 (push, pop)\n\n```javascript\nclass OtherPage {\n  constructor(public navCtrl: NavController) {}\n\n  //다른 페이지로 이동하기\n  goToOtherPage() {\n    //push another page onto the history stack\n    //causing the nav controller to animate the new page in\n    this.navCtrl.push(OtherPage);\n  }\n\n  //뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)\n  goBack() {\n    this.navCtrl.pop();\n  }\n}\n```\n\n#### 탭 페이지이동 처리\n\n탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함\n\n### component 정리하기 (http://ionicframework.com/docs//api/)\n\n#### http 통신하기\n\nhttp 를 이용하는 방법은 두가지\n- @angular/http 사용\n- @ionic-native/http 사용 \n- 차이점 : https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\n\n@ionic-native/http 사용 예시\n\n- 설치\n  ```sbtshell\n  #설치\n  ionic plugin add --save cordova-plugin-http\n  npm install --save @ionic-native/http\n  ```\n- 설정\n  ```javascript\n  // provider에 추가하기\n  // app.module.ts 파일에 provider로 추가하고 사용해야 함\n  // ...\n  \n  providers: [\n      StatusBar,\n      SplashScreen,\n      HTTP,\n      {provide: ErrorHandler, useClass: IonicErrorHandler}\n    ]\n  \n  // ...\n  ```\n\n@angular/http 사용 예시\n\n- 설정\n  ```javascript\n  // app.module.ts 파일에 모듈 추가하고 사용해야 함\n  // ...\n  import { HttpModule } from '@angular/http';\n  \n  // ...\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  ```\n\n#### 참조문서\n\n- https://ionicframework.com/docs/native/http/\n- http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\n\n\n#### whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\n\n- 설치\n  ```sbtshell\n  cordova plugin add cordova-plugin-whitelist\n  ```\n- proxy 설정하기\n  ```sbtshell\n  #프로젝트의 ionic.config.json 파일에 설정\n  {\n    \"name\": \"auction\",  \"app_id\": \"\",  \"type\": \"ionic-angular\",  \"proxies\": [\n      {\n        \"path\": \"/apt\",      \"proxyUrl\": \"http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev\"    }\n    ]\n  }\n  ```\n\n### typescript 기본\n\nhttps://www.typescriptlang.org/docs/handbook/basic-types.html\n\n### angular2 기본 문법\n\n반복문\n\n```angular2html\n<li *ngFor=\"let hero of heroes” (click)=\"onSelect(hero)>\n    <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n조건문\n\n```angular2html\n<div *ngIf=\"selectedHero\">\n  <h2>{{selectedHero.name}} details!</h2>\n  <div><label>id: </label>{{selectedHero.id}}</div>\n  <div>\n    <label>name: </label>\n    <input [(ngModel)]=\"selectedHero.name\" placeholder=\"name\"/>\n  </div>\n</div>\n```\n\n동적 스타일\n\n```angular2html\n<li *ngFor=\"let hero of heroes\"\n  [class.selected]=\"hero === selectedHero\"\n  (click)=\"onSelect(hero)\">\n  <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n@Injectable() 사용하기 : https://angular.io/docs/ts/latest/guide/dependency-injection.html\n\n","source":"_posts/ionic/ionic-get-started.md","raw":"---\ntitle: ionic-get-started\ndate: 2019-02-04 15:49:46\ntags:\n- mobile\n- ionic\n- angular\ncategories:\n- ionic\n---\n### 프로젝트 구조\n\n![폴더 구조](/images/ionic/folder_structure.png \"folder_structure\")\n\n- src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )\n- src/pages : 화면 페이지 단위로 구분\n- src/asset : 이미지 등 \n\n### ionic view life cycle\n\nhttp://blog.ionic.io/navigating-lifecycle-events/\n\n### 페이지 파일 구성\n\n한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음\n\n예) hello-ionic/\n- hello-ionic.html\n- hello-ionic.scss\n- hello-ionic.ts\n  ```javascript\n  import { Component } from '@angular/core';\n  \n  @Component({\n    //selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함\n    selector: 'page-hello-ionic',\n    templateUrl: 'hello-ionic.html'\n  })\n  export class HelloIonicPage {\n    constructor() {\n  \n    }\n  }\n  ```\n\n### ionic navigation\n\nionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.\n\n```sbtshell\n#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지\n<ion-nav [root]=\"rootPage\"></ion-nav>\n```\n\n페이지 이동 (push, pop)\n\n```javascript\nclass OtherPage {\n  constructor(public navCtrl: NavController) {}\n\n  //다른 페이지로 이동하기\n  goToOtherPage() {\n    //push another page onto the history stack\n    //causing the nav controller to animate the new page in\n    this.navCtrl.push(OtherPage);\n  }\n\n  //뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)\n  goBack() {\n    this.navCtrl.pop();\n  }\n}\n```\n\n#### 탭 페이지이동 처리\n\n탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함\n\n### component 정리하기 (http://ionicframework.com/docs//api/)\n\n#### http 통신하기\n\nhttp 를 이용하는 방법은 두가지\n- @angular/http 사용\n- @ionic-native/http 사용 \n- 차이점 : https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\n\n@ionic-native/http 사용 예시\n\n- 설치\n  ```sbtshell\n  #설치\n  ionic plugin add --save cordova-plugin-http\n  npm install --save @ionic-native/http\n  ```\n- 설정\n  ```javascript\n  // provider에 추가하기\n  // app.module.ts 파일에 provider로 추가하고 사용해야 함\n  // ...\n  \n  providers: [\n      StatusBar,\n      SplashScreen,\n      HTTP,\n      {provide: ErrorHandler, useClass: IonicErrorHandler}\n    ]\n  \n  // ...\n  ```\n\n@angular/http 사용 예시\n\n- 설정\n  ```javascript\n  // app.module.ts 파일에 모듈 추가하고 사용해야 함\n  // ...\n  import { HttpModule } from '@angular/http';\n  \n  // ...\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  ```\n\n#### 참조문서\n\n- https://ionicframework.com/docs/native/http/\n- http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\n\n\n#### whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\n\n- 설치\n  ```sbtshell\n  cordova plugin add cordova-plugin-whitelist\n  ```\n- proxy 설정하기\n  ```sbtshell\n  #프로젝트의 ionic.config.json 파일에 설정\n  {\n    \"name\": \"auction\",  \"app_id\": \"\",  \"type\": \"ionic-angular\",  \"proxies\": [\n      {\n        \"path\": \"/apt\",      \"proxyUrl\": \"http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev\"    }\n    ]\n  }\n  ```\n\n### typescript 기본\n\nhttps://www.typescriptlang.org/docs/handbook/basic-types.html\n\n### angular2 기본 문법\n\n반복문\n\n```angular2html\n<li *ngFor=\"let hero of heroes” (click)=\"onSelect(hero)>\n    <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n조건문\n\n```angular2html\n<div *ngIf=\"selectedHero\">\n  <h2>{{selectedHero.name}} details!</h2>\n  <div><label>id: </label>{{selectedHero.id}}</div>\n  <div>\n    <label>name: </label>\n    <input [(ngModel)]=\"selectedHero.name\" placeholder=\"name\"/>\n  </div>\n</div>\n```\n\n동적 스타일\n\n```angular2html\n<li *ngFor=\"let hero of heroes\"\n  [class.selected]=\"hero === selectedHero\"\n  (click)=\"onSelect(hero)\">\n  <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n@Injectable() 사용하기 : https://angular.io/docs/ts/latest/guide/dependency-injection.html\n\n","slug":"ionic/ionic-get-started","published":1,"updated":"2019-02-04T07:13:17.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zj000vy8uhbtp500ov","content":"<h3 id=\"프로젝트-구조\"><a href=\"#프로젝트-구조\" class=\"headerlink\" title=\"프로젝트 구조\"></a>프로젝트 구조</h3><p><img src=\"/images/ionic/folder_structure.png\" alt=\"폴더 구조\" title=\"folder_structure\"></p>\n<ul>\n<li>src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )</li>\n<li>src/pages : 화면 페이지 단위로 구분</li>\n<li>src/asset : 이미지 등 </li>\n</ul>\n<h3 id=\"ionic-view-life-cycle\"><a href=\"#ionic-view-life-cycle\" class=\"headerlink\" title=\"ionic view life cycle\"></a>ionic view life cycle</h3><p><a href=\"http://blog.ionic.io/navigating-lifecycle-events/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/navigating-lifecycle-events/</a></p>\n<h3 id=\"페이지-파일-구성\"><a href=\"#페이지-파일-구성\" class=\"headerlink\" title=\"페이지 파일 구성\"></a>페이지 파일 구성</h3><p>한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음</p>\n<p>예) hello-ionic/</p>\n<ul>\n<li>hello-ionic.html</li>\n<li>hello-ionic.scss</li>\n<li>hello-ionic.ts<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함</span></span><br><span class=\"line\">  selector: <span class=\"string\">'page-hello-ionic'</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">'hello-ionic.html'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloIonicPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ionic-navigation\"><a href=\"#ionic-navigation\" class=\"headerlink\" title=\"ionic navigation\"></a>ionic navigation</h3><p>ionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지</span><br><span class=\"line\">&lt;ion-nav [root]=&quot;rootPage&quot;&gt;&lt;/ion-nav&gt;</span><br></pre></td></tr></table></figure>\n<p>페이지 이동 (push, pop)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OtherPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(public navCtrl: NavController) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//다른 페이지로 이동하기</span></span><br><span class=\"line\">  goToOtherPage() &#123;</span><br><span class=\"line\">    <span class=\"comment\">//push another page onto the history stack</span></span><br><span class=\"line\">    <span class=\"comment\">//causing the nav controller to animate the new page in</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.push(OtherPage);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)</span></span><br><span class=\"line\">  goBack() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.pop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"탭-페이지이동-처리\"><a href=\"#탭-페이지이동-처리\" class=\"headerlink\" title=\"탭 페이지이동 처리\"></a>탭 페이지이동 처리</h4><p>탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함</p>\n<h3 id=\"component-정리하기-http-ionicframework-com-docs-api\"><a href=\"#component-정리하기-http-ionicframework-com-docs-api\" class=\"headerlink\" title=\"component 정리하기 (http://ionicframework.com/docs//api/)\"></a>component 정리하기 (<a href=\"http://ionicframework.com/docs//api/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs//api/</a>)</h3><h4 id=\"http-통신하기\"><a href=\"#http-통신하기\" class=\"headerlink\" title=\"http 통신하기\"></a>http 통신하기</h4><p>http 를 이용하는 방법은 두가지</p>\n<ul>\n<li>@angular/http 사용</li>\n<li>@ionic-native/http 사용 </li>\n<li>차이점 : <a href=\"https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095</a></li>\n</ul>\n<p>@ionic-native/http 사용 예시</p>\n<ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#설치</span><br><span class=\"line\">ionic plugin add --save cordova-plugin-http</span><br><span class=\"line\">npm install --save @ionic-native/http</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>설정</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// provider에 추가하기</span></span><br><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 provider로 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">providers: [</span><br><span class=\"line\">    StatusBar,</span><br><span class=\"line\">    SplashScreen,</span><br><span class=\"line\">    HTTP,</span><br><span class=\"line\">    &#123;<span class=\"attr\">provide</span>: ErrorHandler, <span class=\"attr\">useClass</span>: IonicErrorHandler&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>@angular/http 사용 예시</p>\n<ul>\n<li>설정<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 모듈 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; HttpModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/http'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">imports: [</span><br><span class=\"line\">  BrowserModule,</span><br><span class=\"line\">  HttpModule,</span><br><span class=\"line\">  IonicModule.forRoot(MyApp)</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"참조문서\"><a href=\"#참조문서\" class=\"headerlink\" title=\"참조문서\"></a>참조문서</h4><ul>\n<li><a href=\"https://ionicframework.com/docs/native/http/\" target=\"_blank\" rel=\"noopener\">https://ionicframework.com/docs/native/http/</a></li>\n<li><a href=\"http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/</a></li>\n</ul>\n<h4 id=\"whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\"><a href=\"#whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\" class=\"headerlink\" title=\"whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\"></a>whitelist 설정 (<a href=\"http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/\" target=\"_blank\" rel=\"noopener\">http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/</a>)</h4><ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova plugin add cordova-plugin-whitelist</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>proxy 설정하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트의 ionic.config.json 파일에 설정</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;auction&quot;,  &quot;app_id&quot;: &quot;&quot;,  &quot;type&quot;: &quot;ionic-angular&quot;,  &quot;proxies&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;path&quot;: &quot;/apt&quot;,      &quot;proxyUrl&quot;: &quot;http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev&quot;    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"typescript-기본\"><a href=\"#typescript-기본\" class=\"headerlink\" title=\"typescript 기본\"></a>typescript 기본</h3><p><a href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\" target=\"_blank\" rel=\"noopener\">https://www.typescriptlang.org/docs/handbook/basic-types.html</a></p>\n<h3 id=\"angular2-기본-문법\"><a href=\"#angular2-기본-문법\" class=\"headerlink\" title=\"angular2 기본 문법\"></a>angular2 기본 문법</h3><p>반복문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes” (click)=&quot;onSelect(hero)&gt;</span><br><span class=\"line\">    &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>조건문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div *ngIf=&quot;selectedHero&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;&#123;&#123;selectedHero.name&#125;&#125; details!&lt;/h2&gt;</span><br><span class=\"line\">  &lt;div&gt;&lt;label&gt;id: &lt;/label&gt;&#123;&#123;selectedHero.id&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;label&gt;name: &lt;/label&gt;</span><br><span class=\"line\">    &lt;input [(ngModel)]=&quot;selectedHero.name&quot; placeholder=&quot;name&quot;/&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>동적 스타일</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes&quot;</span><br><span class=\"line\">  [class.selected]=&quot;hero === selectedHero&quot;</span><br><span class=\"line\">  (click)=&quot;onSelect(hero)&quot;&gt;</span><br><span class=\"line\">  &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>@Injectable() 사용하기 : <a href=\"https://angular.io/docs/ts/latest/guide/dependency-injection.html\" target=\"_blank\" rel=\"noopener\">https://angular.io/docs/ts/latest/guide/dependency-injection.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"프로젝트-구조\"><a href=\"#프로젝트-구조\" class=\"headerlink\" title=\"프로젝트 구조\"></a>프로젝트 구조</h3><p><img src=\"/images/ionic/folder_structure.png\" alt=\"폴더 구조\" title=\"folder_structure\"></p>\n<ul>\n<li>src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )</li>\n<li>src/pages : 화면 페이지 단위로 구분</li>\n<li>src/asset : 이미지 등 </li>\n</ul>\n<h3 id=\"ionic-view-life-cycle\"><a href=\"#ionic-view-life-cycle\" class=\"headerlink\" title=\"ionic view life cycle\"></a>ionic view life cycle</h3><p><a href=\"http://blog.ionic.io/navigating-lifecycle-events/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/navigating-lifecycle-events/</a></p>\n<h3 id=\"페이지-파일-구성\"><a href=\"#페이지-파일-구성\" class=\"headerlink\" title=\"페이지 파일 구성\"></a>페이지 파일 구성</h3><p>한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음</p>\n<p>예) hello-ionic/</p>\n<ul>\n<li>hello-ionic.html</li>\n<li>hello-ionic.scss</li>\n<li>hello-ionic.ts<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함</span></span><br><span class=\"line\">  selector: <span class=\"string\">'page-hello-ionic'</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">'hello-ionic.html'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloIonicPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ionic-navigation\"><a href=\"#ionic-navigation\" class=\"headerlink\" title=\"ionic navigation\"></a>ionic navigation</h3><p>ionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지</span><br><span class=\"line\">&lt;ion-nav [root]=&quot;rootPage&quot;&gt;&lt;/ion-nav&gt;</span><br></pre></td></tr></table></figure>\n<p>페이지 이동 (push, pop)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OtherPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(public navCtrl: NavController) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//다른 페이지로 이동하기</span></span><br><span class=\"line\">  goToOtherPage() &#123;</span><br><span class=\"line\">    <span class=\"comment\">//push another page onto the history stack</span></span><br><span class=\"line\">    <span class=\"comment\">//causing the nav controller to animate the new page in</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.push(OtherPage);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)</span></span><br><span class=\"line\">  goBack() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.pop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"탭-페이지이동-처리\"><a href=\"#탭-페이지이동-처리\" class=\"headerlink\" title=\"탭 페이지이동 처리\"></a>탭 페이지이동 처리</h4><p>탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함</p>\n<h3 id=\"component-정리하기-http-ionicframework-com-docs-api\"><a href=\"#component-정리하기-http-ionicframework-com-docs-api\" class=\"headerlink\" title=\"component 정리하기 (http://ionicframework.com/docs//api/)\"></a>component 정리하기 (<a href=\"http://ionicframework.com/docs//api/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs//api/</a>)</h3><h4 id=\"http-통신하기\"><a href=\"#http-통신하기\" class=\"headerlink\" title=\"http 통신하기\"></a>http 통신하기</h4><p>http 를 이용하는 방법은 두가지</p>\n<ul>\n<li>@angular/http 사용</li>\n<li>@ionic-native/http 사용 </li>\n<li>차이점 : <a href=\"https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095</a></li>\n</ul>\n<p>@ionic-native/http 사용 예시</p>\n<ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#설치</span><br><span class=\"line\">ionic plugin add --save cordova-plugin-http</span><br><span class=\"line\">npm install --save @ionic-native/http</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>설정</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// provider에 추가하기</span></span><br><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 provider로 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">providers: [</span><br><span class=\"line\">    StatusBar,</span><br><span class=\"line\">    SplashScreen,</span><br><span class=\"line\">    HTTP,</span><br><span class=\"line\">    &#123;<span class=\"attr\">provide</span>: ErrorHandler, <span class=\"attr\">useClass</span>: IonicErrorHandler&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>@angular/http 사용 예시</p>\n<ul>\n<li>설정<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 모듈 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; HttpModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/http'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">imports: [</span><br><span class=\"line\">  BrowserModule,</span><br><span class=\"line\">  HttpModule,</span><br><span class=\"line\">  IonicModule.forRoot(MyApp)</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"참조문서\"><a href=\"#참조문서\" class=\"headerlink\" title=\"참조문서\"></a>참조문서</h4><ul>\n<li><a href=\"https://ionicframework.com/docs/native/http/\" target=\"_blank\" rel=\"noopener\">https://ionicframework.com/docs/native/http/</a></li>\n<li><a href=\"http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/</a></li>\n</ul>\n<h4 id=\"whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\"><a href=\"#whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\" class=\"headerlink\" title=\"whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\"></a>whitelist 설정 (<a href=\"http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/\" target=\"_blank\" rel=\"noopener\">http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/</a>)</h4><ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova plugin add cordova-plugin-whitelist</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>proxy 설정하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트의 ionic.config.json 파일에 설정</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;auction&quot;,  &quot;app_id&quot;: &quot;&quot;,  &quot;type&quot;: &quot;ionic-angular&quot;,  &quot;proxies&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;path&quot;: &quot;/apt&quot;,      &quot;proxyUrl&quot;: &quot;http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev&quot;    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"typescript-기본\"><a href=\"#typescript-기본\" class=\"headerlink\" title=\"typescript 기본\"></a>typescript 기본</h3><p><a href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\" target=\"_blank\" rel=\"noopener\">https://www.typescriptlang.org/docs/handbook/basic-types.html</a></p>\n<h3 id=\"angular2-기본-문법\"><a href=\"#angular2-기본-문법\" class=\"headerlink\" title=\"angular2 기본 문법\"></a>angular2 기본 문법</h3><p>반복문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes” (click)=&quot;onSelect(hero)&gt;</span><br><span class=\"line\">    &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>조건문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div *ngIf=&quot;selectedHero&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;&#123;&#123;selectedHero.name&#125;&#125; details!&lt;/h2&gt;</span><br><span class=\"line\">  &lt;div&gt;&lt;label&gt;id: &lt;/label&gt;&#123;&#123;selectedHero.id&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;label&gt;name: &lt;/label&gt;</span><br><span class=\"line\">    &lt;input [(ngModel)]=&quot;selectedHero.name&quot; placeholder=&quot;name&quot;/&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>동적 스타일</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes&quot;</span><br><span class=\"line\">  [class.selected]=&quot;hero === selectedHero&quot;</span><br><span class=\"line\">  (click)=&quot;onSelect(hero)&quot;&gt;</span><br><span class=\"line\">  &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>@Injectable() 사용하기 : <a href=\"https://angular.io/docs/ts/latest/guide/dependency-injection.html\" target=\"_blank\" rel=\"noopener\">https://angular.io/docs/ts/latest/guide/dependency-injection.html</a></p>\n"},{"title":"docker","date":"2019-02-24T11:58:52.000Z","_content":"\nVagrant를 이용해 가상으로 서버를 생성하여 docker를 연습해볼 수 있는 환경을 만들어보자.\n\n# vagrant 환경설정 \n1. virtual box 설치 : https://www.virtualbox.org/wiki/Downloads\n2. vagrant 설치 : https://www.vagrantup.com/downloads.html\n3. vagrant box 검색 : https://app.vagrantup.com/boxes/search\n\n## vagrant 기본 command\n\n```sbtshell\n#ubuntu 16.04 설치하기\nvagrant init ubuntu/xenial64\n\n# 재시작 (실행 중 변경된 환경설정 적용) --provision 옵션을 주면 새로 프로비져닝한다.\nvagrant reload\n  \n#정지 상태로 변경\nvagrant suspend\n\n#os 종료\nvagrant halt\n\n#파일삭제 후 os 종료\nvagrant destroy\n  \n#재시작 or 시작\nvagrant up\n\n#vagrant os 접속 : init한 디렉토리에서 실행\n#기본 id/password => vagrant/vagrant\nvagrant ssh \n```\n \n## vagrant 설정 파일 수정\n\n- port forwarding : config.vm.network \"forwarded_port\", guest: 6379, host: 1234\n- 아이피 주소 지정 : config.vm.network \"private_network\", ip: \"192.168.33.10\"\n\n# docker 설치하기\n\nubuntu(16.04)에 docker 설치하기 : https://docs.docker.com/install/linux/docker-ce/ubuntu/\n\n## installation command\n\n```sbtshell\n# 1\nsudo apt-get update\n\n# 2\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n\n# 3\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\n# 4\nsudo apt-key fingerprint 0EBFCD88\n\n# 5\nsudo add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\n# 6\nsudo apt-get update\n\n# 7-1 (latest 버전 설치하기)\nsudo apt-get install docker-ce\n\n# 7-2 (지정한 버전 설치하기)\nsudo apt-get install docker-ce=<VERSION>\n\n# 8 버전확인하기\nsudo docker --version\n\n# 9 hello-world 실행해보기\nsudo docker run hello-world\n\n# (option) start on boot 설정\n#enable\nsudo systemctl enable docker\n#disable\nsudo systemctl disable docker\n```\n\n# docker basic command\n\n```sbtshell\n## List Docker CLI commands\ndocker\ndocker container --help\n\n## Display Docker version and info\ndocker --version\ndocker version\ndocker info\n\n## Excecute Docker image : docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG…]\n## 옵션\n## -d    detached mode 흔히 말하는 백그라운드 모드\n## -p    호스트와 컨테이너의 포트를 연결 (포워딩)\n## -v    호스트와 컨테이너의 디렉토리를 연결 (마운트)\n## -e    컨테이너 내에서 사용할 환경변수 설정\n## –name    컨테이너 이름 설정\n## –rm    프로세스 종료시 컨테이너 자동 제거\n## -it    -i와 -t를 동시에 사용한 것으로 터미널 입력을 위한 옵션\n## –link    컨테이너 연결 [컨테이너명:별칭]\ndocker run hello-world\n\n## List Docker images\ndocker image ls\n\n## List Docker containers (running, all, all in quiet mode)\ndocker container ls (= docker ps)\ndocker container ls -all #종료된 컨테이너 포함\ndocker container ls -a -q\n\n## start, stop, remove start Docker container\ndocker start containerID\ndocker stop containerID\ndocker rm containerID\n\n## docker log 확인하기\n## 옵션\n## --tail\n## -f\ndocker logs -f containerID\n\n##실행중인 container에 접속하기\ndocker exec -it 053abaac4f93 /bin/bash\n```\n\n# docker 실행 & 접속하기\n\n1. 이미지 찾기 : https://hub.docker.com/explore/\n2. ubuntu 이미지 실행하기 : `docker run -it ubuntu:16.04 /bin/bash`\n  - 실행중인 프로세스가 없으면 컨테이너가 바로 종료됨\n3. redis 이미지 실행하기 : `docker run -d -p 6379:6379 redis`\n4. redis에 데이터 저장, 읽기 \n```sbtshell\ntelnet localhost 6379\nset foo bar\nget foo\n## to exit telnet\nctrl + ] -> ctrl + d\n```\n\n# swarm 설정하기\n\n1. manager swarm initialization : swarm이 생성되면 자동으로 ingress라는 overlay 네트워크가 만들어짐\n\n```sbtshell\n# swarm 모드를 active 하면 ingress overlay network 가 생성됨\ndocker swarm init --advertise-addr ip_address_to_connect_with_worker\n\n#example\n#docker swarm init --advertise-addr 192.168.33.10\n\n#swarm 해제하기\ndocker swarm leave\n```\n\n2. worker swarm 만들기\n\n```sbtshell\ndocker swarm join --token token_value manager_node_ip_address:2377\n\n#example\n#docker swarm join --token SWMTKN-1-63g2es09cpi3fgu3js0jhxc42e4hzp2npcuub8gxdv8ozra1ih-csp26l0gdhoeajgi8yxq7cm7c 192.168.33.10:2377\n\n```\n\n3. 생성된 node 확인하기\n\n```sbtshell\ndocker node ls\n```\n\n4. 서비스 실행하기\n\n```sbtshell\ndocker service create --name redis-m -p 6379:6379 redis\n\n#실행된 서비스 확인하기 : manager에서만 command 가능\ndocker service ls\n\n#생성된 컨테이너 확인\n## host의 컨테이너 확인\ndocker container ls \ndocker ps\n\n## node에서 실행중인 컨테이너 확인 : manager에서만 command 가능\ndocker node ps \n```\n\n5. HA(LB) 설계 : https://docs.docker.com/engine/swarm/ingress/#configure-an-external-load-balancer\n6. TEST\n\n```sbtshell\n#192.168.33.11 서버\ntelnet localhost 6379\nset test test\n\n#192.168.33.10 서버\ntelnet localhost 6379\nget test\n```\n\n7. 서버 스케일링하기 : 매니저 노드에서 실행\n\n```sbtshell\ndocker service scale redis-m=2\n## *redis와 같은 data store는 data sync를 위해 솔루션에 맞는 추가설정을 해야 함 ##\n```\n\n# docker network : https://docs.docker.com/network/\n\n-  driver : host (호스트와 다른 설정이 필요할 때) / bridge (한 호스트 여러 컨테이너) / overlay (여러 호스트 여러 컨테이너, 다양한 애플리케이션) / macvlan / none\n-  network scope : local (호스트안에서 연결을 제공) / swarm (swarm 클러스터에서 연결이 가능)\n\n\n## overlay 네트워크 생성 : [network-turorial-overlay](https://docs.docker.com/network/network-tutorial-overlay/#walkthrough)\nswarm init과 함께 생성되는 ingress overlay 네트워크는 customize를 위해 삭제하고 원하는 옵션(서브넷, 게이트웨이…)을 주고 다시 만들 수 있다.\n\n1. swarm initialization\n\n```sbtshell\ndocker swarm init\n```\n\n2. 네트워크 생성 : user-defined overlay / overlay network for standalone containers\n\n```sbtshell\n#overlay network 생성 on manager\ndocker network create -d overlay nginx-net\n\n#생성한 network 에 서비스 실행\n#example (-p host port/geust port)\n#docker service create --name redis-net-test --network redis-test --replicas 1 -p 6379:6379 redis\n\n#attachable을 이용해서 overlay 네트워크에 service가 아닌 container를 직섭 실행할 수 있다. \ndocker network create --driver=overlay --attachable test-net\n\n#목록\ndocker network ls\n```\n\n# Dockerizing : 도커 이미지 만들기 \n\n## image build or commit\n\n```sbtshell\ndocker build\ndocker commit\n```\n\n## push to registry\n\n```sbtshell\ndocker push\n```\n\n## docker file 설정 : [define Dockerfile](https://docs.docker.com/get-started/part2/#your-new-development-environment)\n\n```sbtshell\n#example\nFROM node:4.6.1\n\nADD ./ /app\nWORKDIR /app\nRUN npm config set registry http://registry.npmjs.org\nRUN npm install pm2@latest -g\nRUN npm install\n\nENV PORT 80\nEXPOSE 80\n\n#CMD [\"node\", \"api.js\"\n```\n\n# docker compose + swarm 실행하기 : [compose](https://docs.docker.com/compose/overview/)\n\n-  docker compose 는 여러 컨테이너를 정의하고 실행하기 위한 툴이다.\n-  docker compose 버전 3에서 swarm 서비스 배포가 가능하다.\n\n## 설치하기\n\n```sbtshell\n#download\nsudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n#실행권한주기 \nsudo chmod +x /usr/local/bin/docker-compose\n\n#버전확인\ndocker-compose --version\n```\n\n## example docker-compose.yml file : [Example](https://github.com/docker/labs/blob/master/beginner/chapters/votingapp.md)\n\n```sbtshell\nversion: \"3\"\nservices:\n\n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379\"\n    networks:\n      - frontend\n    deploy:\n      replicas: 2\n      update_config:\n        parallelism: 2\n        delay: 10s\n      restart_policy:\n        condition: on-failure\n  db:\n    image: postgres:9.4\n    volumes:\n      - db-data:/var/lib/postgresql/data\n    networks:\n      - backend\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n  vote:\n    image: dockersamples/examplevotingapp_vote:before\n    ports:\n      - 5000:80\n    networks:\n      - frontend\n    depends_on:\n      - redis\n    deploy:\n      replicas: 2\n      update_config:\n        parallelism: 2\n      restart_policy:\n        condition: on-failure\n  result:\n    image: dockersamples/examplevotingapp_result:before\n    ports:\n      - 5001:80\n    networks:\n      - backend\n    depends_on:\n      - db\n    deploy:\n      replicas: 1\n      update_config:\n        parallelism: 2\n        delay: 10s\n      restart_policy:\n        condition: on-failure\n\n  worker:\n    image: dockersamples/examplevotingapp_worker\n    networks:\n      - frontend\n      - backend\n    deploy:\n      mode: replicated\n      replicas: 1\n      labels: [APP=VOTING]\n      restart_policy:\n        condition: on-failure\n        delay: 10s\n        max_attempts: 3\n        window: 120s\n      placement:\n        constraints: [node.role == manager]\n\n  visualizer:\n    image: dockersamples/visualizer\n    ports:\n      - \"8080:8080\"\n    stop_grace_period: 1m30s\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n\nnetworks:\n  frontend:\n  backend:\n\nvolumes:\n  db-data:\n```\n\n## 실행\n\n`docker stack deploy --compose-file docker-compose.yml DEPLOYED_NAM`\n\n## redis master + slave 생성\n\n1. 파일 작성 : docker-compose.yml\n\n```sbtshell\nversion: ‘3.3'\nservices:\n  redis-master:\n    image: redis\n    #ports:\n      #- \"6379:6379\" #host:container\nnetworks:\n     - some-network\n  redis-slave:\n    image: redis\n    command: redis-server --slaveof redis-master 6379\ndeploy:\n      replicas: 3\n    networks:\n     - some-network\n\n\nnetworks:\n  some-network:\ndriver: overlay\n    attachable: true\n```\n\n2. 실행\n\n```sbtshell\n#overlay network가 새로 생성되면서 서비스 2개가 생김\n#port가 swarm외부에 열려있지 않음\ndocker stack deploy --compose-file docker-compose.yml redis-clu\n\n#service 확인 : 서비스에서 보이는 포트는 외부에서 swarm으로 들어가는 포트 정보\ndocker service ls\n\n#컨테이너 확인 : 컨테이너의 포트정보는 현재 컨테이너에서 실행중인 포트정보\ndocker ps\n```\n\n# reference\n- docker 무작정 따라하기 : https://www.slideshare.net/pyrasis/docker-fordummies-44424016\n- docker command : https://docs.docker.com/edge/engine/reference/commandline/docker/\n- swam : https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\n- docker를 이용한 ci stack 만들기 : https://github.com/marcelbirkner/docker-ci-tool-stack\n- docker network architecture : https://success.docker.com/article/Docker_Reference_Architecture-_Designing_Scalable,_Portable_Docker_Container_Networks\n- docker 이미지 만들기 1 : http://www.nurinamu.com/dev/2016/07/04/create-a-docker-image/\n- docker 이미지 만들기 2 : https://subicura.com/2017/02/10/docker-guide-for-beginners-create-image-and-deploy.html\n- vagrant : https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\n","source":"_posts/docker/docker.md","raw":"---\ntitle: docker\ndate: 2019-02-24 20:58:52\ntags:\n- docker\n- container\n- swarm\n- docker compose\n- vagrant\ncategories:\n- docker\n---\n\nVagrant를 이용해 가상으로 서버를 생성하여 docker를 연습해볼 수 있는 환경을 만들어보자.\n\n# vagrant 환경설정 \n1. virtual box 설치 : https://www.virtualbox.org/wiki/Downloads\n2. vagrant 설치 : https://www.vagrantup.com/downloads.html\n3. vagrant box 검색 : https://app.vagrantup.com/boxes/search\n\n## vagrant 기본 command\n\n```sbtshell\n#ubuntu 16.04 설치하기\nvagrant init ubuntu/xenial64\n\n# 재시작 (실행 중 변경된 환경설정 적용) --provision 옵션을 주면 새로 프로비져닝한다.\nvagrant reload\n  \n#정지 상태로 변경\nvagrant suspend\n\n#os 종료\nvagrant halt\n\n#파일삭제 후 os 종료\nvagrant destroy\n  \n#재시작 or 시작\nvagrant up\n\n#vagrant os 접속 : init한 디렉토리에서 실행\n#기본 id/password => vagrant/vagrant\nvagrant ssh \n```\n \n## vagrant 설정 파일 수정\n\n- port forwarding : config.vm.network \"forwarded_port\", guest: 6379, host: 1234\n- 아이피 주소 지정 : config.vm.network \"private_network\", ip: \"192.168.33.10\"\n\n# docker 설치하기\n\nubuntu(16.04)에 docker 설치하기 : https://docs.docker.com/install/linux/docker-ce/ubuntu/\n\n## installation command\n\n```sbtshell\n# 1\nsudo apt-get update\n\n# 2\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n\n# 3\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\n# 4\nsudo apt-key fingerprint 0EBFCD88\n\n# 5\nsudo add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\n# 6\nsudo apt-get update\n\n# 7-1 (latest 버전 설치하기)\nsudo apt-get install docker-ce\n\n# 7-2 (지정한 버전 설치하기)\nsudo apt-get install docker-ce=<VERSION>\n\n# 8 버전확인하기\nsudo docker --version\n\n# 9 hello-world 실행해보기\nsudo docker run hello-world\n\n# (option) start on boot 설정\n#enable\nsudo systemctl enable docker\n#disable\nsudo systemctl disable docker\n```\n\n# docker basic command\n\n```sbtshell\n## List Docker CLI commands\ndocker\ndocker container --help\n\n## Display Docker version and info\ndocker --version\ndocker version\ndocker info\n\n## Excecute Docker image : docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG…]\n## 옵션\n## -d    detached mode 흔히 말하는 백그라운드 모드\n## -p    호스트와 컨테이너의 포트를 연결 (포워딩)\n## -v    호스트와 컨테이너의 디렉토리를 연결 (마운트)\n## -e    컨테이너 내에서 사용할 환경변수 설정\n## –name    컨테이너 이름 설정\n## –rm    프로세스 종료시 컨테이너 자동 제거\n## -it    -i와 -t를 동시에 사용한 것으로 터미널 입력을 위한 옵션\n## –link    컨테이너 연결 [컨테이너명:별칭]\ndocker run hello-world\n\n## List Docker images\ndocker image ls\n\n## List Docker containers (running, all, all in quiet mode)\ndocker container ls (= docker ps)\ndocker container ls -all #종료된 컨테이너 포함\ndocker container ls -a -q\n\n## start, stop, remove start Docker container\ndocker start containerID\ndocker stop containerID\ndocker rm containerID\n\n## docker log 확인하기\n## 옵션\n## --tail\n## -f\ndocker logs -f containerID\n\n##실행중인 container에 접속하기\ndocker exec -it 053abaac4f93 /bin/bash\n```\n\n# docker 실행 & 접속하기\n\n1. 이미지 찾기 : https://hub.docker.com/explore/\n2. ubuntu 이미지 실행하기 : `docker run -it ubuntu:16.04 /bin/bash`\n  - 실행중인 프로세스가 없으면 컨테이너가 바로 종료됨\n3. redis 이미지 실행하기 : `docker run -d -p 6379:6379 redis`\n4. redis에 데이터 저장, 읽기 \n```sbtshell\ntelnet localhost 6379\nset foo bar\nget foo\n## to exit telnet\nctrl + ] -> ctrl + d\n```\n\n# swarm 설정하기\n\n1. manager swarm initialization : swarm이 생성되면 자동으로 ingress라는 overlay 네트워크가 만들어짐\n\n```sbtshell\n# swarm 모드를 active 하면 ingress overlay network 가 생성됨\ndocker swarm init --advertise-addr ip_address_to_connect_with_worker\n\n#example\n#docker swarm init --advertise-addr 192.168.33.10\n\n#swarm 해제하기\ndocker swarm leave\n```\n\n2. worker swarm 만들기\n\n```sbtshell\ndocker swarm join --token token_value manager_node_ip_address:2377\n\n#example\n#docker swarm join --token SWMTKN-1-63g2es09cpi3fgu3js0jhxc42e4hzp2npcuub8gxdv8ozra1ih-csp26l0gdhoeajgi8yxq7cm7c 192.168.33.10:2377\n\n```\n\n3. 생성된 node 확인하기\n\n```sbtshell\ndocker node ls\n```\n\n4. 서비스 실행하기\n\n```sbtshell\ndocker service create --name redis-m -p 6379:6379 redis\n\n#실행된 서비스 확인하기 : manager에서만 command 가능\ndocker service ls\n\n#생성된 컨테이너 확인\n## host의 컨테이너 확인\ndocker container ls \ndocker ps\n\n## node에서 실행중인 컨테이너 확인 : manager에서만 command 가능\ndocker node ps \n```\n\n5. HA(LB) 설계 : https://docs.docker.com/engine/swarm/ingress/#configure-an-external-load-balancer\n6. TEST\n\n```sbtshell\n#192.168.33.11 서버\ntelnet localhost 6379\nset test test\n\n#192.168.33.10 서버\ntelnet localhost 6379\nget test\n```\n\n7. 서버 스케일링하기 : 매니저 노드에서 실행\n\n```sbtshell\ndocker service scale redis-m=2\n## *redis와 같은 data store는 data sync를 위해 솔루션에 맞는 추가설정을 해야 함 ##\n```\n\n# docker network : https://docs.docker.com/network/\n\n-  driver : host (호스트와 다른 설정이 필요할 때) / bridge (한 호스트 여러 컨테이너) / overlay (여러 호스트 여러 컨테이너, 다양한 애플리케이션) / macvlan / none\n-  network scope : local (호스트안에서 연결을 제공) / swarm (swarm 클러스터에서 연결이 가능)\n\n\n## overlay 네트워크 생성 : [network-turorial-overlay](https://docs.docker.com/network/network-tutorial-overlay/#walkthrough)\nswarm init과 함께 생성되는 ingress overlay 네트워크는 customize를 위해 삭제하고 원하는 옵션(서브넷, 게이트웨이…)을 주고 다시 만들 수 있다.\n\n1. swarm initialization\n\n```sbtshell\ndocker swarm init\n```\n\n2. 네트워크 생성 : user-defined overlay / overlay network for standalone containers\n\n```sbtshell\n#overlay network 생성 on manager\ndocker network create -d overlay nginx-net\n\n#생성한 network 에 서비스 실행\n#example (-p host port/geust port)\n#docker service create --name redis-net-test --network redis-test --replicas 1 -p 6379:6379 redis\n\n#attachable을 이용해서 overlay 네트워크에 service가 아닌 container를 직섭 실행할 수 있다. \ndocker network create --driver=overlay --attachable test-net\n\n#목록\ndocker network ls\n```\n\n# Dockerizing : 도커 이미지 만들기 \n\n## image build or commit\n\n```sbtshell\ndocker build\ndocker commit\n```\n\n## push to registry\n\n```sbtshell\ndocker push\n```\n\n## docker file 설정 : [define Dockerfile](https://docs.docker.com/get-started/part2/#your-new-development-environment)\n\n```sbtshell\n#example\nFROM node:4.6.1\n\nADD ./ /app\nWORKDIR /app\nRUN npm config set registry http://registry.npmjs.org\nRUN npm install pm2@latest -g\nRUN npm install\n\nENV PORT 80\nEXPOSE 80\n\n#CMD [\"node\", \"api.js\"\n```\n\n# docker compose + swarm 실행하기 : [compose](https://docs.docker.com/compose/overview/)\n\n-  docker compose 는 여러 컨테이너를 정의하고 실행하기 위한 툴이다.\n-  docker compose 버전 3에서 swarm 서비스 배포가 가능하다.\n\n## 설치하기\n\n```sbtshell\n#download\nsudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n#실행권한주기 \nsudo chmod +x /usr/local/bin/docker-compose\n\n#버전확인\ndocker-compose --version\n```\n\n## example docker-compose.yml file : [Example](https://github.com/docker/labs/blob/master/beginner/chapters/votingapp.md)\n\n```sbtshell\nversion: \"3\"\nservices:\n\n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379\"\n    networks:\n      - frontend\n    deploy:\n      replicas: 2\n      update_config:\n        parallelism: 2\n        delay: 10s\n      restart_policy:\n        condition: on-failure\n  db:\n    image: postgres:9.4\n    volumes:\n      - db-data:/var/lib/postgresql/data\n    networks:\n      - backend\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n  vote:\n    image: dockersamples/examplevotingapp_vote:before\n    ports:\n      - 5000:80\n    networks:\n      - frontend\n    depends_on:\n      - redis\n    deploy:\n      replicas: 2\n      update_config:\n        parallelism: 2\n      restart_policy:\n        condition: on-failure\n  result:\n    image: dockersamples/examplevotingapp_result:before\n    ports:\n      - 5001:80\n    networks:\n      - backend\n    depends_on:\n      - db\n    deploy:\n      replicas: 1\n      update_config:\n        parallelism: 2\n        delay: 10s\n      restart_policy:\n        condition: on-failure\n\n  worker:\n    image: dockersamples/examplevotingapp_worker\n    networks:\n      - frontend\n      - backend\n    deploy:\n      mode: replicated\n      replicas: 1\n      labels: [APP=VOTING]\n      restart_policy:\n        condition: on-failure\n        delay: 10s\n        max_attempts: 3\n        window: 120s\n      placement:\n        constraints: [node.role == manager]\n\n  visualizer:\n    image: dockersamples/visualizer\n    ports:\n      - \"8080:8080\"\n    stop_grace_period: 1m30s\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n\nnetworks:\n  frontend:\n  backend:\n\nvolumes:\n  db-data:\n```\n\n## 실행\n\n`docker stack deploy --compose-file docker-compose.yml DEPLOYED_NAM`\n\n## redis master + slave 생성\n\n1. 파일 작성 : docker-compose.yml\n\n```sbtshell\nversion: ‘3.3'\nservices:\n  redis-master:\n    image: redis\n    #ports:\n      #- \"6379:6379\" #host:container\nnetworks:\n     - some-network\n  redis-slave:\n    image: redis\n    command: redis-server --slaveof redis-master 6379\ndeploy:\n      replicas: 3\n    networks:\n     - some-network\n\n\nnetworks:\n  some-network:\ndriver: overlay\n    attachable: true\n```\n\n2. 실행\n\n```sbtshell\n#overlay network가 새로 생성되면서 서비스 2개가 생김\n#port가 swarm외부에 열려있지 않음\ndocker stack deploy --compose-file docker-compose.yml redis-clu\n\n#service 확인 : 서비스에서 보이는 포트는 외부에서 swarm으로 들어가는 포트 정보\ndocker service ls\n\n#컨테이너 확인 : 컨테이너의 포트정보는 현재 컨테이너에서 실행중인 포트정보\ndocker ps\n```\n\n# reference\n- docker 무작정 따라하기 : https://www.slideshare.net/pyrasis/docker-fordummies-44424016\n- docker command : https://docs.docker.com/edge/engine/reference/commandline/docker/\n- swam : https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\n- docker를 이용한 ci stack 만들기 : https://github.com/marcelbirkner/docker-ci-tool-stack\n- docker network architecture : https://success.docker.com/article/Docker_Reference_Architecture-_Designing_Scalable,_Portable_Docker_Container_Networks\n- docker 이미지 만들기 1 : http://www.nurinamu.com/dev/2016/07/04/create-a-docker-image/\n- docker 이미지 만들기 2 : https://subicura.com/2017/02/10/docker-guide-for-beginners-create-image-and-deploy.html\n- vagrant : https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\n","slug":"docker/docker","published":1,"updated":"2019-06-29T07:15:27.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zp000yy8uhs8a1p7hn","content":"<p>Vagrant를 이용해 가상으로 서버를 생성하여 docker를 연습해볼 수 있는 환경을 만들어보자.</p>\n<h1 id=\"vagrant-환경설정\"><a href=\"#vagrant-환경설정\" class=\"headerlink\" title=\"vagrant 환경설정\"></a>vagrant 환경설정</h1><ol>\n<li>virtual box 설치 : <a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">https://www.virtualbox.org/wiki/Downloads</a></li>\n<li>vagrant 설치 : <a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\" rel=\"noopener\">https://www.vagrantup.com/downloads.html</a></li>\n<li>vagrant box 검색 : <a href=\"https://app.vagrantup.com/boxes/search\" target=\"_blank\" rel=\"noopener\">https://app.vagrantup.com/boxes/search</a></li>\n</ol>\n<h2 id=\"vagrant-기본-command\"><a href=\"#vagrant-기본-command\" class=\"headerlink\" title=\"vagrant 기본 command\"></a>vagrant 기본 command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ubuntu 16.04 설치하기</span><br><span class=\"line\">vagrant init ubuntu/xenial64</span><br><span class=\"line\"></span><br><span class=\"line\"># 재시작 (실행 중 변경된 환경설정 적용) --provision 옵션을 주면 새로 프로비져닝한다.</span><br><span class=\"line\">vagrant reload</span><br><span class=\"line\">  </span><br><span class=\"line\">#정지 상태로 변경</span><br><span class=\"line\">vagrant suspend</span><br><span class=\"line\"></span><br><span class=\"line\">#os 종료</span><br><span class=\"line\">vagrant halt</span><br><span class=\"line\"></span><br><span class=\"line\">#파일삭제 후 os 종료</span><br><span class=\"line\">vagrant destroy</span><br><span class=\"line\">  </span><br><span class=\"line\">#재시작 or 시작</span><br><span class=\"line\">vagrant up</span><br><span class=\"line\"></span><br><span class=\"line\">#vagrant os 접속 : init한 디렉토리에서 실행</span><br><span class=\"line\">#기본 id/password =&gt; vagrant/vagrant</span><br><span class=\"line\">vagrant ssh</span><br></pre></td></tr></table></figure>\n<h2 id=\"vagrant-설정-파일-수정\"><a href=\"#vagrant-설정-파일-수정\" class=\"headerlink\" title=\"vagrant 설정 파일 수정\"></a>vagrant 설정 파일 수정</h2><ul>\n<li>port forwarding : config.vm.network “forwarded_port”, guest: 6379, host: 1234</li>\n<li>아이피 주소 지정 : config.vm.network “private_network”, ip: “192.168.33.10”</li>\n</ul>\n<h1 id=\"docker-설치하기\"><a href=\"#docker-설치하기\" class=\"headerlink\" title=\"docker 설치하기\"></a>docker 설치하기</h1><p>ubuntu(16.04)에 docker 설치하기 : <a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></p>\n<h2 id=\"installation-command\"><a href=\"#installation-command\" class=\"headerlink\" title=\"installation command\"></a>installation command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\"># 2</span><br><span class=\"line\">sudo apt-get install \\</span><br><span class=\"line\">    apt-transport-https \\</span><br><span class=\"line\">    ca-certificates \\</span><br><span class=\"line\">    curl \\</span><br><span class=\"line\">    software-properties-common</span><br><span class=\"line\"></span><br><span class=\"line\"># 3</span><br><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\"># 4</span><br><span class=\"line\">sudo apt-key fingerprint 0EBFCD88</span><br><span class=\"line\"></span><br><span class=\"line\"># 5</span><br><span class=\"line\">sudo add-apt-repository \\</span><br><span class=\"line\">   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\</span><br><span class=\"line\">   $(lsb_release -cs) \\</span><br><span class=\"line\">   stable&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 6</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\"># 7-1 (latest 버전 설치하기)</span><br><span class=\"line\">sudo apt-get install docker-ce</span><br><span class=\"line\"></span><br><span class=\"line\"># 7-2 (지정한 버전 설치하기)</span><br><span class=\"line\">sudo apt-get install docker-ce=&lt;VERSION&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># 8 버전확인하기</span><br><span class=\"line\">sudo docker --version</span><br><span class=\"line\"></span><br><span class=\"line\"># 9 hello-world 실행해보기</span><br><span class=\"line\">sudo docker run hello-world</span><br><span class=\"line\"></span><br><span class=\"line\"># (option) start on boot 설정</span><br><span class=\"line\">#enable</span><br><span class=\"line\">sudo systemctl enable docker</span><br><span class=\"line\">#disable</span><br><span class=\"line\">sudo systemctl disable docker</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-basic-command\"><a href=\"#docker-basic-command\" class=\"headerlink\" title=\"docker basic command\"></a>docker basic command</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## List Docker CLI commands</span><br><span class=\"line\">docker</span><br><span class=\"line\">docker container --help</span><br><span class=\"line\"></span><br><span class=\"line\">## Display Docker version and info</span><br><span class=\"line\">docker --version</span><br><span class=\"line\">docker version</span><br><span class=\"line\">docker info</span><br><span class=\"line\"></span><br><span class=\"line\">## Excecute Docker image : docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG…]</span><br><span class=\"line\">## 옵션</span><br><span class=\"line\">## -d    detached mode 흔히 말하는 백그라운드 모드</span><br><span class=\"line\">## -p    호스트와 컨테이너의 포트를 연결 (포워딩)</span><br><span class=\"line\">## -v    호스트와 컨테이너의 디렉토리를 연결 (마운트)</span><br><span class=\"line\">## -e    컨테이너 내에서 사용할 환경변수 설정</span><br><span class=\"line\">## –name    컨테이너 이름 설정</span><br><span class=\"line\">## –rm    프로세스 종료시 컨테이너 자동 제거</span><br><span class=\"line\">## -it    -i와 -t를 동시에 사용한 것으로 터미널 입력을 위한 옵션</span><br><span class=\"line\">## –link    컨테이너 연결 [컨테이너명:별칭]</span><br><span class=\"line\">docker run hello-world</span><br><span class=\"line\"></span><br><span class=\"line\">## List Docker images</span><br><span class=\"line\">docker image ls</span><br><span class=\"line\"></span><br><span class=\"line\">## List Docker containers (running, all, all in quiet mode)</span><br><span class=\"line\">docker container ls (= docker ps)</span><br><span class=\"line\">docker container ls -all #종료된 컨테이너 포함</span><br><span class=\"line\">docker container ls -a -q</span><br><span class=\"line\"></span><br><span class=\"line\">## start, stop, remove start Docker container</span><br><span class=\"line\">docker start containerID</span><br><span class=\"line\">docker stop containerID</span><br><span class=\"line\">docker rm containerID</span><br><span class=\"line\"></span><br><span class=\"line\">## docker log 확인하기</span><br><span class=\"line\">## 옵션</span><br><span class=\"line\">## --tail</span><br><span class=\"line\">## -f</span><br><span class=\"line\">docker logs -f containerID</span><br><span class=\"line\"></span><br><span class=\"line\">##실행중인 container에 접속하기</span><br><span class=\"line\">docker exec -it 053abaac4f93 /bin/bash</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-실행-amp-접속하기\"><a href=\"#docker-실행-amp-접속하기\" class=\"headerlink\" title=\"docker 실행 &amp; 접속하기\"></a>docker 실행 &amp; 접속하기</h1><ol>\n<li>이미지 찾기 : <a href=\"https://hub.docker.com/explore/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/explore/</a></li>\n<li>ubuntu 이미지 실행하기 : <code>docker run -it ubuntu:16.04 /bin/bash</code><ul>\n<li>실행중인 프로세스가 없으면 컨테이너가 바로 종료됨</li>\n</ul>\n</li>\n<li>redis 이미지 실행하기 : <code>docker run -d -p 6379:6379 redis</code></li>\n<li>redis에 데이터 저장, 읽기 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet localhost 6379</span><br><span class=\"line\">set foo bar</span><br><span class=\"line\">get foo</span><br><span class=\"line\">## to exit telnet</span><br><span class=\"line\">ctrl + ] -&gt; ctrl + d</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"swarm-설정하기\"><a href=\"#swarm-설정하기\" class=\"headerlink\" title=\"swarm 설정하기\"></a>swarm 설정하기</h1><ol>\n<li>manager swarm initialization : swarm이 생성되면 자동으로 ingress라는 overlay 네트워크가 만들어짐</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># swarm 모드를 active 하면 ingress overlay network 가 생성됨</span><br><span class=\"line\">docker swarm init --advertise-addr ip_address_to_connect_with_worker</span><br><span class=\"line\"></span><br><span class=\"line\">#example</span><br><span class=\"line\">#docker swarm init --advertise-addr 192.168.33.10</span><br><span class=\"line\"></span><br><span class=\"line\">#swarm 해제하기</span><br><span class=\"line\">docker swarm leave</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>worker swarm 만들기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker swarm join --token token_value manager_node_ip_address:2377</span><br><span class=\"line\"></span><br><span class=\"line\">#example</span><br><span class=\"line\">#docker swarm join --token SWMTKN-1-63g2es09cpi3fgu3js0jhxc42e4hzp2npcuub8gxdv8ozra1ih-csp26l0gdhoeajgi8yxq7cm7c 192.168.33.10:2377</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>생성된 node 확인하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker node ls</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>서비스 실행하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker service create --name redis-m -p 6379:6379 redis</span><br><span class=\"line\"></span><br><span class=\"line\">#실행된 서비스 확인하기 : manager에서만 command 가능</span><br><span class=\"line\">docker service ls</span><br><span class=\"line\"></span><br><span class=\"line\">#생성된 컨테이너 확인</span><br><span class=\"line\">## host의 컨테이너 확인</span><br><span class=\"line\">docker container ls </span><br><span class=\"line\">docker ps</span><br><span class=\"line\"></span><br><span class=\"line\">## node에서 실행중인 컨테이너 확인 : manager에서만 command 가능</span><br><span class=\"line\">docker node ps</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>HA(LB) 설계 : <a href=\"https://docs.docker.com/engine/swarm/ingress/#configure-an-external-load-balancer\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/swarm/ingress/#configure-an-external-load-balancer</a></li>\n<li>TEST</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#192.168.33.11 서버</span><br><span class=\"line\">telnet localhost 6379</span><br><span class=\"line\">set test test</span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.33.10 서버</span><br><span class=\"line\">telnet localhost 6379</span><br><span class=\"line\">get test</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>서버 스케일링하기 : 매니저 노드에서 실행</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker service scale redis-m=2</span><br><span class=\"line\">## *redis와 같은 data store는 data sync를 위해 솔루션에 맞는 추가설정을 해야 함 ##</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-network-https-docs-docker-com-network\"><a href=\"#docker-network-https-docs-docker-com-network\" class=\"headerlink\" title=\"docker network : https://docs.docker.com/network/\"></a>docker network : <a href=\"https://docs.docker.com/network/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/network/</a></h1><ul>\n<li>driver : host (호스트와 다른 설정이 필요할 때) / bridge (한 호스트 여러 컨테이너) / overlay (여러 호스트 여러 컨테이너, 다양한 애플리케이션) / macvlan / none</li>\n<li>network scope : local (호스트안에서 연결을 제공) / swarm (swarm 클러스터에서 연결이 가능)</li>\n</ul>\n<h2 id=\"overlay-네트워크-생성-network-turorial-overlay\"><a href=\"#overlay-네트워크-생성-network-turorial-overlay\" class=\"headerlink\" title=\"overlay 네트워크 생성 : network-turorial-overlay\"></a>overlay 네트워크 생성 : <a href=\"https://docs.docker.com/network/network-tutorial-overlay/#walkthrough\" target=\"_blank\" rel=\"noopener\">network-turorial-overlay</a></h2><p>swarm init과 함께 생성되는 ingress overlay 네트워크는 customize를 위해 삭제하고 원하는 옵션(서브넷, 게이트웨이…)을 주고 다시 만들 수 있다.</p>\n<ol>\n<li>swarm initialization</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker swarm init</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>네트워크 생성 : user-defined overlay / overlay network for standalone containers</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#overlay network 생성 on manager</span><br><span class=\"line\">docker network create -d overlay nginx-net</span><br><span class=\"line\"></span><br><span class=\"line\">#생성한 network 에 서비스 실행</span><br><span class=\"line\">#example (-p host port/geust port)</span><br><span class=\"line\">#docker service create --name redis-net-test --network redis-test --replicas 1 -p 6379:6379 redis</span><br><span class=\"line\"></span><br><span class=\"line\">#attachable을 이용해서 overlay 네트워크에 service가 아닌 container를 직섭 실행할 수 있다. </span><br><span class=\"line\">docker network create --driver=overlay --attachable test-net</span><br><span class=\"line\"></span><br><span class=\"line\">#목록</span><br><span class=\"line\">docker network ls</span><br></pre></td></tr></table></figure>\n<h1 id=\"Dockerizing-도커-이미지-만들기\"><a href=\"#Dockerizing-도커-이미지-만들기\" class=\"headerlink\" title=\"Dockerizing : 도커 이미지 만들기\"></a>Dockerizing : 도커 이미지 만들기</h1><h2 id=\"image-build-or-commit\"><a href=\"#image-build-or-commit\" class=\"headerlink\" title=\"image build or commit\"></a>image build or commit</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build</span><br><span class=\"line\">docker commit</span><br></pre></td></tr></table></figure>\n<h2 id=\"push-to-registry\"><a href=\"#push-to-registry\" class=\"headerlink\" title=\"push to registry\"></a>push to registry</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push</span><br></pre></td></tr></table></figure>\n<h2 id=\"docker-file-설정-define-Dockerfile\"><a href=\"#docker-file-설정-define-Dockerfile\" class=\"headerlink\" title=\"docker file 설정 : define Dockerfile\"></a>docker file 설정 : <a href=\"https://docs.docker.com/get-started/part2/#your-new-development-environment\" target=\"_blank\" rel=\"noopener\">define Dockerfile</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#example</span><br><span class=\"line\">FROM node:4.6.1</span><br><span class=\"line\"></span><br><span class=\"line\">ADD ./ /app</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">RUN npm config set registry http://registry.npmjs.org</span><br><span class=\"line\">RUN npm install pm2@latest -g</span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\"></span><br><span class=\"line\">ENV PORT 80</span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\"></span><br><span class=\"line\">#CMD [&quot;node&quot;, &quot;api.js&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-compose-swarm-실행하기-compose\"><a href=\"#docker-compose-swarm-실행하기-compose\" class=\"headerlink\" title=\"docker compose + swarm 실행하기 : compose\"></a>docker compose + swarm 실행하기 : <a href=\"https://docs.docker.com/compose/overview/\" target=\"_blank\" rel=\"noopener\">compose</a></h1><ul>\n<li>docker compose 는 여러 컨테이너를 정의하고 실행하기 위한 툴이다.</li>\n<li>docker compose 버전 3에서 swarm 서비스 배포가 가능하다.</li>\n</ul>\n<h2 id=\"설치하기\"><a href=\"#설치하기\" class=\"headerlink\" title=\"설치하기\"></a>설치하기</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#download</span><br><span class=\"line\">sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">#실행권한주기 </span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">#버전확인</span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n<h2 id=\"example-docker-compose-yml-file-Example\"><a href=\"#example-docker-compose-yml-file-Example\" class=\"headerlink\" title=\"example docker-compose.yml file : Example\"></a>example docker-compose.yml file : <a href=\"https://github.com/docker/labs/blob/master/beginner/chapters/votingapp.md\" target=\"_blank\" rel=\"noopener\">Example</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\"></span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: redis:alpine</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;6379&quot;</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - frontend</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 2</span><br><span class=\"line\">      update_config:</span><br><span class=\"line\">        parallelism: 2</span><br><span class=\"line\">        delay: 10s</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\">  db:</span><br><span class=\"line\">    image: postgres:9.4</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - db-data:/var/lib/postgresql/data</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - backend</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      placement:</span><br><span class=\"line\">        constraints: [node.role == manager]</span><br><span class=\"line\">  vote:</span><br><span class=\"line\">    image: dockersamples/examplevotingapp_vote:before</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 5000:80</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - frontend</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - redis</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 2</span><br><span class=\"line\">      update_config:</span><br><span class=\"line\">        parallelism: 2</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\">  result:</span><br><span class=\"line\">    image: dockersamples/examplevotingapp_result:before</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 5001:80</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - backend</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - db</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 1</span><br><span class=\"line\">      update_config:</span><br><span class=\"line\">        parallelism: 2</span><br><span class=\"line\">        delay: 10s</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">  worker:</span><br><span class=\"line\">    image: dockersamples/examplevotingapp_worker</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - frontend</span><br><span class=\"line\">      - backend</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      mode: replicated</span><br><span class=\"line\">      replicas: 1</span><br><span class=\"line\">      labels: [APP=VOTING]</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\">        delay: 10s</span><br><span class=\"line\">        max_attempts: 3</span><br><span class=\"line\">        window: 120s</span><br><span class=\"line\">      placement:</span><br><span class=\"line\">        constraints: [node.role == manager]</span><br><span class=\"line\"></span><br><span class=\"line\">  visualizer:</span><br><span class=\"line\">    image: dockersamples/visualizer</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;8080:8080&quot;</span><br><span class=\"line\">    stop_grace_period: 1m30s</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      placement:</span><br><span class=\"line\">        constraints: [node.role == manager]</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  frontend:</span><br><span class=\"line\">  backend:</span><br><span class=\"line\"></span><br><span class=\"line\">volumes:</span><br><span class=\"line\">  db-data:</span><br></pre></td></tr></table></figure>\n<h2 id=\"실행\"><a href=\"#실행\" class=\"headerlink\" title=\"실행\"></a>실행</h2><p><code>docker stack deploy --compose-file docker-compose.yml DEPLOYED_NAM</code></p>\n<h2 id=\"redis-master-slave-생성\"><a href=\"#redis-master-slave-생성\" class=\"headerlink\" title=\"redis master + slave 생성\"></a>redis master + slave 생성</h2><ol>\n<li>파일 작성 : docker-compose.yml</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: ‘3.3&apos;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  redis-master:</span><br><span class=\"line\">    image: redis</span><br><span class=\"line\">    #ports:</span><br><span class=\"line\">      #- &quot;6379:6379&quot; #host:container</span><br><span class=\"line\">networks:</span><br><span class=\"line\">     - some-network</span><br><span class=\"line\">  redis-slave:</span><br><span class=\"line\">    image: redis</span><br><span class=\"line\">    command: redis-server --slaveof redis-master 6379</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">      replicas: 3</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">     - some-network</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  some-network:</span><br><span class=\"line\">driver: overlay</span><br><span class=\"line\">    attachable: true</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>실행</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#overlay network가 새로 생성되면서 서비스 2개가 생김</span><br><span class=\"line\">#port가 swarm외부에 열려있지 않음</span><br><span class=\"line\">docker stack deploy --compose-file docker-compose.yml redis-clu</span><br><span class=\"line\"></span><br><span class=\"line\">#service 확인 : 서비스에서 보이는 포트는 외부에서 swarm으로 들어가는 포트 정보</span><br><span class=\"line\">docker service ls</span><br><span class=\"line\"></span><br><span class=\"line\">#컨테이너 확인 : 컨테이너의 포트정보는 현재 컨테이너에서 실행중인 포트정보</span><br><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<h1 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h1><ul>\n<li>docker 무작정 따라하기 : <a href=\"https://www.slideshare.net/pyrasis/docker-fordummies-44424016\" target=\"_blank\" rel=\"noopener\">https://www.slideshare.net/pyrasis/docker-fordummies-44424016</a></li>\n<li>docker command : <a href=\"https://docs.docker.com/edge/engine/reference/commandline/docker/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/edge/engine/reference/commandline/docker/</a></li>\n<li>swam : <a href=\"https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\" target=\"_blank\" rel=\"noopener\">https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html</a></li>\n<li>docker를 이용한 ci stack 만들기 : <a href=\"https://github.com/marcelbirkner/docker-ci-tool-stack\" target=\"_blank\" rel=\"noopener\">https://github.com/marcelbirkner/docker-ci-tool-stack</a></li>\n<li>docker network architecture : <a href=\"https://success.docker.com/article/Docker_Reference_Architecture-_Designing_Scalable,_Portable_Docker_Container_Networks\" target=\"_blank\" rel=\"noopener\">https://success.docker.com/article/Docker_Reference_Architecture-_Designing_Scalable,_Portable_Docker_Container_Networks</a></li>\n<li>docker 이미지 만들기 1 : <a href=\"http://www.nurinamu.com/dev/2016/07/04/create-a-docker-image/\" target=\"_blank\" rel=\"noopener\">http://www.nurinamu.com/dev/2016/07/04/create-a-docker-image/</a></li>\n<li>docker 이미지 만들기 2 : <a href=\"https://subicura.com/2017/02/10/docker-guide-for-beginners-create-image-and-deploy.html\" target=\"_blank\" rel=\"noopener\">https://subicura.com/2017/02/10/docker-guide-for-beginners-create-image-and-deploy.html</a></li>\n<li>vagrant : <a href=\"https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\" target=\"_blank\" rel=\"noopener\">https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>Vagrant를 이용해 가상으로 서버를 생성하여 docker를 연습해볼 수 있는 환경을 만들어보자.</p>\n<h1 id=\"vagrant-환경설정\"><a href=\"#vagrant-환경설정\" class=\"headerlink\" title=\"vagrant 환경설정\"></a>vagrant 환경설정</h1><ol>\n<li>virtual box 설치 : <a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">https://www.virtualbox.org/wiki/Downloads</a></li>\n<li>vagrant 설치 : <a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\" rel=\"noopener\">https://www.vagrantup.com/downloads.html</a></li>\n<li>vagrant box 검색 : <a href=\"https://app.vagrantup.com/boxes/search\" target=\"_blank\" rel=\"noopener\">https://app.vagrantup.com/boxes/search</a></li>\n</ol>\n<h2 id=\"vagrant-기본-command\"><a href=\"#vagrant-기본-command\" class=\"headerlink\" title=\"vagrant 기본 command\"></a>vagrant 기본 command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ubuntu 16.04 설치하기</span><br><span class=\"line\">vagrant init ubuntu/xenial64</span><br><span class=\"line\"></span><br><span class=\"line\"># 재시작 (실행 중 변경된 환경설정 적용) --provision 옵션을 주면 새로 프로비져닝한다.</span><br><span class=\"line\">vagrant reload</span><br><span class=\"line\">  </span><br><span class=\"line\">#정지 상태로 변경</span><br><span class=\"line\">vagrant suspend</span><br><span class=\"line\"></span><br><span class=\"line\">#os 종료</span><br><span class=\"line\">vagrant halt</span><br><span class=\"line\"></span><br><span class=\"line\">#파일삭제 후 os 종료</span><br><span class=\"line\">vagrant destroy</span><br><span class=\"line\">  </span><br><span class=\"line\">#재시작 or 시작</span><br><span class=\"line\">vagrant up</span><br><span class=\"line\"></span><br><span class=\"line\">#vagrant os 접속 : init한 디렉토리에서 실행</span><br><span class=\"line\">#기본 id/password =&gt; vagrant/vagrant</span><br><span class=\"line\">vagrant ssh</span><br></pre></td></tr></table></figure>\n<h2 id=\"vagrant-설정-파일-수정\"><a href=\"#vagrant-설정-파일-수정\" class=\"headerlink\" title=\"vagrant 설정 파일 수정\"></a>vagrant 설정 파일 수정</h2><ul>\n<li>port forwarding : config.vm.network “forwarded_port”, guest: 6379, host: 1234</li>\n<li>아이피 주소 지정 : config.vm.network “private_network”, ip: “192.168.33.10”</li>\n</ul>\n<h1 id=\"docker-설치하기\"><a href=\"#docker-설치하기\" class=\"headerlink\" title=\"docker 설치하기\"></a>docker 설치하기</h1><p>ubuntu(16.04)에 docker 설치하기 : <a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></p>\n<h2 id=\"installation-command\"><a href=\"#installation-command\" class=\"headerlink\" title=\"installation command\"></a>installation command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\"># 2</span><br><span class=\"line\">sudo apt-get install \\</span><br><span class=\"line\">    apt-transport-https \\</span><br><span class=\"line\">    ca-certificates \\</span><br><span class=\"line\">    curl \\</span><br><span class=\"line\">    software-properties-common</span><br><span class=\"line\"></span><br><span class=\"line\"># 3</span><br><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\"># 4</span><br><span class=\"line\">sudo apt-key fingerprint 0EBFCD88</span><br><span class=\"line\"></span><br><span class=\"line\"># 5</span><br><span class=\"line\">sudo add-apt-repository \\</span><br><span class=\"line\">   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\</span><br><span class=\"line\">   $(lsb_release -cs) \\</span><br><span class=\"line\">   stable&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 6</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\"># 7-1 (latest 버전 설치하기)</span><br><span class=\"line\">sudo apt-get install docker-ce</span><br><span class=\"line\"></span><br><span class=\"line\"># 7-2 (지정한 버전 설치하기)</span><br><span class=\"line\">sudo apt-get install docker-ce=&lt;VERSION&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># 8 버전확인하기</span><br><span class=\"line\">sudo docker --version</span><br><span class=\"line\"></span><br><span class=\"line\"># 9 hello-world 실행해보기</span><br><span class=\"line\">sudo docker run hello-world</span><br><span class=\"line\"></span><br><span class=\"line\"># (option) start on boot 설정</span><br><span class=\"line\">#enable</span><br><span class=\"line\">sudo systemctl enable docker</span><br><span class=\"line\">#disable</span><br><span class=\"line\">sudo systemctl disable docker</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-basic-command\"><a href=\"#docker-basic-command\" class=\"headerlink\" title=\"docker basic command\"></a>docker basic command</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## List Docker CLI commands</span><br><span class=\"line\">docker</span><br><span class=\"line\">docker container --help</span><br><span class=\"line\"></span><br><span class=\"line\">## Display Docker version and info</span><br><span class=\"line\">docker --version</span><br><span class=\"line\">docker version</span><br><span class=\"line\">docker info</span><br><span class=\"line\"></span><br><span class=\"line\">## Excecute Docker image : docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG…]</span><br><span class=\"line\">## 옵션</span><br><span class=\"line\">## -d    detached mode 흔히 말하는 백그라운드 모드</span><br><span class=\"line\">## -p    호스트와 컨테이너의 포트를 연결 (포워딩)</span><br><span class=\"line\">## -v    호스트와 컨테이너의 디렉토리를 연결 (마운트)</span><br><span class=\"line\">## -e    컨테이너 내에서 사용할 환경변수 설정</span><br><span class=\"line\">## –name    컨테이너 이름 설정</span><br><span class=\"line\">## –rm    프로세스 종료시 컨테이너 자동 제거</span><br><span class=\"line\">## -it    -i와 -t를 동시에 사용한 것으로 터미널 입력을 위한 옵션</span><br><span class=\"line\">## –link    컨테이너 연결 [컨테이너명:별칭]</span><br><span class=\"line\">docker run hello-world</span><br><span class=\"line\"></span><br><span class=\"line\">## List Docker images</span><br><span class=\"line\">docker image ls</span><br><span class=\"line\"></span><br><span class=\"line\">## List Docker containers (running, all, all in quiet mode)</span><br><span class=\"line\">docker container ls (= docker ps)</span><br><span class=\"line\">docker container ls -all #종료된 컨테이너 포함</span><br><span class=\"line\">docker container ls -a -q</span><br><span class=\"line\"></span><br><span class=\"line\">## start, stop, remove start Docker container</span><br><span class=\"line\">docker start containerID</span><br><span class=\"line\">docker stop containerID</span><br><span class=\"line\">docker rm containerID</span><br><span class=\"line\"></span><br><span class=\"line\">## docker log 확인하기</span><br><span class=\"line\">## 옵션</span><br><span class=\"line\">## --tail</span><br><span class=\"line\">## -f</span><br><span class=\"line\">docker logs -f containerID</span><br><span class=\"line\"></span><br><span class=\"line\">##실행중인 container에 접속하기</span><br><span class=\"line\">docker exec -it 053abaac4f93 /bin/bash</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-실행-amp-접속하기\"><a href=\"#docker-실행-amp-접속하기\" class=\"headerlink\" title=\"docker 실행 &amp; 접속하기\"></a>docker 실행 &amp; 접속하기</h1><ol>\n<li>이미지 찾기 : <a href=\"https://hub.docker.com/explore/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/explore/</a></li>\n<li>ubuntu 이미지 실행하기 : <code>docker run -it ubuntu:16.04 /bin/bash</code><ul>\n<li>실행중인 프로세스가 없으면 컨테이너가 바로 종료됨</li>\n</ul>\n</li>\n<li>redis 이미지 실행하기 : <code>docker run -d -p 6379:6379 redis</code></li>\n<li>redis에 데이터 저장, 읽기 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet localhost 6379</span><br><span class=\"line\">set foo bar</span><br><span class=\"line\">get foo</span><br><span class=\"line\">## to exit telnet</span><br><span class=\"line\">ctrl + ] -&gt; ctrl + d</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"swarm-설정하기\"><a href=\"#swarm-설정하기\" class=\"headerlink\" title=\"swarm 설정하기\"></a>swarm 설정하기</h1><ol>\n<li>manager swarm initialization : swarm이 생성되면 자동으로 ingress라는 overlay 네트워크가 만들어짐</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># swarm 모드를 active 하면 ingress overlay network 가 생성됨</span><br><span class=\"line\">docker swarm init --advertise-addr ip_address_to_connect_with_worker</span><br><span class=\"line\"></span><br><span class=\"line\">#example</span><br><span class=\"line\">#docker swarm init --advertise-addr 192.168.33.10</span><br><span class=\"line\"></span><br><span class=\"line\">#swarm 해제하기</span><br><span class=\"line\">docker swarm leave</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>worker swarm 만들기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker swarm join --token token_value manager_node_ip_address:2377</span><br><span class=\"line\"></span><br><span class=\"line\">#example</span><br><span class=\"line\">#docker swarm join --token SWMTKN-1-63g2es09cpi3fgu3js0jhxc42e4hzp2npcuub8gxdv8ozra1ih-csp26l0gdhoeajgi8yxq7cm7c 192.168.33.10:2377</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>생성된 node 확인하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker node ls</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>서비스 실행하기</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker service create --name redis-m -p 6379:6379 redis</span><br><span class=\"line\"></span><br><span class=\"line\">#실행된 서비스 확인하기 : manager에서만 command 가능</span><br><span class=\"line\">docker service ls</span><br><span class=\"line\"></span><br><span class=\"line\">#생성된 컨테이너 확인</span><br><span class=\"line\">## host의 컨테이너 확인</span><br><span class=\"line\">docker container ls </span><br><span class=\"line\">docker ps</span><br><span class=\"line\"></span><br><span class=\"line\">## node에서 실행중인 컨테이너 확인 : manager에서만 command 가능</span><br><span class=\"line\">docker node ps</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>HA(LB) 설계 : <a href=\"https://docs.docker.com/engine/swarm/ingress/#configure-an-external-load-balancer\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/swarm/ingress/#configure-an-external-load-balancer</a></li>\n<li>TEST</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#192.168.33.11 서버</span><br><span class=\"line\">telnet localhost 6379</span><br><span class=\"line\">set test test</span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.33.10 서버</span><br><span class=\"line\">telnet localhost 6379</span><br><span class=\"line\">get test</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>서버 스케일링하기 : 매니저 노드에서 실행</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker service scale redis-m=2</span><br><span class=\"line\">## *redis와 같은 data store는 data sync를 위해 솔루션에 맞는 추가설정을 해야 함 ##</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-network-https-docs-docker-com-network\"><a href=\"#docker-network-https-docs-docker-com-network\" class=\"headerlink\" title=\"docker network : https://docs.docker.com/network/\"></a>docker network : <a href=\"https://docs.docker.com/network/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/network/</a></h1><ul>\n<li>driver : host (호스트와 다른 설정이 필요할 때) / bridge (한 호스트 여러 컨테이너) / overlay (여러 호스트 여러 컨테이너, 다양한 애플리케이션) / macvlan / none</li>\n<li>network scope : local (호스트안에서 연결을 제공) / swarm (swarm 클러스터에서 연결이 가능)</li>\n</ul>\n<h2 id=\"overlay-네트워크-생성-network-turorial-overlay\"><a href=\"#overlay-네트워크-생성-network-turorial-overlay\" class=\"headerlink\" title=\"overlay 네트워크 생성 : network-turorial-overlay\"></a>overlay 네트워크 생성 : <a href=\"https://docs.docker.com/network/network-tutorial-overlay/#walkthrough\" target=\"_blank\" rel=\"noopener\">network-turorial-overlay</a></h2><p>swarm init과 함께 생성되는 ingress overlay 네트워크는 customize를 위해 삭제하고 원하는 옵션(서브넷, 게이트웨이…)을 주고 다시 만들 수 있다.</p>\n<ol>\n<li>swarm initialization</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker swarm init</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>네트워크 생성 : user-defined overlay / overlay network for standalone containers</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#overlay network 생성 on manager</span><br><span class=\"line\">docker network create -d overlay nginx-net</span><br><span class=\"line\"></span><br><span class=\"line\">#생성한 network 에 서비스 실행</span><br><span class=\"line\">#example (-p host port/geust port)</span><br><span class=\"line\">#docker service create --name redis-net-test --network redis-test --replicas 1 -p 6379:6379 redis</span><br><span class=\"line\"></span><br><span class=\"line\">#attachable을 이용해서 overlay 네트워크에 service가 아닌 container를 직섭 실행할 수 있다. </span><br><span class=\"line\">docker network create --driver=overlay --attachable test-net</span><br><span class=\"line\"></span><br><span class=\"line\">#목록</span><br><span class=\"line\">docker network ls</span><br></pre></td></tr></table></figure>\n<h1 id=\"Dockerizing-도커-이미지-만들기\"><a href=\"#Dockerizing-도커-이미지-만들기\" class=\"headerlink\" title=\"Dockerizing : 도커 이미지 만들기\"></a>Dockerizing : 도커 이미지 만들기</h1><h2 id=\"image-build-or-commit\"><a href=\"#image-build-or-commit\" class=\"headerlink\" title=\"image build or commit\"></a>image build or commit</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build</span><br><span class=\"line\">docker commit</span><br></pre></td></tr></table></figure>\n<h2 id=\"push-to-registry\"><a href=\"#push-to-registry\" class=\"headerlink\" title=\"push to registry\"></a>push to registry</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push</span><br></pre></td></tr></table></figure>\n<h2 id=\"docker-file-설정-define-Dockerfile\"><a href=\"#docker-file-설정-define-Dockerfile\" class=\"headerlink\" title=\"docker file 설정 : define Dockerfile\"></a>docker file 설정 : <a href=\"https://docs.docker.com/get-started/part2/#your-new-development-environment\" target=\"_blank\" rel=\"noopener\">define Dockerfile</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#example</span><br><span class=\"line\">FROM node:4.6.1</span><br><span class=\"line\"></span><br><span class=\"line\">ADD ./ /app</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">RUN npm config set registry http://registry.npmjs.org</span><br><span class=\"line\">RUN npm install pm2@latest -g</span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\"></span><br><span class=\"line\">ENV PORT 80</span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\"></span><br><span class=\"line\">#CMD [&quot;node&quot;, &quot;api.js&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-compose-swarm-실행하기-compose\"><a href=\"#docker-compose-swarm-실행하기-compose\" class=\"headerlink\" title=\"docker compose + swarm 실행하기 : compose\"></a>docker compose + swarm 실행하기 : <a href=\"https://docs.docker.com/compose/overview/\" target=\"_blank\" rel=\"noopener\">compose</a></h1><ul>\n<li>docker compose 는 여러 컨테이너를 정의하고 실행하기 위한 툴이다.</li>\n<li>docker compose 버전 3에서 swarm 서비스 배포가 가능하다.</li>\n</ul>\n<h2 id=\"설치하기\"><a href=\"#설치하기\" class=\"headerlink\" title=\"설치하기\"></a>설치하기</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#download</span><br><span class=\"line\">sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">#실행권한주기 </span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">#버전확인</span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n<h2 id=\"example-docker-compose-yml-file-Example\"><a href=\"#example-docker-compose-yml-file-Example\" class=\"headerlink\" title=\"example docker-compose.yml file : Example\"></a>example docker-compose.yml file : <a href=\"https://github.com/docker/labs/blob/master/beginner/chapters/votingapp.md\" target=\"_blank\" rel=\"noopener\">Example</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\"></span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: redis:alpine</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;6379&quot;</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - frontend</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 2</span><br><span class=\"line\">      update_config:</span><br><span class=\"line\">        parallelism: 2</span><br><span class=\"line\">        delay: 10s</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\">  db:</span><br><span class=\"line\">    image: postgres:9.4</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - db-data:/var/lib/postgresql/data</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - backend</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      placement:</span><br><span class=\"line\">        constraints: [node.role == manager]</span><br><span class=\"line\">  vote:</span><br><span class=\"line\">    image: dockersamples/examplevotingapp_vote:before</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 5000:80</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - frontend</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - redis</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 2</span><br><span class=\"line\">      update_config:</span><br><span class=\"line\">        parallelism: 2</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\">  result:</span><br><span class=\"line\">    image: dockersamples/examplevotingapp_result:before</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 5001:80</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - backend</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - db</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      replicas: 1</span><br><span class=\"line\">      update_config:</span><br><span class=\"line\">        parallelism: 2</span><br><span class=\"line\">        delay: 10s</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">  worker:</span><br><span class=\"line\">    image: dockersamples/examplevotingapp_worker</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - frontend</span><br><span class=\"line\">      - backend</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      mode: replicated</span><br><span class=\"line\">      replicas: 1</span><br><span class=\"line\">      labels: [APP=VOTING]</span><br><span class=\"line\">      restart_policy:</span><br><span class=\"line\">        condition: on-failure</span><br><span class=\"line\">        delay: 10s</span><br><span class=\"line\">        max_attempts: 3</span><br><span class=\"line\">        window: 120s</span><br><span class=\"line\">      placement:</span><br><span class=\"line\">        constraints: [node.role == manager]</span><br><span class=\"line\"></span><br><span class=\"line\">  visualizer:</span><br><span class=\"line\">    image: dockersamples/visualizer</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;8080:8080&quot;</span><br><span class=\"line\">    stop_grace_period: 1m30s</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      placement:</span><br><span class=\"line\">        constraints: [node.role == manager]</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  frontend:</span><br><span class=\"line\">  backend:</span><br><span class=\"line\"></span><br><span class=\"line\">volumes:</span><br><span class=\"line\">  db-data:</span><br></pre></td></tr></table></figure>\n<h2 id=\"실행\"><a href=\"#실행\" class=\"headerlink\" title=\"실행\"></a>실행</h2><p><code>docker stack deploy --compose-file docker-compose.yml DEPLOYED_NAM</code></p>\n<h2 id=\"redis-master-slave-생성\"><a href=\"#redis-master-slave-생성\" class=\"headerlink\" title=\"redis master + slave 생성\"></a>redis master + slave 생성</h2><ol>\n<li>파일 작성 : docker-compose.yml</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: ‘3.3&apos;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  redis-master:</span><br><span class=\"line\">    image: redis</span><br><span class=\"line\">    #ports:</span><br><span class=\"line\">      #- &quot;6379:6379&quot; #host:container</span><br><span class=\"line\">networks:</span><br><span class=\"line\">     - some-network</span><br><span class=\"line\">  redis-slave:</span><br><span class=\"line\">    image: redis</span><br><span class=\"line\">    command: redis-server --slaveof redis-master 6379</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">      replicas: 3</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">     - some-network</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  some-network:</span><br><span class=\"line\">driver: overlay</span><br><span class=\"line\">    attachable: true</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>실행</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#overlay network가 새로 생성되면서 서비스 2개가 생김</span><br><span class=\"line\">#port가 swarm외부에 열려있지 않음</span><br><span class=\"line\">docker stack deploy --compose-file docker-compose.yml redis-clu</span><br><span class=\"line\"></span><br><span class=\"line\">#service 확인 : 서비스에서 보이는 포트는 외부에서 swarm으로 들어가는 포트 정보</span><br><span class=\"line\">docker service ls</span><br><span class=\"line\"></span><br><span class=\"line\">#컨테이너 확인 : 컨테이너의 포트정보는 현재 컨테이너에서 실행중인 포트정보</span><br><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<h1 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h1><ul>\n<li>docker 무작정 따라하기 : <a href=\"https://www.slideshare.net/pyrasis/docker-fordummies-44424016\" target=\"_blank\" rel=\"noopener\">https://www.slideshare.net/pyrasis/docker-fordummies-44424016</a></li>\n<li>docker command : <a href=\"https://docs.docker.com/edge/engine/reference/commandline/docker/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/edge/engine/reference/commandline/docker/</a></li>\n<li>swam : <a href=\"https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\" target=\"_blank\" rel=\"noopener\">https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html</a></li>\n<li>docker를 이용한 ci stack 만들기 : <a href=\"https://github.com/marcelbirkner/docker-ci-tool-stack\" target=\"_blank\" rel=\"noopener\">https://github.com/marcelbirkner/docker-ci-tool-stack</a></li>\n<li>docker network architecture : <a href=\"https://success.docker.com/article/Docker_Reference_Architecture-_Designing_Scalable,_Portable_Docker_Container_Networks\" target=\"_blank\" rel=\"noopener\">https://success.docker.com/article/Docker_Reference_Architecture-_Designing_Scalable,_Portable_Docker_Container_Networks</a></li>\n<li>docker 이미지 만들기 1 : <a href=\"http://www.nurinamu.com/dev/2016/07/04/create-a-docker-image/\" target=\"_blank\" rel=\"noopener\">http://www.nurinamu.com/dev/2016/07/04/create-a-docker-image/</a></li>\n<li>docker 이미지 만들기 2 : <a href=\"https://subicura.com/2017/02/10/docker-guide-for-beginners-create-image-and-deploy.html\" target=\"_blank\" rel=\"noopener\">https://subicura.com/2017/02/10/docker-guide-for-beginners-create-image-and-deploy.html</a></li>\n<li>vagrant : <a href=\"https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html\" target=\"_blank\" rel=\"noopener\">https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html</a></li>\n</ul>\n"},{"title":"ionic-app-play-store-registration","date":"2019-02-04T07:16:26.000Z","_content":"### 구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\n\n> 업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)\n\n참고사이트 \n- https://thenounproject.com/\n- https://www.iconfinder.com/\n\n#### 1. 스토어 등록정보 \n\n![스토어 화면](/images/ionic/play_store.png \"스토어 화면\")\n\n애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.\n\n만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.\n\n필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다\n\n- 2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)\n- 고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))\n- 그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))\n\n필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.\n\n![메뉴 화면](/images/ionic/play_store_menu.png \"메뉴 화면\")\n\n이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자\n\n#### 2. 앱 등록하기\n\n스토어에 업로드 가능한 apk 버전을 만들어야 합니다.\n(참고 :  [APK 만들기](https://j2yes.github.io/ionic-2/make-android-jar/) )\n\n#### 3. 콘텐츠 등급 & 가격 및 배포 설정\n\n그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. \n\n여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. \n\n출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.\n\n(이제 기다리는 일만 남았습니다. 끝!)","source":"_posts/ionic/ionic-app-play-store-registration.md","raw":"---\ntitle: ionic-app-play-store-registration\ndate: 2019-02-04 16:16:26\ntags:\n- mobile\n- ionic\n- android\n- play store\ncategories:\n- ionic\n---\n### 구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\n\n> 업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)\n\n참고사이트 \n- https://thenounproject.com/\n- https://www.iconfinder.com/\n\n#### 1. 스토어 등록정보 \n\n![스토어 화면](/images/ionic/play_store.png \"스토어 화면\")\n\n애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.\n\n만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.\n\n필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다\n\n- 2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)\n- 고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))\n- 그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))\n\n필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.\n\n![메뉴 화면](/images/ionic/play_store_menu.png \"메뉴 화면\")\n\n이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자\n\n#### 2. 앱 등록하기\n\n스토어에 업로드 가능한 apk 버전을 만들어야 합니다.\n(참고 :  [APK 만들기](https://j2yes.github.io/ionic-2/make-android-jar/) )\n\n#### 3. 콘텐츠 등급 & 가격 및 배포 설정\n\n그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. \n\n여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. \n\n출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.\n\n(이제 기다리는 일만 남았습니다. 끝!)","slug":"ionic/ionic-app-play-store-registration","published":1,"updated":"2019-02-04T07:21:28.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zr000zy8uh7ny0crf7","content":"<h3 id=\"구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\"><a href=\"#구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\" class=\"headerlink\" title=\"구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\"></a>구글 플레이 개발자 콘솔에 접속해보자 (<a href=\"https://play.google.com/apps/publish\" target=\"_blank\" rel=\"noopener\">https://play.google.com/apps/publish</a>)</h3><blockquote>\n<p>업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)</p>\n</blockquote>\n<p>참고사이트 </p>\n<ul>\n<li><a href=\"https://thenounproject.com/\" target=\"_blank\" rel=\"noopener\">https://thenounproject.com/</a></li>\n<li><a href=\"https://www.iconfinder.com/\" target=\"_blank\" rel=\"noopener\">https://www.iconfinder.com/</a></li>\n</ul>\n<h4 id=\"1-스토어-등록정보\"><a href=\"#1-스토어-등록정보\" class=\"headerlink\" title=\"1. 스토어 등록정보\"></a>1. 스토어 등록정보</h4><p><img src=\"/images/ionic/play_store.png\" alt=\"스토어 화면\" title=\"스토어 화면\"></p>\n<p>애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.</p>\n<p>만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.</p>\n<p>필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다</p>\n<ul>\n<li>2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)</li>\n<li>고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))</li>\n<li>그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))</li>\n</ul>\n<p>필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.</p>\n<p><img src=\"/images/ionic/play_store_menu.png\" alt=\"메뉴 화면\" title=\"메뉴 화면\"></p>\n<p>이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자</p>\n<h4 id=\"2-앱-등록하기\"><a href=\"#2-앱-등록하기\" class=\"headerlink\" title=\"2. 앱 등록하기\"></a>2. 앱 등록하기</h4><p>스토어에 업로드 가능한 apk 버전을 만들어야 합니다.<br>(참고 :  <a href=\"https://j2yes.github.io/ionic-2/make-android-jar/\">APK 만들기</a> )</p>\n<h4 id=\"3-콘텐츠-등급-amp-가격-및-배포-설정\"><a href=\"#3-콘텐츠-등급-amp-가격-및-배포-설정\" class=\"headerlink\" title=\"3. 콘텐츠 등급 &amp; 가격 및 배포 설정\"></a>3. 콘텐츠 등급 &amp; 가격 및 배포 설정</h4><p>그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. </p>\n<p>여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. </p>\n<p>출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.</p>\n<p>(이제 기다리는 일만 남았습니다. 끝!)</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\"><a href=\"#구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\" class=\"headerlink\" title=\"구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\"></a>구글 플레이 개발자 콘솔에 접속해보자 (<a href=\"https://play.google.com/apps/publish\" target=\"_blank\" rel=\"noopener\">https://play.google.com/apps/publish</a>)</h3><blockquote>\n<p>업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)</p>\n</blockquote>\n<p>참고사이트 </p>\n<ul>\n<li><a href=\"https://thenounproject.com/\" target=\"_blank\" rel=\"noopener\">https://thenounproject.com/</a></li>\n<li><a href=\"https://www.iconfinder.com/\" target=\"_blank\" rel=\"noopener\">https://www.iconfinder.com/</a></li>\n</ul>\n<h4 id=\"1-스토어-등록정보\"><a href=\"#1-스토어-등록정보\" class=\"headerlink\" title=\"1. 스토어 등록정보\"></a>1. 스토어 등록정보</h4><p><img src=\"/images/ionic/play_store.png\" alt=\"스토어 화면\" title=\"스토어 화면\"></p>\n<p>애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.</p>\n<p>만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.</p>\n<p>필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다</p>\n<ul>\n<li>2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)</li>\n<li>고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))</li>\n<li>그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))</li>\n</ul>\n<p>필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.</p>\n<p><img src=\"/images/ionic/play_store_menu.png\" alt=\"메뉴 화면\" title=\"메뉴 화면\"></p>\n<p>이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자</p>\n<h4 id=\"2-앱-등록하기\"><a href=\"#2-앱-등록하기\" class=\"headerlink\" title=\"2. 앱 등록하기\"></a>2. 앱 등록하기</h4><p>스토어에 업로드 가능한 apk 버전을 만들어야 합니다.<br>(참고 :  <a href=\"https://j2yes.github.io/ionic-2/make-android-jar/\">APK 만들기</a> )</p>\n<h4 id=\"3-콘텐츠-등급-amp-가격-및-배포-설정\"><a href=\"#3-콘텐츠-등급-amp-가격-및-배포-설정\" class=\"headerlink\" title=\"3. 콘텐츠 등급 &amp; 가격 및 배포 설정\"></a>3. 콘텐츠 등급 &amp; 가격 및 배포 설정</h4><p>그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. </p>\n<p>여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. </p>\n<p>출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.</p>\n<p>(이제 기다리는 일만 남았습니다. 끝!)</p>\n"},{"title":"ionic-prototype-app-development","date":"2019-02-04T07:14:38.000Z","_content":"> p2p 금융상품 모아서 보여주기\n\n이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.\np2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요...\n\n### 시작하기\nionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.\n\n업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.\n\nnode와 ionic 설치를 끝내고, 프로젝트를 생성합니다.\n\n````sbtshell\nionic start MyIonicProject super\n````\n\nsuper로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 `복붙`이 너무 편해요.\n\n나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.\n\n폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. \n\n프로젝트 생성이 완료되었으면 간단히 실행해봅시다.\n\n````sbtshell\nionic serve\n````\n\n브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.\n\n#### 기능 정의하기\n어떤 화면이 필요할까...\n\n이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.\n\n대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.\n\n이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.\n\n사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.\n \n그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.\n\n***목록에서 보여지는 정보***\n- 사이트로고\n- 금액\n- 수익률\n- 기간\n- 소진율(optional)\n\n목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.\n\n한페이지로 끝내버리기 위한.. 화면 구성입니다.\n\n이제 생각한대로 만들기 시작해봅시다.\n\n#### 플러그인 설치\n\n대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.\nhttps://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n- 누적 투자금 (파이차트)\n- 누적 수익률\n- 기준금리(http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927)\n\n중간에 소진율을 보여주기 위한 progress bar 도 추가하고..\n```sbtshell\n#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/\nionic g component ProgressBar\n```\n\n상세화면을 띄우기 위해서 in-app-browser도 설치\n```sbtshell\n#https://ionicframework.com/docs/native/in-app-browser/\nionic cordova plugin add cordova-plugin-inappbrowser\nnpm install --save @ionic-native/in-app-browser\n```\n\n대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.\n(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)\n\n##### 딜 목록화면\n\n![딜 목록화면](/images/ionic/deal_list.webp \"딜 목록화면\")\n\n##### 통계화면\n\n![통계화면](/images/ionic/p2p_statistics.webp \"통계화면\")\n\n#### api 만들기\nnode를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.\n\n필수정보만 디비스키마를 만들어서 필요한 정보를 저장\n```sql\nCREATE TABLE `p2p`.`deal` (\n  `id` INT NOT NULL AUTO_INCREMENT COMMENT '딜 아이디 ',\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealTitle` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL,\n  `dealUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL,\n  `dealAmount` INT NOT NULL COMMENT '딜 금액 ',\n  `dealRevenueRate` FLOAT NOT NULL COMMENT '수익률 ',\n  `dealMonthPeriod` INT NOT NULL COMMENT '딜 기간 (월 기준) ',\n  `dealRunoutRate` FLOAT NOT NULL COMMENT '딜 소진율 ',\n  `updatedAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '갱신일시\\n',\n  `createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시\\n',\n  PRIMARY KEY (`id`));\n\nCREATE TABLE `p2p`.`site` (\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 코드 ',\n  `siteName` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 이름 ',\n  `siteUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 주소 ',\n  `siteLogo` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 로고 ',\n  PRIMARY KEY (`siteCode`));\n```\n","source":"_posts/ionic/ionic-prototype-app-development.md","raw":"---\ntitle: ionic-prototype-app-development\ndate: 2019-02-04 16:14:38\ntags:\n- mobile\n- ionic\ncategories:\n- ionic\n---\n> p2p 금융상품 모아서 보여주기\n\n이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.\np2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요...\n\n### 시작하기\nionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.\n\n업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.\n\nnode와 ionic 설치를 끝내고, 프로젝트를 생성합니다.\n\n````sbtshell\nionic start MyIonicProject super\n````\n\nsuper로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 `복붙`이 너무 편해요.\n\n나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.\n\n폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. \n\n프로젝트 생성이 완료되었으면 간단히 실행해봅시다.\n\n````sbtshell\nionic serve\n````\n\n브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.\n\n#### 기능 정의하기\n어떤 화면이 필요할까...\n\n이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.\n\n대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.\n\n이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.\n\n사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.\n \n그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.\n\n***목록에서 보여지는 정보***\n- 사이트로고\n- 금액\n- 수익률\n- 기간\n- 소진율(optional)\n\n목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.\n\n한페이지로 끝내버리기 위한.. 화면 구성입니다.\n\n이제 생각한대로 만들기 시작해봅시다.\n\n#### 플러그인 설치\n\n대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.\nhttps://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n- 누적 투자금 (파이차트)\n- 누적 수익률\n- 기준금리(http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927)\n\n중간에 소진율을 보여주기 위한 progress bar 도 추가하고..\n```sbtshell\n#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/\nionic g component ProgressBar\n```\n\n상세화면을 띄우기 위해서 in-app-browser도 설치\n```sbtshell\n#https://ionicframework.com/docs/native/in-app-browser/\nionic cordova plugin add cordova-plugin-inappbrowser\nnpm install --save @ionic-native/in-app-browser\n```\n\n대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.\n(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)\n\n##### 딜 목록화면\n\n![딜 목록화면](/images/ionic/deal_list.webp \"딜 목록화면\")\n\n##### 통계화면\n\n![통계화면](/images/ionic/p2p_statistics.webp \"통계화면\")\n\n#### api 만들기\nnode를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.\n\n필수정보만 디비스키마를 만들어서 필요한 정보를 저장\n```sql\nCREATE TABLE `p2p`.`deal` (\n  `id` INT NOT NULL AUTO_INCREMENT COMMENT '딜 아이디 ',\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealTitle` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL,\n  `dealUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL,\n  `dealAmount` INT NOT NULL COMMENT '딜 금액 ',\n  `dealRevenueRate` FLOAT NOT NULL COMMENT '수익률 ',\n  `dealMonthPeriod` INT NOT NULL COMMENT '딜 기간 (월 기준) ',\n  `dealRunoutRate` FLOAT NOT NULL COMMENT '딜 소진율 ',\n  `updatedAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '갱신일시\\n',\n  `createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시\\n',\n  PRIMARY KEY (`id`));\n\nCREATE TABLE `p2p`.`site` (\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 코드 ',\n  `siteName` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 이름 ',\n  `siteUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 주소 ',\n  `siteLogo` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 로고 ',\n  PRIMARY KEY (`siteCode`));\n```\n","slug":"ionic/ionic-prototype-app-development","published":1,"updated":"2019-02-04T07:21:28.183Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zt0013y8uhdepsx5zm","content":"<blockquote>\n<p>p2p 금융상품 모아서 보여주기</p>\n</blockquote>\n<p>이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.<br>p2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요…</p>\n<h3 id=\"시작하기\"><a href=\"#시작하기\" class=\"headerlink\" title=\"시작하기\"></a>시작하기</h3><p>ionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.</p>\n<p>업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.</p>\n<p>node와 ionic 설치를 끝내고, 프로젝트를 생성합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic start MyIonicProject super</span><br></pre></td></tr></table></figure>\n<p>super로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 <code>복붙</code>이 너무 편해요.</p>\n<p>나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.</p>\n<p>폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. </p>\n<p>프로젝트 생성이 완료되었으면 간단히 실행해봅시다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<p>브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.</p>\n<h4 id=\"기능-정의하기\"><a href=\"#기능-정의하기\" class=\"headerlink\" title=\"기능 정의하기\"></a>기능 정의하기</h4><p>어떤 화면이 필요할까…</p>\n<p>이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.</p>\n<p>대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.</p>\n<p>이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.</p>\n<p>사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.</p>\n<p>그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.</p>\n<p><strong><em>목록에서 보여지는 정보</em></strong></p>\n<ul>\n<li>사이트로고</li>\n<li>금액</li>\n<li>수익률</li>\n<li>기간</li>\n<li>소진율(optional)</li>\n</ul>\n<p>목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.</p>\n<p>한페이지로 끝내버리기 위한.. 화면 구성입니다.</p>\n<p>이제 생각한대로 만들기 시작해봅시다.</p>\n<h4 id=\"플러그인-설치\"><a href=\"#플러그인-설치\" class=\"headerlink\" title=\"플러그인 설치\"></a>플러그인 설치</h4><p>대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.<br><a href=\"https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\" target=\"_blank\" rel=\"noopener\">https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/</a></p>\n<ul>\n<li>누적 투자금 (파이차트)</li>\n<li>누적 수익률</li>\n<li>기준금리(<a href=\"http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927\" target=\"_blank\" rel=\"noopener\">http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927</a>)</li>\n</ul>\n<p>중간에 소진율을 보여주기 위한 progress bar 도 추가하고..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/</span><br><span class=\"line\">ionic g component ProgressBar</span><br></pre></td></tr></table></figure></p>\n<p>상세화면을 띄우기 위해서 in-app-browser도 설치<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://ionicframework.com/docs/native/in-app-browser/</span><br><span class=\"line\">ionic cordova plugin add cordova-plugin-inappbrowser</span><br><span class=\"line\">npm install --save @ionic-native/in-app-browser</span><br></pre></td></tr></table></figure></p>\n<p>대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.<br>(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)</p>\n<h5 id=\"딜-목록화면\"><a href=\"#딜-목록화면\" class=\"headerlink\" title=\"딜 목록화면\"></a>딜 목록화면</h5><p><img src=\"/images/ionic/deal_list.webp\" alt=\"딜 목록화면\" title=\"딜 목록화면\"></p>\n<h5 id=\"통계화면\"><a href=\"#통계화면\" class=\"headerlink\" title=\"통계화면\"></a>통계화면</h5><p><img src=\"/images/ionic/p2p_statistics.webp\" alt=\"통계화면\" title=\"통계화면\"></p>\n<h4 id=\"api-만들기\"><a href=\"#api-만들기\" class=\"headerlink\" title=\"api 만들기\"></a>api 만들기</h4><p>node를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.</p>\n<p>필수정보만 디비스키마를 만들어서 필요한 정보를 저장<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`deal`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 아이디 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealTitle`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealAmount`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 금액 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRevenueRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'수익률 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealMonthPeriod`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 기간 (월 기준) '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRunoutRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 소진율 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`updatedAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'갱신일시\\n'</span>,</span><br><span class=\"line\">  <span class=\"string\">`createdAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'생성일시\\n'</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`site`</span> (</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 코드 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteName`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 이름 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 주소 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteLogo`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 로고 '</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`siteCode`</span>));</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>p2p 금융상품 모아서 보여주기</p>\n</blockquote>\n<p>이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.<br>p2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요…</p>\n<h3 id=\"시작하기\"><a href=\"#시작하기\" class=\"headerlink\" title=\"시작하기\"></a>시작하기</h3><p>ionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.</p>\n<p>업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.</p>\n<p>node와 ionic 설치를 끝내고, 프로젝트를 생성합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic start MyIonicProject super</span><br></pre></td></tr></table></figure>\n<p>super로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 <code>복붙</code>이 너무 편해요.</p>\n<p>나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.</p>\n<p>폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. </p>\n<p>프로젝트 생성이 완료되었으면 간단히 실행해봅시다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<p>브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.</p>\n<h4 id=\"기능-정의하기\"><a href=\"#기능-정의하기\" class=\"headerlink\" title=\"기능 정의하기\"></a>기능 정의하기</h4><p>어떤 화면이 필요할까…</p>\n<p>이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.</p>\n<p>대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.</p>\n<p>이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.</p>\n<p>사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.</p>\n<p>그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.</p>\n<p><strong><em>목록에서 보여지는 정보</em></strong></p>\n<ul>\n<li>사이트로고</li>\n<li>금액</li>\n<li>수익률</li>\n<li>기간</li>\n<li>소진율(optional)</li>\n</ul>\n<p>목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.</p>\n<p>한페이지로 끝내버리기 위한.. 화면 구성입니다.</p>\n<p>이제 생각한대로 만들기 시작해봅시다.</p>\n<h4 id=\"플러그인-설치\"><a href=\"#플러그인-설치\" class=\"headerlink\" title=\"플러그인 설치\"></a>플러그인 설치</h4><p>대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.<br><a href=\"https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\" target=\"_blank\" rel=\"noopener\">https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/</a></p>\n<ul>\n<li>누적 투자금 (파이차트)</li>\n<li>누적 수익률</li>\n<li>기준금리(<a href=\"http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927\" target=\"_blank\" rel=\"noopener\">http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927</a>)</li>\n</ul>\n<p>중간에 소진율을 보여주기 위한 progress bar 도 추가하고..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/</span><br><span class=\"line\">ionic g component ProgressBar</span><br></pre></td></tr></table></figure></p>\n<p>상세화면을 띄우기 위해서 in-app-browser도 설치<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://ionicframework.com/docs/native/in-app-browser/</span><br><span class=\"line\">ionic cordova plugin add cordova-plugin-inappbrowser</span><br><span class=\"line\">npm install --save @ionic-native/in-app-browser</span><br></pre></td></tr></table></figure></p>\n<p>대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.<br>(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)</p>\n<h5 id=\"딜-목록화면\"><a href=\"#딜-목록화면\" class=\"headerlink\" title=\"딜 목록화면\"></a>딜 목록화면</h5><p><img src=\"/images/ionic/deal_list.webp\" alt=\"딜 목록화면\" title=\"딜 목록화면\"></p>\n<h5 id=\"통계화면\"><a href=\"#통계화면\" class=\"headerlink\" title=\"통계화면\"></a>통계화면</h5><p><img src=\"/images/ionic/p2p_statistics.webp\" alt=\"통계화면\" title=\"통계화면\"></p>\n<h4 id=\"api-만들기\"><a href=\"#api-만들기\" class=\"headerlink\" title=\"api 만들기\"></a>api 만들기</h4><p>node를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.</p>\n<p>필수정보만 디비스키마를 만들어서 필요한 정보를 저장<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`deal`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 아이디 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealTitle`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealAmount`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 금액 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRevenueRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'수익률 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealMonthPeriod`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 기간 (월 기준) '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRunoutRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 소진율 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`updatedAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'갱신일시\\n'</span>,</span><br><span class=\"line\">  <span class=\"string\">`createdAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'생성일시\\n'</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`site`</span> (</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 코드 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteName`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 이름 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 주소 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteLogo`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 로고 '</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`siteCode`</span>));</span><br></pre></td></tr></table></figure></p>\n"},{"title":"passport","date":"2019-02-17T08:11:42.000Z","_content":"\n## passport : http://www.passportjs.org/\n\n> Simple, unobtrusive authentication for Node.js\n\n패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.\n\n## local strategy\n\n외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.\n로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.\n\n## 사전작업 \n\n\n### 패스포트가 자동으로 생성해주는 함수 (변수)\n\n- req.user : 로그인한 사용자 정보\n- req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)\n- req.logout : 로그아웃 함수 (세션정보 비움)\n- req.isAuthenticated : 요청 사용자의 인증여부 확인\n\n### Session Storage 설정\n\n- express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)\n- memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)\n- session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)\n- response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음\n\n```javascript\nconst express = require('express') ;\nconst passport = require('passport'); \nconst session = require('express-session'); \nconst RedisStore = require('connect-redis')(session);\n \nconst app = express() ;\napp.use(session({ \n  store: new RedisStore({\n    url: config.redisStore.url\n  }),\n  secret: config.redisStore.secret,\n  //resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)\n  resave: false,\n  saveUninitialized: false\n}));\n//express 연결\napp.use(passport.initialize()); \n//영속적인 로그인 세션 관리 (deserialize)\napp.use(passport.session());\n```\n\n### passport 기본 함수 구현\n\n#### passport id & pwd 체크 \n\n```javascript\nconst passport = require('passport') \nconst LocalStrategy = require('passport-local').Strategy\n \nconst user = { \n  username: 'test-user',\n  password: 'test-password',\n  id: 1\n}\n \n//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) \npassport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'passwd'\n  },\n  function(username, password, done) {\n    //findUser는 실제로 database에서 user를 조회해야 함\n    findUser(username, function (err, user) {\n      if (err) {\n        return done(err)\n      }\n      //일차하는 user가 없는 경우 ( = 일차하는 id 없음 )\n      if (!user) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )\n      if (!user.validPassword(password)) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공\n      return done(null, user)\n    })\n  }\n))\n \n \n//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다\n//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.\n//done 함수는 인증 실패/성공여부를 포함하여 실행된다.\n//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.\n```\n\n#### user serialize\n\n```javascript\npassport.serializeUser(function(user, done) {\n    done(null, user);\n});\n\n// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음\n```\n\n#### user deserialize\n\n```javascript\npassport.deserializeUser(function(user, done) {\n    done(null, user);\n});\n\n// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함\n```\n\n#### authentication middleware\n\n```javascript\nfunction authenticationMiddleware () { \n  return function (req, res, next) {\n    if (req.isAuthenticated()) {\n      return next()\n    }\n    res.redirect('/')\n  }\n}\n```\n\n## login flow\n\nflow\n\n1. id 와 password를 post method로 login url로 요청\n2. login router에서 passport.authenticate 함수를 이용해 strategy를 선택\n3. 선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달\n4. serialize 를 통해 session에 user 정보 저장\n5. callback 함수안에서 req.logIn 함수 실행\n6. Set-Cookie 헤더에 세션키값을 저장하여  response\n7. session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장\n\ncode\n\n```javascript\napp.get('/login', function(req, res, next) {\n  passport.authenticate('local', function(err, user, info) {\n    if (err) { return next(err); }\n    if (!user) { return res.redirect('/login'); }\n    //passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장\n    req.logIn(user, function(err) {\n      if (err) { return next(err); }\n      return res.redirect('/users/' + user.username);\n    });\n  })(req, res, next);\n});\n\n// logout 함수로 req.user 를 삭제하고 관련 login session을 비움\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n```\n\n## resource authentication flow\n\nflow \n\n1. endpont로 request 보냄\n2. cookie이용해서 session 정보 조회\n3. session 정보 deserialize 해서 user 정보 얻기\n4. req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인\n5. 인증된 경우 / 인증되지 않은 경우에 따라 처리\n\ncode\n\n```javascript\nconst passport = require('passport')\napp.get('/resource', passport.authenticationMiddleware(), function(req, res){\n    res.render('resource', { title: 'passport example' });\n});\n```\n\n## 참조 링크\n\n- https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\n- https://github.com/passport/express-4.x-local-example/blob/master/server.js\n- https://scotch.io/tutorials/easy-node-authentication-setup-and-local\n- https://bcho.tistory.com/920","source":"_posts/nodejs/nodejs-passport.md","raw":"---\ntitle: passport\ndate: 2019-02-17 17:11:42\ntags:\n- nodejs\n- express\n- passport\n- authentication\ncategories:\n- nodejs\n---\n\n## passport : http://www.passportjs.org/\n\n> Simple, unobtrusive authentication for Node.js\n\n패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.\n\n## local strategy\n\n외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.\n로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.\n\n## 사전작업 \n\n\n### 패스포트가 자동으로 생성해주는 함수 (변수)\n\n- req.user : 로그인한 사용자 정보\n- req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)\n- req.logout : 로그아웃 함수 (세션정보 비움)\n- req.isAuthenticated : 요청 사용자의 인증여부 확인\n\n### Session Storage 설정\n\n- express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)\n- memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)\n- session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)\n- response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음\n\n```javascript\nconst express = require('express') ;\nconst passport = require('passport'); \nconst session = require('express-session'); \nconst RedisStore = require('connect-redis')(session);\n \nconst app = express() ;\napp.use(session({ \n  store: new RedisStore({\n    url: config.redisStore.url\n  }),\n  secret: config.redisStore.secret,\n  //resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)\n  resave: false,\n  saveUninitialized: false\n}));\n//express 연결\napp.use(passport.initialize()); \n//영속적인 로그인 세션 관리 (deserialize)\napp.use(passport.session());\n```\n\n### passport 기본 함수 구현\n\n#### passport id & pwd 체크 \n\n```javascript\nconst passport = require('passport') \nconst LocalStrategy = require('passport-local').Strategy\n \nconst user = { \n  username: 'test-user',\n  password: 'test-password',\n  id: 1\n}\n \n//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) \npassport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'passwd'\n  },\n  function(username, password, done) {\n    //findUser는 실제로 database에서 user를 조회해야 함\n    findUser(username, function (err, user) {\n      if (err) {\n        return done(err)\n      }\n      //일차하는 user가 없는 경우 ( = 일차하는 id 없음 )\n      if (!user) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )\n      if (!user.validPassword(password)) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공\n      return done(null, user)\n    })\n  }\n))\n \n \n//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다\n//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.\n//done 함수는 인증 실패/성공여부를 포함하여 실행된다.\n//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.\n```\n\n#### user serialize\n\n```javascript\npassport.serializeUser(function(user, done) {\n    done(null, user);\n});\n\n// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음\n```\n\n#### user deserialize\n\n```javascript\npassport.deserializeUser(function(user, done) {\n    done(null, user);\n});\n\n// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함\n```\n\n#### authentication middleware\n\n```javascript\nfunction authenticationMiddleware () { \n  return function (req, res, next) {\n    if (req.isAuthenticated()) {\n      return next()\n    }\n    res.redirect('/')\n  }\n}\n```\n\n## login flow\n\nflow\n\n1. id 와 password를 post method로 login url로 요청\n2. login router에서 passport.authenticate 함수를 이용해 strategy를 선택\n3. 선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달\n4. serialize 를 통해 session에 user 정보 저장\n5. callback 함수안에서 req.logIn 함수 실행\n6. Set-Cookie 헤더에 세션키값을 저장하여  response\n7. session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장\n\ncode\n\n```javascript\napp.get('/login', function(req, res, next) {\n  passport.authenticate('local', function(err, user, info) {\n    if (err) { return next(err); }\n    if (!user) { return res.redirect('/login'); }\n    //passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장\n    req.logIn(user, function(err) {\n      if (err) { return next(err); }\n      return res.redirect('/users/' + user.username);\n    });\n  })(req, res, next);\n});\n\n// logout 함수로 req.user 를 삭제하고 관련 login session을 비움\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n```\n\n## resource authentication flow\n\nflow \n\n1. endpont로 request 보냄\n2. cookie이용해서 session 정보 조회\n3. session 정보 deserialize 해서 user 정보 얻기\n4. req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인\n5. 인증된 경우 / 인증되지 않은 경우에 따라 처리\n\ncode\n\n```javascript\nconst passport = require('passport')\napp.get('/resource', passport.authenticationMiddleware(), function(req, res){\n    res.render('resource', { title: 'passport example' });\n});\n```\n\n## 참조 링크\n\n- https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\n- https://github.com/passport/express-4.x-local-example/blob/master/server.js\n- https://scotch.io/tutorials/easy-node-authentication-setup-and-local\n- https://bcho.tistory.com/920","slug":"nodejs/nodejs-passport","published":1,"updated":"2019-02-17T09:31:52.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zu0014y8uhn4ndoabq","content":"<h2 id=\"passport-http-www-passportjs-org\"><a href=\"#passport-http-www-passportjs-org\" class=\"headerlink\" title=\"passport : http://www.passportjs.org/\"></a>passport : <a href=\"http://www.passportjs.org/\" target=\"_blank\" rel=\"noopener\">http://www.passportjs.org/</a></h2><blockquote>\n<p>Simple, unobtrusive authentication for Node.js</p>\n</blockquote>\n<p>패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.</p>\n<h2 id=\"local-strategy\"><a href=\"#local-strategy\" class=\"headerlink\" title=\"local strategy\"></a>local strategy</h2><p>외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.<br>로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.</p>\n<h2 id=\"사전작업\"><a href=\"#사전작업\" class=\"headerlink\" title=\"사전작업\"></a>사전작업</h2><h3 id=\"패스포트가-자동으로-생성해주는-함수-변수\"><a href=\"#패스포트가-자동으로-생성해주는-함수-변수\" class=\"headerlink\" title=\"패스포트가 자동으로 생성해주는 함수 (변수)\"></a>패스포트가 자동으로 생성해주는 함수 (변수)</h3><ul>\n<li>req.user : 로그인한 사용자 정보</li>\n<li>req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)</li>\n<li>req.logout : 로그아웃 함수 (세션정보 비움)</li>\n<li>req.isAuthenticated : 요청 사용자의 인증여부 확인</li>\n</ul>\n<h3 id=\"Session-Storage-설정\"><a href=\"#Session-Storage-설정\" class=\"headerlink\" title=\"Session Storage 설정\"></a>Session Storage 설정</h3><ul>\n<li>express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)</li>\n<li>memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)</li>\n<li>session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)</li>\n<li>response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>) ;</span><br><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">'express-session'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> RedisStore = <span class=\"built_in\">require</span>(<span class=\"string\">'connect-redis'</span>)(session);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express() ;</span><br><span class=\"line\">app.use(session(&#123; </span><br><span class=\"line\">  store: <span class=\"keyword\">new</span> RedisStore(&#123;</span><br><span class=\"line\">    url: config.redisStore.url</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  secret: config.redisStore.secret,</span><br><span class=\"line\">  <span class=\"comment\">//resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)</span></span><br><span class=\"line\">  resave: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;));</span><br><span class=\"line\"><span class=\"comment\">//express 연결</span></span><br><span class=\"line\">app.use(passport.initialize()); </span><br><span class=\"line\"><span class=\"comment\">//영속적인 로그인 세션 관리 (deserialize)</span></span><br><span class=\"line\">app.use(passport.session());</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport-기본-함수-구현\"><a href=\"#passport-기본-함수-구현\" class=\"headerlink\" title=\"passport 기본 함수 구현\"></a>passport 기본 함수 구현</h3><h4 id=\"passport-id-amp-pwd-체크\"><a href=\"#passport-id-amp-pwd-체크\" class=\"headerlink\" title=\"passport id &amp; pwd 체크\"></a>passport id &amp; pwd 체크</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>) </span><br><span class=\"line\"><span class=\"keyword\">const</span> LocalStrategy = <span class=\"built_in\">require</span>(<span class=\"string\">'passport-local'</span>).Strategy</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; </span><br><span class=\"line\">  username: <span class=\"string\">'test-user'</span>,</span><br><span class=\"line\">  password: <span class=\"string\">'test-password'</span>,</span><br><span class=\"line\">  id: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) </span></span><br><span class=\"line\">passport.use(<span class=\"keyword\">new</span> LocalStrategy(&#123;</span><br><span class=\"line\">    usernameField: <span class=\"string\">'email'</span>,</span><br><span class=\"line\">    passwordField: <span class=\"string\">'passwd'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">username, password, done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//findUser는 실제로 database에서 user를 조회해야 함</span></span><br><span class=\"line\">    findUser(username, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, user</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//일차하는 user가 없는 경우 ( = 일차하는 id 없음 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user.validPassword(password)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, user)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">))</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다</span></span><br><span class=\"line\"><span class=\"comment\">//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 인증 실패/성공여부를 포함하여 실행된다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-serialize\"><a href=\"#user-serialize\" class=\"headerlink\" title=\"user serialize\"></a>user serialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.serializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-deserialize\"><a href=\"#user-deserialize\" class=\"headerlink\" title=\"user deserialize\"></a>user deserialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.deserializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"authentication-middleware\"><a href=\"#authentication-middleware\" class=\"headerlink\" title=\"authentication middleware\"></a>authentication middleware</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">authenticationMiddleware</span> (<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (req.isAuthenticated()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> next()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res.redirect(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"login-flow\"><a href=\"#login-flow\" class=\"headerlink\" title=\"login flow\"></a>login flow</h2><p>flow</p>\n<ol>\n<li>id 와 password를 post method로 login url로 요청</li>\n<li>login router에서 passport.authenticate 함수를 이용해 strategy를 선택</li>\n<li>선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달</li>\n<li>serialize 를 통해 session에 user 정보 저장</li>\n<li>callback 함수안에서 req.logIn 함수 실행</li>\n<li>Set-Cookie 헤더에 세션키값을 저장하여  response</li>\n<li>session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">'/login'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  passport.authenticate(<span class=\"string\">'local'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, user, info</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/login'</span>); &#125;</span><br><span class=\"line\">    <span class=\"comment\">//passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장</span></span><br><span class=\"line\">    req.logIn(user, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/users/'</span> + user.username);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)(req, res, next);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// logout 함수로 req.user 를 삭제하고 관련 login session을 비움</span></span><br><span class=\"line\">app.get(<span class=\"string\">'/logout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">  req.logout();</span><br><span class=\"line\">  res.redirect(<span class=\"string\">'/'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"resource-authentication-flow\"><a href=\"#resource-authentication-flow\" class=\"headerlink\" title=\"resource authentication flow\"></a>resource authentication flow</h2><p>flow </p>\n<ol>\n<li>endpont로 request 보냄</li>\n<li>cookie이용해서 session 정보 조회</li>\n<li>session 정보 deserialize 해서 user 정보 얻기</li>\n<li>req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인</li>\n<li>인증된 경우 / 인증되지 않은 경우에 따라 처리</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>)</span><br><span class=\"line\">app.get(<span class=\"string\">'/resource'</span>, passport.authenticationMiddleware(), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">    res.render(<span class=\"string\">'resource'</span>, &#123; <span class=\"attr\">title</span>: <span class=\"string\">'passport example'</span> &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"참조-링크\"><a href=\"#참조-링크\" class=\"headerlink\" title=\"참조 링크\"></a>참조 링크</h2><ul>\n<li><a href=\"https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\" target=\"_blank\" rel=\"noopener\">https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/</a></li>\n<li><a href=\"https://github.com/passport/express-4.x-local-example/blob/master/server.js\" target=\"_blank\" rel=\"noopener\">https://github.com/passport/express-4.x-local-example/blob/master/server.js</a></li>\n<li><a href=\"https://scotch.io/tutorials/easy-node-authentication-setup-and-local\" target=\"_blank\" rel=\"noopener\">https://scotch.io/tutorials/easy-node-authentication-setup-and-local</a></li>\n<li><a href=\"https://bcho.tistory.com/920\" target=\"_blank\" rel=\"noopener\">https://bcho.tistory.com/920</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"passport-http-www-passportjs-org\"><a href=\"#passport-http-www-passportjs-org\" class=\"headerlink\" title=\"passport : http://www.passportjs.org/\"></a>passport : <a href=\"http://www.passportjs.org/\" target=\"_blank\" rel=\"noopener\">http://www.passportjs.org/</a></h2><blockquote>\n<p>Simple, unobtrusive authentication for Node.js</p>\n</blockquote>\n<p>패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.</p>\n<h2 id=\"local-strategy\"><a href=\"#local-strategy\" class=\"headerlink\" title=\"local strategy\"></a>local strategy</h2><p>외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.<br>로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.</p>\n<h2 id=\"사전작업\"><a href=\"#사전작업\" class=\"headerlink\" title=\"사전작업\"></a>사전작업</h2><h3 id=\"패스포트가-자동으로-생성해주는-함수-변수\"><a href=\"#패스포트가-자동으로-생성해주는-함수-변수\" class=\"headerlink\" title=\"패스포트가 자동으로 생성해주는 함수 (변수)\"></a>패스포트가 자동으로 생성해주는 함수 (변수)</h3><ul>\n<li>req.user : 로그인한 사용자 정보</li>\n<li>req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)</li>\n<li>req.logout : 로그아웃 함수 (세션정보 비움)</li>\n<li>req.isAuthenticated : 요청 사용자의 인증여부 확인</li>\n</ul>\n<h3 id=\"Session-Storage-설정\"><a href=\"#Session-Storage-설정\" class=\"headerlink\" title=\"Session Storage 설정\"></a>Session Storage 설정</h3><ul>\n<li>express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)</li>\n<li>memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)</li>\n<li>session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)</li>\n<li>response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>) ;</span><br><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">'express-session'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> RedisStore = <span class=\"built_in\">require</span>(<span class=\"string\">'connect-redis'</span>)(session);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express() ;</span><br><span class=\"line\">app.use(session(&#123; </span><br><span class=\"line\">  store: <span class=\"keyword\">new</span> RedisStore(&#123;</span><br><span class=\"line\">    url: config.redisStore.url</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  secret: config.redisStore.secret,</span><br><span class=\"line\">  <span class=\"comment\">//resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)</span></span><br><span class=\"line\">  resave: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;));</span><br><span class=\"line\"><span class=\"comment\">//express 연결</span></span><br><span class=\"line\">app.use(passport.initialize()); </span><br><span class=\"line\"><span class=\"comment\">//영속적인 로그인 세션 관리 (deserialize)</span></span><br><span class=\"line\">app.use(passport.session());</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport-기본-함수-구현\"><a href=\"#passport-기본-함수-구현\" class=\"headerlink\" title=\"passport 기본 함수 구현\"></a>passport 기본 함수 구현</h3><h4 id=\"passport-id-amp-pwd-체크\"><a href=\"#passport-id-amp-pwd-체크\" class=\"headerlink\" title=\"passport id &amp; pwd 체크\"></a>passport id &amp; pwd 체크</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>) </span><br><span class=\"line\"><span class=\"keyword\">const</span> LocalStrategy = <span class=\"built_in\">require</span>(<span class=\"string\">'passport-local'</span>).Strategy</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; </span><br><span class=\"line\">  username: <span class=\"string\">'test-user'</span>,</span><br><span class=\"line\">  password: <span class=\"string\">'test-password'</span>,</span><br><span class=\"line\">  id: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) </span></span><br><span class=\"line\">passport.use(<span class=\"keyword\">new</span> LocalStrategy(&#123;</span><br><span class=\"line\">    usernameField: <span class=\"string\">'email'</span>,</span><br><span class=\"line\">    passwordField: <span class=\"string\">'passwd'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">username, password, done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//findUser는 실제로 database에서 user를 조회해야 함</span></span><br><span class=\"line\">    findUser(username, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, user</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//일차하는 user가 없는 경우 ( = 일차하는 id 없음 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user.validPassword(password)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, user)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">))</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다</span></span><br><span class=\"line\"><span class=\"comment\">//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 인증 실패/성공여부를 포함하여 실행된다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-serialize\"><a href=\"#user-serialize\" class=\"headerlink\" title=\"user serialize\"></a>user serialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.serializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-deserialize\"><a href=\"#user-deserialize\" class=\"headerlink\" title=\"user deserialize\"></a>user deserialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.deserializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"authentication-middleware\"><a href=\"#authentication-middleware\" class=\"headerlink\" title=\"authentication middleware\"></a>authentication middleware</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">authenticationMiddleware</span> (<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (req.isAuthenticated()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> next()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res.redirect(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"login-flow\"><a href=\"#login-flow\" class=\"headerlink\" title=\"login flow\"></a>login flow</h2><p>flow</p>\n<ol>\n<li>id 와 password를 post method로 login url로 요청</li>\n<li>login router에서 passport.authenticate 함수를 이용해 strategy를 선택</li>\n<li>선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달</li>\n<li>serialize 를 통해 session에 user 정보 저장</li>\n<li>callback 함수안에서 req.logIn 함수 실행</li>\n<li>Set-Cookie 헤더에 세션키값을 저장하여  response</li>\n<li>session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">'/login'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  passport.authenticate(<span class=\"string\">'local'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, user, info</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/login'</span>); &#125;</span><br><span class=\"line\">    <span class=\"comment\">//passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장</span></span><br><span class=\"line\">    req.logIn(user, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/users/'</span> + user.username);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)(req, res, next);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// logout 함수로 req.user 를 삭제하고 관련 login session을 비움</span></span><br><span class=\"line\">app.get(<span class=\"string\">'/logout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">  req.logout();</span><br><span class=\"line\">  res.redirect(<span class=\"string\">'/'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"resource-authentication-flow\"><a href=\"#resource-authentication-flow\" class=\"headerlink\" title=\"resource authentication flow\"></a>resource authentication flow</h2><p>flow </p>\n<ol>\n<li>endpont로 request 보냄</li>\n<li>cookie이용해서 session 정보 조회</li>\n<li>session 정보 deserialize 해서 user 정보 얻기</li>\n<li>req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인</li>\n<li>인증된 경우 / 인증되지 않은 경우에 따라 처리</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>)</span><br><span class=\"line\">app.get(<span class=\"string\">'/resource'</span>, passport.authenticationMiddleware(), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">    res.render(<span class=\"string\">'resource'</span>, &#123; <span class=\"attr\">title</span>: <span class=\"string\">'passport example'</span> &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"참조-링크\"><a href=\"#참조-링크\" class=\"headerlink\" title=\"참조 링크\"></a>참조 링크</h2><ul>\n<li><a href=\"https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\" target=\"_blank\" rel=\"noopener\">https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/</a></li>\n<li><a href=\"https://github.com/passport/express-4.x-local-example/blob/master/server.js\" target=\"_blank\" rel=\"noopener\">https://github.com/passport/express-4.x-local-example/blob/master/server.js</a></li>\n<li><a href=\"https://scotch.io/tutorials/easy-node-authentication-setup-and-local\" target=\"_blank\" rel=\"noopener\">https://scotch.io/tutorials/easy-node-authentication-setup-and-local</a></li>\n<li><a href=\"https://bcho.tistory.com/920\" target=\"_blank\" rel=\"noopener\">https://bcho.tistory.com/920</a></li>\n</ul>\n"},{"title":"npm-registry","date":"2019-02-24T12:04:36.000Z","_content":"\n## private node package manger \n\nwww.npmjs.com 에서도 개인이 한 달에 7$를 지불하면 private 패키지를 관리할 수 있다.\n여건만 된다면 사설 저장소를 설치해서 관리하는 것도 나쁘지 않다.\n미러링이나 캐쉬로 사용가능하기 때문에 private 으로 관리할 수 있다는 점 외에 장점이 많다.\n사설 패키지 매니저로 `sinopia`와 `nexus`를 설치해보고 노드 프로젝트에 설정해보자.\n\n## sinopia\nhttps://www.npmjs.com/package/sinopia\n\nnpm 엔드포인트 수정\n```sbtshell\n$ npm config get registry\nhttps://registry.npmjs.org/\n$ npm set registry http://localhost:4873\n$ npm config get registry\nhttp://localhost:4873/\n```\n\n## nexus\nhttps://www.sonatype.com/\n\n### 설치 & 실행\n\n1. nexus를 설치하는 방법은 2가지가 있다.\n  - docker 사용\n  - 그냥 설치\n2. 그냥 설치해 보자 … 우선 다운로드 받는다. https://www.sonatype.com/download-oss-sonatype\n3. java 8이 설치되어 있어야 한다.\n4. 아카이브 해제하면 폴더 2개가 나온다\n5. sonatype-work 는 저장소다,\n6. 다른 폴더의 안의 bin 폴더에서 nexus 파일을 실행\n7. http://localhost:8081/ 로 접속\n8. default admin account [admin / admin123]\n\n### repository 생성\n\n![](/images/npm-registry/create_repo.png \"create_repository\")\n\n- 저장소 목록에서 url 컬럼의 버튼을 누르면 저장소 주소가 copy됨\n- repository 타입\n  - group : repository를 하나로 묶을 수 있는 repo\n  - hosted : 저장소 직접 호스팅\n  - proxy : 외부 저장소 prox\n-  npm 저장소 만들기\n  - proxy에 공식 저장소 주소 넣기 : `https://registry.npmjs.org/`\n  - hosted 만들기\n  - group 으로 hosted proxy 묶기\n\n### nexus npm저장소 계정만들기\n\n![](/images/npm-registry/create_acc.png \"create_account\")\n\n### 저장소 realms 설정\n\n![](/images/npm-registry/set_realms.png \"set_realms\")\n\n### user role 설정 \n처음 anonymous 권한 설정이 읽기에 열려 있기 때문에 필요에 따라 anonymous user의 role 변경이 필요함\n\n![](/images/npm-registry/set_role.png \"set_role\")\n\n### nexus npm 저장소 사용하기\n\n- module publish 관련 설정\n  - .npmrc파일 생성\n    ```sbtshell\n    #_auth=<username>:<password>\n    #base64 인코딩\n    _auth=YWRtaW46YWRtaW4xMjM=\n    ```\n  - package.json 수정\n    ```sbtshell\n    {\n      ...\n    \n      \"publishConfig\": {\n        \"registry\": \"http://your.nexus.repository.com/repository/npm-private/\"\n      }\n    }\n    ```\n- install repository 지정\n  - npm config command 이용\n  - .npmrc 파일에 설정정보 추가\n    ```sbtshell\n    registry=http://your.nexus.repository.com/repository/npm-group/\n    ```\n\n## reference\n- http://www.sonatype.org/nexus/2017/02/14/using-nexus-3-as-your-repository-part-2-npm-packages/\n- https://help.sonatype.com/display/NXRM3\n- https://gs.saro.me/#!m=elec&jn=774 \n- https://kingbbode.github.io/posts/nexus-3xx-maven-npm\n- https://blog.sonatype.com/using-nexus-3-as-your-repository-part-2-npm-packages","source":"_posts/nodejs/npm-registry.md","raw":"---\ntitle: npm-registry\ndate: 2019-02-24 21:04:36\ntags:\n- nodejs\n- npm\n- nexus\ncategories:\n- nodejs\n---\n\n## private node package manger \n\nwww.npmjs.com 에서도 개인이 한 달에 7$를 지불하면 private 패키지를 관리할 수 있다.\n여건만 된다면 사설 저장소를 설치해서 관리하는 것도 나쁘지 않다.\n미러링이나 캐쉬로 사용가능하기 때문에 private 으로 관리할 수 있다는 점 외에 장점이 많다.\n사설 패키지 매니저로 `sinopia`와 `nexus`를 설치해보고 노드 프로젝트에 설정해보자.\n\n## sinopia\nhttps://www.npmjs.com/package/sinopia\n\nnpm 엔드포인트 수정\n```sbtshell\n$ npm config get registry\nhttps://registry.npmjs.org/\n$ npm set registry http://localhost:4873\n$ npm config get registry\nhttp://localhost:4873/\n```\n\n## nexus\nhttps://www.sonatype.com/\n\n### 설치 & 실행\n\n1. nexus를 설치하는 방법은 2가지가 있다.\n  - docker 사용\n  - 그냥 설치\n2. 그냥 설치해 보자 … 우선 다운로드 받는다. https://www.sonatype.com/download-oss-sonatype\n3. java 8이 설치되어 있어야 한다.\n4. 아카이브 해제하면 폴더 2개가 나온다\n5. sonatype-work 는 저장소다,\n6. 다른 폴더의 안의 bin 폴더에서 nexus 파일을 실행\n7. http://localhost:8081/ 로 접속\n8. default admin account [admin / admin123]\n\n### repository 생성\n\n![](/images/npm-registry/create_repo.png \"create_repository\")\n\n- 저장소 목록에서 url 컬럼의 버튼을 누르면 저장소 주소가 copy됨\n- repository 타입\n  - group : repository를 하나로 묶을 수 있는 repo\n  - hosted : 저장소 직접 호스팅\n  - proxy : 외부 저장소 prox\n-  npm 저장소 만들기\n  - proxy에 공식 저장소 주소 넣기 : `https://registry.npmjs.org/`\n  - hosted 만들기\n  - group 으로 hosted proxy 묶기\n\n### nexus npm저장소 계정만들기\n\n![](/images/npm-registry/create_acc.png \"create_account\")\n\n### 저장소 realms 설정\n\n![](/images/npm-registry/set_realms.png \"set_realms\")\n\n### user role 설정 \n처음 anonymous 권한 설정이 읽기에 열려 있기 때문에 필요에 따라 anonymous user의 role 변경이 필요함\n\n![](/images/npm-registry/set_role.png \"set_role\")\n\n### nexus npm 저장소 사용하기\n\n- module publish 관련 설정\n  - .npmrc파일 생성\n    ```sbtshell\n    #_auth=<username>:<password>\n    #base64 인코딩\n    _auth=YWRtaW46YWRtaW4xMjM=\n    ```\n  - package.json 수정\n    ```sbtshell\n    {\n      ...\n    \n      \"publishConfig\": {\n        \"registry\": \"http://your.nexus.repository.com/repository/npm-private/\"\n      }\n    }\n    ```\n- install repository 지정\n  - npm config command 이용\n  - .npmrc 파일에 설정정보 추가\n    ```sbtshell\n    registry=http://your.nexus.repository.com/repository/npm-group/\n    ```\n\n## reference\n- http://www.sonatype.org/nexus/2017/02/14/using-nexus-3-as-your-repository-part-2-npm-packages/\n- https://help.sonatype.com/display/NXRM3\n- https://gs.saro.me/#!m=elec&jn=774 \n- https://kingbbode.github.io/posts/nexus-3xx-maven-npm\n- https://blog.sonatype.com/using-nexus-3-as-your-repository-part-2-npm-packages","slug":"nodejs/npm-registry","published":1,"updated":"2019-02-24T13:24:01.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd8zy0018y8uhs9krzgqy","content":"<h2 id=\"private-node-package-manger\"><a href=\"#private-node-package-manger\" class=\"headerlink\" title=\"private node package manger\"></a>private node package manger</h2><p><a href=\"http://www.npmjs.com\" target=\"_blank\" rel=\"noopener\">www.npmjs.com</a> 에서도 개인이 한 달에 7$를 지불하면 private 패키지를 관리할 수 있다.<br>여건만 된다면 사설 저장소를 설치해서 관리하는 것도 나쁘지 않다.<br>미러링이나 캐쉬로 사용가능하기 때문에 private 으로 관리할 수 있다는 점 외에 장점이 많다.<br>사설 패키지 매니저로 <code>sinopia</code>와 <code>nexus</code>를 설치해보고 노드 프로젝트에 설정해보자.</p>\n<h2 id=\"sinopia\"><a href=\"#sinopia\" class=\"headerlink\" title=\"sinopia\"></a>sinopia</h2><p><a href=\"https://www.npmjs.com/package/sinopia\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/sinopia</a></p>\n<p>npm 엔드포인트 수정<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm config get registry</span><br><span class=\"line\">https://registry.npmjs.org/</span><br><span class=\"line\">$ npm set registry http://localhost:4873</span><br><span class=\"line\">$ npm config get registry</span><br><span class=\"line\">http://localhost:4873/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"nexus\"><a href=\"#nexus\" class=\"headerlink\" title=\"nexus\"></a>nexus</h2><p><a href=\"https://www.sonatype.com/\" target=\"_blank\" rel=\"noopener\">https://www.sonatype.com/</a></p>\n<h3 id=\"설치-amp-실행\"><a href=\"#설치-amp-실행\" class=\"headerlink\" title=\"설치 &amp; 실행\"></a>설치 &amp; 실행</h3><ol>\n<li>nexus를 설치하는 방법은 2가지가 있다.<ul>\n<li>docker 사용</li>\n<li>그냥 설치</li>\n</ul>\n</li>\n<li>그냥 설치해 보자 … 우선 다운로드 받는다. <a href=\"https://www.sonatype.com/download-oss-sonatype\" target=\"_blank\" rel=\"noopener\">https://www.sonatype.com/download-oss-sonatype</a></li>\n<li>java 8이 설치되어 있어야 한다.</li>\n<li>아카이브 해제하면 폴더 2개가 나온다</li>\n<li>sonatype-work 는 저장소다,</li>\n<li>다른 폴더의 안의 bin 폴더에서 nexus 파일을 실행</li>\n<li><a href=\"http://localhost:8081/\" target=\"_blank\" rel=\"noopener\">http://localhost:8081/</a> 로 접속</li>\n<li>default admin account [admin / admin123]</li>\n</ol>\n<h3 id=\"repository-생성\"><a href=\"#repository-생성\" class=\"headerlink\" title=\"repository 생성\"></a>repository 생성</h3><p><img src=\"/images/npm-registry/create_repo.png\" alt=\"\" title=\"create_repository\"></p>\n<ul>\n<li>저장소 목록에서 url 컬럼의 버튼을 누르면 저장소 주소가 copy됨</li>\n<li>repository 타입<ul>\n<li>group : repository를 하나로 묶을 수 있는 repo</li>\n<li>hosted : 저장소 직접 호스팅</li>\n<li>proxy : 외부 저장소 prox</li>\n</ul>\n</li>\n<li>npm 저장소 만들기<ul>\n<li>proxy에 공식 저장소 주소 넣기 : <code>https://registry.npmjs.org/</code></li>\n<li>hosted 만들기</li>\n<li>group 으로 hosted proxy 묶기</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"nexus-npm저장소-계정만들기\"><a href=\"#nexus-npm저장소-계정만들기\" class=\"headerlink\" title=\"nexus npm저장소 계정만들기\"></a>nexus npm저장소 계정만들기</h3><p><img src=\"/images/npm-registry/create_acc.png\" alt=\"\" title=\"create_account\"></p>\n<h3 id=\"저장소-realms-설정\"><a href=\"#저장소-realms-설정\" class=\"headerlink\" title=\"저장소 realms 설정\"></a>저장소 realms 설정</h3><p><img src=\"/images/npm-registry/set_realms.png\" alt=\"\" title=\"set_realms\"></p>\n<h3 id=\"user-role-설정\"><a href=\"#user-role-설정\" class=\"headerlink\" title=\"user role 설정\"></a>user role 설정</h3><p>처음 anonymous 권한 설정이 읽기에 열려 있기 때문에 필요에 따라 anonymous user의 role 변경이 필요함</p>\n<p><img src=\"/images/npm-registry/set_role.png\" alt=\"\" title=\"set_role\"></p>\n<h3 id=\"nexus-npm-저장소-사용하기\"><a href=\"#nexus-npm-저장소-사용하기\" class=\"headerlink\" title=\"nexus npm 저장소 사용하기\"></a>nexus npm 저장소 사용하기</h3><ul>\n<li><p>module publish 관련 설정</p>\n<ul>\n<li><p>.npmrc파일 생성</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#_auth=&lt;username&gt;:&lt;password&gt;</span><br><span class=\"line\">#base64 인코딩</span><br><span class=\"line\">_auth=YWRtaW46YWRtaW4xMjM=</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>package.json 수정</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;publishConfig&quot;: &#123;</span><br><span class=\"line\">    &quot;registry&quot;: &quot;http://your.nexus.repository.com/repository/npm-private/&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>install repository 지정</p>\n<ul>\n<li>npm config command 이용</li>\n<li>.npmrc 파일에 설정정보 추가<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=http://your.nexus.repository.com/repository/npm-group/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><ul>\n<li><a href=\"http://www.sonatype.org/nexus/2017/02/14/using-nexus-3-as-your-repository-part-2-npm-packages/\" target=\"_blank\" rel=\"noopener\">http://www.sonatype.org/nexus/2017/02/14/using-nexus-3-as-your-repository-part-2-npm-packages/</a></li>\n<li><a href=\"https://help.sonatype.com/display/NXRM3\" target=\"_blank\" rel=\"noopener\">https://help.sonatype.com/display/NXRM3</a></li>\n<li><a href=\"https://gs.saro.me/#!m=elec&amp;jn=774\" target=\"_blank\" rel=\"noopener\">https://gs.saro.me/#!m=elec&amp;jn=774</a> </li>\n<li><a href=\"https://kingbbode.github.io/posts/nexus-3xx-maven-npm\" target=\"_blank\" rel=\"noopener\">https://kingbbode.github.io/posts/nexus-3xx-maven-npm</a></li>\n<li><a href=\"https://blog.sonatype.com/using-nexus-3-as-your-repository-part-2-npm-packages\" target=\"_blank\" rel=\"noopener\">https://blog.sonatype.com/using-nexus-3-as-your-repository-part-2-npm-packages</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"private-node-package-manger\"><a href=\"#private-node-package-manger\" class=\"headerlink\" title=\"private node package manger\"></a>private node package manger</h2><p><a href=\"http://www.npmjs.com\" target=\"_blank\" rel=\"noopener\">www.npmjs.com</a> 에서도 개인이 한 달에 7$를 지불하면 private 패키지를 관리할 수 있다.<br>여건만 된다면 사설 저장소를 설치해서 관리하는 것도 나쁘지 않다.<br>미러링이나 캐쉬로 사용가능하기 때문에 private 으로 관리할 수 있다는 점 외에 장점이 많다.<br>사설 패키지 매니저로 <code>sinopia</code>와 <code>nexus</code>를 설치해보고 노드 프로젝트에 설정해보자.</p>\n<h2 id=\"sinopia\"><a href=\"#sinopia\" class=\"headerlink\" title=\"sinopia\"></a>sinopia</h2><p><a href=\"https://www.npmjs.com/package/sinopia\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/sinopia</a></p>\n<p>npm 엔드포인트 수정<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm config get registry</span><br><span class=\"line\">https://registry.npmjs.org/</span><br><span class=\"line\">$ npm set registry http://localhost:4873</span><br><span class=\"line\">$ npm config get registry</span><br><span class=\"line\">http://localhost:4873/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"nexus\"><a href=\"#nexus\" class=\"headerlink\" title=\"nexus\"></a>nexus</h2><p><a href=\"https://www.sonatype.com/\" target=\"_blank\" rel=\"noopener\">https://www.sonatype.com/</a></p>\n<h3 id=\"설치-amp-실행\"><a href=\"#설치-amp-실행\" class=\"headerlink\" title=\"설치 &amp; 실행\"></a>설치 &amp; 실행</h3><ol>\n<li>nexus를 설치하는 방법은 2가지가 있다.<ul>\n<li>docker 사용</li>\n<li>그냥 설치</li>\n</ul>\n</li>\n<li>그냥 설치해 보자 … 우선 다운로드 받는다. <a href=\"https://www.sonatype.com/download-oss-sonatype\" target=\"_blank\" rel=\"noopener\">https://www.sonatype.com/download-oss-sonatype</a></li>\n<li>java 8이 설치되어 있어야 한다.</li>\n<li>아카이브 해제하면 폴더 2개가 나온다</li>\n<li>sonatype-work 는 저장소다,</li>\n<li>다른 폴더의 안의 bin 폴더에서 nexus 파일을 실행</li>\n<li><a href=\"http://localhost:8081/\" target=\"_blank\" rel=\"noopener\">http://localhost:8081/</a> 로 접속</li>\n<li>default admin account [admin / admin123]</li>\n</ol>\n<h3 id=\"repository-생성\"><a href=\"#repository-생성\" class=\"headerlink\" title=\"repository 생성\"></a>repository 생성</h3><p><img src=\"/images/npm-registry/create_repo.png\" alt=\"\" title=\"create_repository\"></p>\n<ul>\n<li>저장소 목록에서 url 컬럼의 버튼을 누르면 저장소 주소가 copy됨</li>\n<li>repository 타입<ul>\n<li>group : repository를 하나로 묶을 수 있는 repo</li>\n<li>hosted : 저장소 직접 호스팅</li>\n<li>proxy : 외부 저장소 prox</li>\n</ul>\n</li>\n<li>npm 저장소 만들기<ul>\n<li>proxy에 공식 저장소 주소 넣기 : <code>https://registry.npmjs.org/</code></li>\n<li>hosted 만들기</li>\n<li>group 으로 hosted proxy 묶기</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"nexus-npm저장소-계정만들기\"><a href=\"#nexus-npm저장소-계정만들기\" class=\"headerlink\" title=\"nexus npm저장소 계정만들기\"></a>nexus npm저장소 계정만들기</h3><p><img src=\"/images/npm-registry/create_acc.png\" alt=\"\" title=\"create_account\"></p>\n<h3 id=\"저장소-realms-설정\"><a href=\"#저장소-realms-설정\" class=\"headerlink\" title=\"저장소 realms 설정\"></a>저장소 realms 설정</h3><p><img src=\"/images/npm-registry/set_realms.png\" alt=\"\" title=\"set_realms\"></p>\n<h3 id=\"user-role-설정\"><a href=\"#user-role-설정\" class=\"headerlink\" title=\"user role 설정\"></a>user role 설정</h3><p>처음 anonymous 권한 설정이 읽기에 열려 있기 때문에 필요에 따라 anonymous user의 role 변경이 필요함</p>\n<p><img src=\"/images/npm-registry/set_role.png\" alt=\"\" title=\"set_role\"></p>\n<h3 id=\"nexus-npm-저장소-사용하기\"><a href=\"#nexus-npm-저장소-사용하기\" class=\"headerlink\" title=\"nexus npm 저장소 사용하기\"></a>nexus npm 저장소 사용하기</h3><ul>\n<li><p>module publish 관련 설정</p>\n<ul>\n<li><p>.npmrc파일 생성</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#_auth=&lt;username&gt;:&lt;password&gt;</span><br><span class=\"line\">#base64 인코딩</span><br><span class=\"line\">_auth=YWRtaW46YWRtaW4xMjM=</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>package.json 수정</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;publishConfig&quot;: &#123;</span><br><span class=\"line\">    &quot;registry&quot;: &quot;http://your.nexus.repository.com/repository/npm-private/&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>install repository 지정</p>\n<ul>\n<li>npm config command 이용</li>\n<li>.npmrc 파일에 설정정보 추가<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=http://your.nexus.repository.com/repository/npm-group/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><ul>\n<li><a href=\"http://www.sonatype.org/nexus/2017/02/14/using-nexus-3-as-your-repository-part-2-npm-packages/\" target=\"_blank\" rel=\"noopener\">http://www.sonatype.org/nexus/2017/02/14/using-nexus-3-as-your-repository-part-2-npm-packages/</a></li>\n<li><a href=\"https://help.sonatype.com/display/NXRM3\" target=\"_blank\" rel=\"noopener\">https://help.sonatype.com/display/NXRM3</a></li>\n<li><a href=\"https://gs.saro.me/#!m=elec&amp;jn=774\" target=\"_blank\" rel=\"noopener\">https://gs.saro.me/#!m=elec&amp;jn=774</a> </li>\n<li><a href=\"https://kingbbode.github.io/posts/nexus-3xx-maven-npm\" target=\"_blank\" rel=\"noopener\">https://kingbbode.github.io/posts/nexus-3xx-maven-npm</a></li>\n<li><a href=\"https://blog.sonatype.com/using-nexus-3-as-your-repository-part-2-npm-packages\" target=\"_blank\" rel=\"noopener\">https://blog.sonatype.com/using-nexus-3-as-your-repository-part-2-npm-packages</a></li>\n</ul>\n"},{"title":"ionic-set-environment","date":"2019-02-04T07:19:45.000Z","_content":"## 공식 document\nhttp://ionicframework.com/docs/intro/installation/\n\n## 설치\n```sbtshell\n# permission deny되는 경우 sudo로 설치해주세요\nnpm install -g ionic cordova\n```\n\n***node는 필수로 설치되어 있어야 합니다.*** \n\n## 프로젝트 생성 / 실행\n\n```sbtshell\n#프로젝트만들기\n#https://ionicframework.com/getting-started/\nionic start myFirstApp template_name\n\n##template type\n#tabs(default) : a simple 3 tab layout\n#sidemenu: a layout with a swipable menu on the side\n#blank: a bare starter with a single page\n#super: starter project with over 14 ready to use page designs\n#tutorial: a guided starter project\n\n#생성한 프로젝트로 이동\ncd myFirstApp\n\n#실행하기(run on browser)\nionic serve\n```\n\n> 에러[Error: Cannot find module 'reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.\n> https://github.com/driftyco/ionic/issues/9689 \n\n## 플랫폼별 개발환경 만들기\n\n```sbtshell\n#프로젝트에 설치된 플랫폼 리스트 확인하기\ncordova platform ls\n\n#플랫폼별 요구사항 체크\ncordova requirements\n\n#프로젝트에 플랫폼 추가하기\ncordova platform add ios --save\ncordova platform add android --save\n```\n\n### ios 개발환경 만들기\n\n- app store에서 xcode 검색해서 설치하기\n- iOS기기로 런치할 수 있는 개발 툴 설치\n```sbtshell\nnpm install -g ios-sim\nnpm install -g ios-deploy\n```\n\n> 에러[xcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance]나는 경우\n> http://frontend.diffthink.kr/2016/04/ios.html\n\n![ios_setting](/images/ionic/ios_setting.png \"ios 설정\")\n\n- xcode에서 preference -> Locations command line tools 선택\n  - 참고 : https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\n\n### android 개발환경 만들기\n\nandroid studio 설치하기 : https://developer.android.com/studio/install.html\n\nANDROID_HOME path 설정\n\n```\n#mac에서 설정 \n#~.bash_profile 파일에 설정하기\nexport ANDROID_HOME=\"/Users/username/Library/Android/sdk\"\nexport ANDROID_TOOLS=\"/Users/username/Library/Android/sdk/tools\"\nexport ANDROID_PLATFORM_TOOLS=\"/Users/username/Library/Android/sdk/platform-tools\"\nPATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS\n```\n\nandroid 가상 디바이스에서 실행하기\n\n```\n# 가상 디바이스 목록보기\nadb devices\n\n# 결과목록\n# emulator-5554   device\n\n# 특정 타겟에서 실행하기\nionic run android --target=emulator-5554\n```\n\n> 에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.\n> Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우\n> https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\n> 링크 참고해서 다운로드 받은 파일은 tools에 덮기\n\n> 에러[Error: android: Command failed with exit code 2]\n> 에뮬레이터 실행해 놓고, 빌드하기\n> 참고하기 : https://cordova.apache.org/docs/en/latest/guide/platforms/android/\n\n## 자주 사용하는 ionic command\n\n```\n#특정 플랫폼으로 실행하기\n#실제 디바이스에 설치하기 (debugging & developer mode 켜고 usb로 연결한 후 사용)\n#https://developer.android.com/studio/run/device.html#developer-device-options\nionic cordova run android --device\nionic cordova build android --release\nionic cordova platform ls\n\n# browser에서 실행하기\nionic serve \nionic run browser\n\n##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함\n#(plaform에 browser 추가 필요)\n#https://github.com/driftyco/ionic-native/issues/403\n\n#ionic serve runs your app as a website (meaning it doesn't have any Cordova capabilities)\n#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities\n```","source":"_posts/ionic/ionic-set-environment.md","raw":"---\ntitle: ionic-set-environment\ndate: 2019-02-04 16:19:45\ntags:\n- mobile\n- ionic\ncategories:\n- ionic\n---\n## 공식 document\nhttp://ionicframework.com/docs/intro/installation/\n\n## 설치\n```sbtshell\n# permission deny되는 경우 sudo로 설치해주세요\nnpm install -g ionic cordova\n```\n\n***node는 필수로 설치되어 있어야 합니다.*** \n\n## 프로젝트 생성 / 실행\n\n```sbtshell\n#프로젝트만들기\n#https://ionicframework.com/getting-started/\nionic start myFirstApp template_name\n\n##template type\n#tabs(default) : a simple 3 tab layout\n#sidemenu: a layout with a swipable menu on the side\n#blank: a bare starter with a single page\n#super: starter project with over 14 ready to use page designs\n#tutorial: a guided starter project\n\n#생성한 프로젝트로 이동\ncd myFirstApp\n\n#실행하기(run on browser)\nionic serve\n```\n\n> 에러[Error: Cannot find module 'reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.\n> https://github.com/driftyco/ionic/issues/9689 \n\n## 플랫폼별 개발환경 만들기\n\n```sbtshell\n#프로젝트에 설치된 플랫폼 리스트 확인하기\ncordova platform ls\n\n#플랫폼별 요구사항 체크\ncordova requirements\n\n#프로젝트에 플랫폼 추가하기\ncordova platform add ios --save\ncordova platform add android --save\n```\n\n### ios 개발환경 만들기\n\n- app store에서 xcode 검색해서 설치하기\n- iOS기기로 런치할 수 있는 개발 툴 설치\n```sbtshell\nnpm install -g ios-sim\nnpm install -g ios-deploy\n```\n\n> 에러[xcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance]나는 경우\n> http://frontend.diffthink.kr/2016/04/ios.html\n\n![ios_setting](/images/ionic/ios_setting.png \"ios 설정\")\n\n- xcode에서 preference -> Locations command line tools 선택\n  - 참고 : https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\n\n### android 개발환경 만들기\n\nandroid studio 설치하기 : https://developer.android.com/studio/install.html\n\nANDROID_HOME path 설정\n\n```\n#mac에서 설정 \n#~.bash_profile 파일에 설정하기\nexport ANDROID_HOME=\"/Users/username/Library/Android/sdk\"\nexport ANDROID_TOOLS=\"/Users/username/Library/Android/sdk/tools\"\nexport ANDROID_PLATFORM_TOOLS=\"/Users/username/Library/Android/sdk/platform-tools\"\nPATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS\n```\n\nandroid 가상 디바이스에서 실행하기\n\n```\n# 가상 디바이스 목록보기\nadb devices\n\n# 결과목록\n# emulator-5554   device\n\n# 특정 타겟에서 실행하기\nionic run android --target=emulator-5554\n```\n\n> 에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.\n> Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우\n> https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\n> 링크 참고해서 다운로드 받은 파일은 tools에 덮기\n\n> 에러[Error: android: Command failed with exit code 2]\n> 에뮬레이터 실행해 놓고, 빌드하기\n> 참고하기 : https://cordova.apache.org/docs/en/latest/guide/platforms/android/\n\n## 자주 사용하는 ionic command\n\n```\n#특정 플랫폼으로 실행하기\n#실제 디바이스에 설치하기 (debugging & developer mode 켜고 usb로 연결한 후 사용)\n#https://developer.android.com/studio/run/device.html#developer-device-options\nionic cordova run android --device\nionic cordova build android --release\nionic cordova platform ls\n\n# browser에서 실행하기\nionic serve \nionic run browser\n\n##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함\n#(plaform에 browser 추가 필요)\n#https://github.com/driftyco/ionic-native/issues/403\n\n#ionic serve runs your app as a website (meaning it doesn't have any Cordova capabilities)\n#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities\n```","slug":"ionic/ionic-set-environment","published":1,"updated":"2019-02-04T07:21:41.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd900001ay8uh5pmeg5jd","content":"<h2 id=\"공식-document\"><a href=\"#공식-document\" class=\"headerlink\" title=\"공식 document\"></a>공식 document</h2><p><a href=\"http://ionicframework.com/docs/intro/installation/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs/intro/installation/</a></p>\n<h2 id=\"설치\"><a href=\"#설치\" class=\"headerlink\" title=\"설치\"></a>설치</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permission deny되는 경우 sudo로 설치해주세요</span><br><span class=\"line\">npm install -g ionic cordova</span><br></pre></td></tr></table></figure>\n<p><strong><em>node는 필수로 설치되어 있어야 합니다.</em></strong> </p>\n<h2 id=\"프로젝트-생성-실행\"><a href=\"#프로젝트-생성-실행\" class=\"headerlink\" title=\"프로젝트 생성 / 실행\"></a>프로젝트 생성 / 실행</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트만들기</span><br><span class=\"line\">#https://ionicframework.com/getting-started/</span><br><span class=\"line\">ionic start myFirstApp template_name</span><br><span class=\"line\"></span><br><span class=\"line\">##template type</span><br><span class=\"line\">#tabs(default) : a simple 3 tab layout</span><br><span class=\"line\">#sidemenu: a layout with a swipable menu on the side</span><br><span class=\"line\">#blank: a bare starter with a single page</span><br><span class=\"line\">#super: starter project with over 14 ready to use page designs</span><br><span class=\"line\">#tutorial: a guided starter project</span><br><span class=\"line\"></span><br><span class=\"line\">#생성한 프로젝트로 이동</span><br><span class=\"line\">cd myFirstApp</span><br><span class=\"line\"></span><br><span class=\"line\">#실행하기(run on browser)</span><br><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Cannot find module ‘reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.<br><a href=\"https://github.com/driftyco/ionic/issues/9689\" target=\"_blank\" rel=\"noopener\">https://github.com/driftyco/ionic/issues/9689</a> </p>\n</blockquote>\n<h2 id=\"플랫폼별-개발환경-만들기\"><a href=\"#플랫폼별-개발환경-만들기\" class=\"headerlink\" title=\"플랫폼별 개발환경 만들기\"></a>플랫폼별 개발환경 만들기</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트에 설치된 플랫폼 리스트 확인하기</span><br><span class=\"line\">cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\">#플랫폼별 요구사항 체크</span><br><span class=\"line\">cordova requirements</span><br><span class=\"line\"></span><br><span class=\"line\">#프로젝트에 플랫폼 추가하기</span><br><span class=\"line\">cordova platform add ios --save</span><br><span class=\"line\">cordova platform add android --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"ios-개발환경-만들기\"><a href=\"#ios-개발환경-만들기\" class=\"headerlink\" title=\"ios 개발환경 만들기\"></a>ios 개발환경 만들기</h3><ul>\n<li>app store에서 xcode 검색해서 설치하기</li>\n<li>iOS기기로 런치할 수 있는 개발 툴 설치<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g ios-sim</span><br><span class=\"line\">npm install -g ios-deploy</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>에러[xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance]나는 경우<br><a href=\"http://frontend.diffthink.kr/2016/04/ios.html\" target=\"_blank\" rel=\"noopener\">http://frontend.diffthink.kr/2016/04/ios.html</a></p>\n</blockquote>\n<p><img src=\"/images/ionic/ios_setting.png\" alt=\"ios_setting\" title=\"ios 설정\"></p>\n<ul>\n<li>xcode에서 preference -&gt; Locations command line tools 선택<ul>\n<li>참고 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/ios/</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"android-개발환경-만들기\"><a href=\"#android-개발환경-만들기\" class=\"headerlink\" title=\"android 개발환경 만들기\"></a>android 개발환경 만들기</h3><p>android studio 설치하기 : <a href=\"https://developer.android.com/studio/install.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/studio/install.html</a></p>\n<p>ANDROID_HOME path 설정</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#mac에서 설정 </span><br><span class=\"line\">#~.bash_profile 파일에 설정하기</span><br><span class=\"line\">export ANDROID_HOME=&quot;/Users/username/Library/Android/sdk&quot;</span><br><span class=\"line\">export ANDROID_TOOLS=&quot;/Users/username/Library/Android/sdk/tools&quot;</span><br><span class=\"line\">export ANDROID_PLATFORM_TOOLS=&quot;/Users/username/Library/Android/sdk/platform-tools&quot;</span><br><span class=\"line\">PATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS</span><br></pre></td></tr></table></figure>\n<p>android 가상 디바이스에서 실행하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 가상 디바이스 목록보기</span><br><span class=\"line\">adb devices</span><br><span class=\"line\"></span><br><span class=\"line\"># 결과목록</span><br><span class=\"line\"># emulator-5554   device</span><br><span class=\"line\"></span><br><span class=\"line\"># 특정 타겟에서 실행하기</span><br><span class=\"line\">ionic run android --target=emulator-5554</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.<br>Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우<br><a href=\"https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15</a><br>링크 참고해서 다운로드 받은 파일은 tools에 덮기</p>\n</blockquote>\n<blockquote>\n<p>에러[Error: android: Command failed with exit code 2]<br>에뮬레이터 실행해 놓고, 빌드하기<br>참고하기 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/android/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/android/</a></p>\n</blockquote>\n<h2 id=\"자주-사용하는-ionic-command\"><a href=\"#자주-사용하는-ionic-command\" class=\"headerlink\" title=\"자주 사용하는 ionic command\"></a>자주 사용하는 ionic command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#특정 플랫폼으로 실행하기</span><br><span class=\"line\">#실제 디바이스에 설치하기 (debugging &amp; developer mode 켜고 usb로 연결한 후 사용)</span><br><span class=\"line\">#https://developer.android.com/studio/run/device.html#developer-device-options</span><br><span class=\"line\">ionic cordova run android --device</span><br><span class=\"line\">ionic cordova build android --release</span><br><span class=\"line\">ionic cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\"># browser에서 실행하기</span><br><span class=\"line\">ionic serve </span><br><span class=\"line\">ionic run browser</span><br><span class=\"line\"></span><br><span class=\"line\">##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함</span><br><span class=\"line\">#(plaform에 browser 추가 필요)</span><br><span class=\"line\">#https://github.com/driftyco/ionic-native/issues/403</span><br><span class=\"line\"></span><br><span class=\"line\">#ionic serve runs your app as a website (meaning it doesn&apos;t have any Cordova capabilities)</span><br><span class=\"line\">#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"공식-document\"><a href=\"#공식-document\" class=\"headerlink\" title=\"공식 document\"></a>공식 document</h2><p><a href=\"http://ionicframework.com/docs/intro/installation/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs/intro/installation/</a></p>\n<h2 id=\"설치\"><a href=\"#설치\" class=\"headerlink\" title=\"설치\"></a>설치</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permission deny되는 경우 sudo로 설치해주세요</span><br><span class=\"line\">npm install -g ionic cordova</span><br></pre></td></tr></table></figure>\n<p><strong><em>node는 필수로 설치되어 있어야 합니다.</em></strong> </p>\n<h2 id=\"프로젝트-생성-실행\"><a href=\"#프로젝트-생성-실행\" class=\"headerlink\" title=\"프로젝트 생성 / 실행\"></a>프로젝트 생성 / 실행</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트만들기</span><br><span class=\"line\">#https://ionicframework.com/getting-started/</span><br><span class=\"line\">ionic start myFirstApp template_name</span><br><span class=\"line\"></span><br><span class=\"line\">##template type</span><br><span class=\"line\">#tabs(default) : a simple 3 tab layout</span><br><span class=\"line\">#sidemenu: a layout with a swipable menu on the side</span><br><span class=\"line\">#blank: a bare starter with a single page</span><br><span class=\"line\">#super: starter project with over 14 ready to use page designs</span><br><span class=\"line\">#tutorial: a guided starter project</span><br><span class=\"line\"></span><br><span class=\"line\">#생성한 프로젝트로 이동</span><br><span class=\"line\">cd myFirstApp</span><br><span class=\"line\"></span><br><span class=\"line\">#실행하기(run on browser)</span><br><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Cannot find module ‘reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.<br><a href=\"https://github.com/driftyco/ionic/issues/9689\" target=\"_blank\" rel=\"noopener\">https://github.com/driftyco/ionic/issues/9689</a> </p>\n</blockquote>\n<h2 id=\"플랫폼별-개발환경-만들기\"><a href=\"#플랫폼별-개발환경-만들기\" class=\"headerlink\" title=\"플랫폼별 개발환경 만들기\"></a>플랫폼별 개발환경 만들기</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트에 설치된 플랫폼 리스트 확인하기</span><br><span class=\"line\">cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\">#플랫폼별 요구사항 체크</span><br><span class=\"line\">cordova requirements</span><br><span class=\"line\"></span><br><span class=\"line\">#프로젝트에 플랫폼 추가하기</span><br><span class=\"line\">cordova platform add ios --save</span><br><span class=\"line\">cordova platform add android --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"ios-개발환경-만들기\"><a href=\"#ios-개발환경-만들기\" class=\"headerlink\" title=\"ios 개발환경 만들기\"></a>ios 개발환경 만들기</h3><ul>\n<li>app store에서 xcode 검색해서 설치하기</li>\n<li>iOS기기로 런치할 수 있는 개발 툴 설치<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g ios-sim</span><br><span class=\"line\">npm install -g ios-deploy</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>에러[xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance]나는 경우<br><a href=\"http://frontend.diffthink.kr/2016/04/ios.html\" target=\"_blank\" rel=\"noopener\">http://frontend.diffthink.kr/2016/04/ios.html</a></p>\n</blockquote>\n<p><img src=\"/images/ionic/ios_setting.png\" alt=\"ios_setting\" title=\"ios 설정\"></p>\n<ul>\n<li>xcode에서 preference -&gt; Locations command line tools 선택<ul>\n<li>참고 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/ios/</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"android-개발환경-만들기\"><a href=\"#android-개발환경-만들기\" class=\"headerlink\" title=\"android 개발환경 만들기\"></a>android 개발환경 만들기</h3><p>android studio 설치하기 : <a href=\"https://developer.android.com/studio/install.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/studio/install.html</a></p>\n<p>ANDROID_HOME path 설정</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#mac에서 설정 </span><br><span class=\"line\">#~.bash_profile 파일에 설정하기</span><br><span class=\"line\">export ANDROID_HOME=&quot;/Users/username/Library/Android/sdk&quot;</span><br><span class=\"line\">export ANDROID_TOOLS=&quot;/Users/username/Library/Android/sdk/tools&quot;</span><br><span class=\"line\">export ANDROID_PLATFORM_TOOLS=&quot;/Users/username/Library/Android/sdk/platform-tools&quot;</span><br><span class=\"line\">PATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS</span><br></pre></td></tr></table></figure>\n<p>android 가상 디바이스에서 실행하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 가상 디바이스 목록보기</span><br><span class=\"line\">adb devices</span><br><span class=\"line\"></span><br><span class=\"line\"># 결과목록</span><br><span class=\"line\"># emulator-5554   device</span><br><span class=\"line\"></span><br><span class=\"line\"># 특정 타겟에서 실행하기</span><br><span class=\"line\">ionic run android --target=emulator-5554</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.<br>Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우<br><a href=\"https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15</a><br>링크 참고해서 다운로드 받은 파일은 tools에 덮기</p>\n</blockquote>\n<blockquote>\n<p>에러[Error: android: Command failed with exit code 2]<br>에뮬레이터 실행해 놓고, 빌드하기<br>참고하기 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/android/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/android/</a></p>\n</blockquote>\n<h2 id=\"자주-사용하는-ionic-command\"><a href=\"#자주-사용하는-ionic-command\" class=\"headerlink\" title=\"자주 사용하는 ionic command\"></a>자주 사용하는 ionic command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#특정 플랫폼으로 실행하기</span><br><span class=\"line\">#실제 디바이스에 설치하기 (debugging &amp; developer mode 켜고 usb로 연결한 후 사용)</span><br><span class=\"line\">#https://developer.android.com/studio/run/device.html#developer-device-options</span><br><span class=\"line\">ionic cordova run android --device</span><br><span class=\"line\">ionic cordova build android --release</span><br><span class=\"line\">ionic cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\"># browser에서 실행하기</span><br><span class=\"line\">ionic serve </span><br><span class=\"line\">ionic run browser</span><br><span class=\"line\"></span><br><span class=\"line\">##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함</span><br><span class=\"line\">#(plaform에 browser 추가 필요)</span><br><span class=\"line\">#https://github.com/driftyco/ionic-native/issues/403</span><br><span class=\"line\"></span><br><span class=\"line\">#ionic serve runs your app as a website (meaning it doesn&apos;t have any Cordova capabilities)</span><br><span class=\"line\">#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities</span><br></pre></td></tr></table></figure>"},{"title":"ionic-make-android-jar","date":"2019-02-04T07:18:33.000Z","_content":"#### 릴리즈 버전 apk 파일 생성\n```\nionic cordova build android --release\n```\n\ncommand를 입력하면 아래처럼 빌드결과가 출력됩니다.\n\n```\n.\n.\n.\n:transformNative_libsWithMergeJniLibsForRelease\n:processReleaseJavaRes UP-TO-DATE\n:transformResourcesWithMergeJavaResForRelease\n:packageRelease\n:assembleRelease\n:cdvBuildRelease\n\nBUILD SUCCESSFUL    \n\nTotal time: 22.868 secs\nBuilt the following apk(s): \n        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk\n\n```\n\n#### keystore 파일만들기\nkeystore를 만들 때 password를 물어보는데, 잘 저장해 두세요. \n아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.\n(* keystore는 처음 한번만 만들어 사용합니다.)\n```\nkeytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000\n```\n\n#### apk sign하기\n위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)\n\n```\njarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**\n```\n\n#### apk align 하기\n```\n~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk\n```\n\n***최종 아웃풋 파일인 `android-release-aligned.apk`를 마켓에 업로드할 수 있습니다.***\n","source":"_posts/ionic/ionic-make-android-jar.md","raw":"---\ntitle: ionic-make-android-jar\ndate: 2019-02-04 16:18:33\ntags:\n- mobile\n- ionic\n- android\ncategories:\n- ionic\n---\n#### 릴리즈 버전 apk 파일 생성\n```\nionic cordova build android --release\n```\n\ncommand를 입력하면 아래처럼 빌드결과가 출력됩니다.\n\n```\n.\n.\n.\n:transformNative_libsWithMergeJniLibsForRelease\n:processReleaseJavaRes UP-TO-DATE\n:transformResourcesWithMergeJavaResForRelease\n:packageRelease\n:assembleRelease\n:cdvBuildRelease\n\nBUILD SUCCESSFUL    \n\nTotal time: 22.868 secs\nBuilt the following apk(s): \n        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk\n\n```\n\n#### keystore 파일만들기\nkeystore를 만들 때 password를 물어보는데, 잘 저장해 두세요. \n아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.\n(* keystore는 처음 한번만 만들어 사용합니다.)\n```\nkeytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000\n```\n\n#### apk sign하기\n위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)\n\n```\njarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**\n```\n\n#### apk align 하기\n```\n~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk\n```\n\n***최종 아웃풋 파일인 `android-release-aligned.apk`를 마켓에 업로드할 수 있습니다.***\n","slug":"ionic/ionic-make-android-jar","published":1,"updated":"2019-02-04T07:21:28.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzqjd903001fy8uhcr3qav21","content":"<h4 id=\"릴리즈-버전-apk-파일-생성\"><a href=\"#릴리즈-버전-apk-파일-생성\" class=\"headerlink\" title=\"릴리즈 버전 apk 파일 생성\"></a>릴리즈 버전 apk 파일 생성</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic cordova build android --release</span><br></pre></td></tr></table></figure>\n<p>command를 입력하면 아래처럼 빌드결과가 출력됩니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">:transformNative_libsWithMergeJniLibsForRelease</span><br><span class=\"line\">:processReleaseJavaRes UP-TO-DATE</span><br><span class=\"line\">:transformResourcesWithMergeJavaResForRelease</span><br><span class=\"line\">:packageRelease</span><br><span class=\"line\">:assembleRelease</span><br><span class=\"line\">:cdvBuildRelease</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD SUCCESSFUL    </span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 22.868 secs</span><br><span class=\"line\">Built the following apk(s): </span><br><span class=\"line\">        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk</span><br></pre></td></tr></table></figure>\n<h4 id=\"keystore-파일만들기\"><a href=\"#keystore-파일만들기\" class=\"headerlink\" title=\"keystore 파일만들기\"></a>keystore 파일만들기</h4><p>keystore를 만들 때 password를 물어보는데, 잘 저장해 두세요.<br>아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.<br>(* keystore는 처음 한번만 만들어 사용합니다.)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"apk-sign하기\"><a href=\"#apk-sign하기\" class=\"headerlink\" title=\"apk sign하기\"></a>apk sign하기</h4><p>위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**</span><br></pre></td></tr></table></figure>\n<h4 id=\"apk-align-하기\"><a href=\"#apk-align-하기\" class=\"headerlink\" title=\"apk align 하기\"></a>apk align 하기</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk</span><br></pre></td></tr></table></figure>\n<p><strong><em>최종 아웃풋 파일인 <code>android-release-aligned.apk</code>를 마켓에 업로드할 수 있습니다.</em></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"릴리즈-버전-apk-파일-생성\"><a href=\"#릴리즈-버전-apk-파일-생성\" class=\"headerlink\" title=\"릴리즈 버전 apk 파일 생성\"></a>릴리즈 버전 apk 파일 생성</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic cordova build android --release</span><br></pre></td></tr></table></figure>\n<p>command를 입력하면 아래처럼 빌드결과가 출력됩니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">:transformNative_libsWithMergeJniLibsForRelease</span><br><span class=\"line\">:processReleaseJavaRes UP-TO-DATE</span><br><span class=\"line\">:transformResourcesWithMergeJavaResForRelease</span><br><span class=\"line\">:packageRelease</span><br><span class=\"line\">:assembleRelease</span><br><span class=\"line\">:cdvBuildRelease</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD SUCCESSFUL    </span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 22.868 secs</span><br><span class=\"line\">Built the following apk(s): </span><br><span class=\"line\">        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk</span><br></pre></td></tr></table></figure>\n<h4 id=\"keystore-파일만들기\"><a href=\"#keystore-파일만들기\" class=\"headerlink\" title=\"keystore 파일만들기\"></a>keystore 파일만들기</h4><p>keystore를 만들 때 password를 물어보는데, 잘 저장해 두세요.<br>아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.<br>(* keystore는 처음 한번만 만들어 사용합니다.)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"apk-sign하기\"><a href=\"#apk-sign하기\" class=\"headerlink\" title=\"apk sign하기\"></a>apk sign하기</h4><p>위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**</span><br></pre></td></tr></table></figure>\n<h4 id=\"apk-align-하기\"><a href=\"#apk-align-하기\" class=\"headerlink\" title=\"apk align 하기\"></a>apk align 하기</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk</span><br></pre></td></tr></table></figure>\n<p><strong><em>최종 아웃풋 파일인 <code>android-release-aligned.apk</code>를 마켓에 업로드할 수 있습니다.</em></strong></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjzqjd8uy0000y8uhzvcekkrs","category_id":"cjzqjd8v70004y8uh4zpgn7q8","_id":"cjzqjd8vn000fy8uhqw9c30rz"},{"post_id":"cjzqjd8va0006y8uhlkvqjzib","category_id":"cjzqjd8vj000by8uh8pjd4b1n","_id":"cjzqjd8vp000jy8uh8bl7sukr"},{"post_id":"cjzqjd8z6000ly8uh6o9xs31m","category_id":"cjzqjd8zc000py8uhp50a3t6f","_id":"cjzqjd8zs0011y8uht7q06uj7"},{"post_id":"cjzqjd8za000ny8uh8k806l2r","category_id":"cjzqjd8zc000py8uhp50a3t6f","_id":"cjzqjd8zv0015y8uhdnce53mi"},{"post_id":"cjzqjd8zd000ry8uheqen94ul","category_id":"cjzqjd8zs0010y8uhp6qtcqur","_id":"cjzqjd901001cy8uhav4dstm6"},{"post_id":"cjzqjd8zg000ty8uhzyc2zvki","category_id":"cjzqjd8zs0010y8uhp6qtcqur","_id":"cjzqjd904001hy8uhnwglqkui"},{"post_id":"cjzqjd903001fy8uhcr3qav21","category_id":"cjzqjd901001by8uh7gsengml","_id":"cjzqjd906001ky8uhs77p6c3k"},{"post_id":"cjzqjd8zj000vy8uhbtp500ov","category_id":"cjzqjd901001by8uh7gsengml","_id":"cjzqjd908001ny8uh4rtg7hku"},{"post_id":"cjzqjd8zp000yy8uhs8a1p7hn","category_id":"cjzqjd8zs0010y8uhp6qtcqur","_id":"cjzqjd90a001ry8uh9gh1x57q"},{"post_id":"cjzqjd8zr000zy8uh7ny0crf7","category_id":"cjzqjd901001by8uh7gsengml","_id":"cjzqjd90c001vy8uh7mbo98ls"},{"post_id":"cjzqjd8zt0013y8uhdepsx5zm","category_id":"cjzqjd901001by8uh7gsengml","_id":"cjzqjd90d001xy8uhtdf4kc2c"},{"post_id":"cjzqjd8zu0014y8uhn4ndoabq","category_id":"cjzqjd90b001uy8uhc19u0u55","_id":"cjzqjd90f0021y8uhda52cwgg"},{"post_id":"cjzqjd8zy0018y8uhs9krzgqy","category_id":"cjzqjd90b001uy8uhc19u0u55","_id":"cjzqjd90g0023y8uhpd5ofzf5"},{"post_id":"cjzqjd900001ay8uh5pmeg5jd","category_id":"cjzqjd901001by8uh7gsengml","_id":"cjzqjd90n0026y8uhj6ixa06x"}],"PostTag":[{"post_id":"cjzqjd8uy0000y8uhzvcekkrs","tag_id":"cjzqjd8v90005y8uh5p3joyln","_id":"cjzqjd8vo000hy8uhd5iq3a9r"},{"post_id":"cjzqjd8uy0000y8uhzvcekkrs","tag_id":"cjzqjd8vj000cy8uhfi2ia5qx","_id":"cjzqjd8vp000iy8uhdmrjcbd3"},{"post_id":"cjzqjd8va0006y8uhlkvqjzib","tag_id":"cjzqjd8vn000gy8uh2ytqgbw2","_id":"cjzqjd8vp000ky8uhae42q5y1"},{"post_id":"cjzqjd8z6000ly8uh6o9xs31m","tag_id":"cjzqjd8zd000qy8uhmbnc6zhq","_id":"cjzqjd8zz0019y8uhig1r33ux"},{"post_id":"cjzqjd8z6000ly8uh6o9xs31m","tag_id":"cjzqjd8zm000xy8uht3e8tov0","_id":"cjzqjd902001dy8uhf91dtg5t"},{"post_id":"cjzqjd8z6000ly8uh6o9xs31m","tag_id":"cjzqjd8zt0012y8uhd0h4wszc","_id":"cjzqjd904001gy8uhzm4h2ztn"},{"post_id":"cjzqjd8za000ny8uh8k806l2r","tag_id":"cjzqjd8zd000qy8uhmbnc6zhq","_id":"cjzqjd908001oy8uhtnhdptnh"},{"post_id":"cjzqjd8za000ny8uh8k806l2r","tag_id":"cjzqjd8zm000xy8uht3e8tov0","_id":"cjzqjd909001py8uhw8zqnkda"},{"post_id":"cjzqjd8za000ny8uh8k806l2r","tag_id":"cjzqjd8zt0012y8uhd0h4wszc","_id":"cjzqjd90b001ty8uhckfjk6q5"},{"post_id":"cjzqjd8zd000ry8uheqen94ul","tag_id":"cjzqjd907001my8uhirkx2vpe","_id":"cjzqjd90n0025y8uhazvxa9w7"},{"post_id":"cjzqjd8zd000ry8uheqen94ul","tag_id":"cjzqjd90a001sy8uhaxjhxfhp","_id":"cjzqjd90o0027y8uhbchr0ykb"},{"post_id":"cjzqjd8zd000ry8uheqen94ul","tag_id":"cjzqjd90c001wy8uhxktbkayt","_id":"cjzqjd90p0029y8uhjh9du101"},{"post_id":"cjzqjd8zd000ry8uheqen94ul","tag_id":"cjzqjd90e001zy8uhw5xi5tpi","_id":"cjzqjd90p002ay8uhdiu4ktg8"},{"post_id":"cjzqjd8zd000ry8uheqen94ul","tag_id":"cjzqjd90g0022y8uh8npfx028","_id":"cjzqjd90q002cy8uhmqoxyb32"},{"post_id":"cjzqjd8zg000ty8uhzyc2zvki","tag_id":"cjzqjd907001my8uhirkx2vpe","_id":"cjzqjd90s002gy8uhx7byewzu"},{"post_id":"cjzqjd8zg000ty8uhzyc2zvki","tag_id":"cjzqjd90a001sy8uhaxjhxfhp","_id":"cjzqjd90t002hy8uh8hk2zwcd"},{"post_id":"cjzqjd8zg000ty8uhzyc2zvki","tag_id":"cjzqjd90c001wy8uhxktbkayt","_id":"cjzqjd90u002jy8uh9yoi8u79"},{"post_id":"cjzqjd8zg000ty8uhzyc2zvki","tag_id":"cjzqjd90e001zy8uhw5xi5tpi","_id":"cjzqjd90u002ky8uh4wn4ydrg"},{"post_id":"cjzqjd8zg000ty8uhzyc2zvki","tag_id":"cjzqjd90g0022y8uh8npfx028","_id":"cjzqjd90v002my8uhgl0vl1pu"},{"post_id":"cjzqjd8zj000vy8uhbtp500ov","tag_id":"cjzqjd8v90005y8uh5p3joyln","_id":"cjzqjd90w002ny8uhok5sjaam"},{"post_id":"cjzqjd8zj000vy8uhbtp500ov","tag_id":"cjzqjd90s002fy8uhc3e6rin6","_id":"cjzqjd90w002py8uhhqaxpl5x"},{"post_id":"cjzqjd8zj000vy8uhbtp500ov","tag_id":"cjzqjd90t002iy8uhwq8wsm2m","_id":"cjzqjd90x002qy8uhshnw18mm"},{"post_id":"cjzqjd8zp000yy8uhs8a1p7hn","tag_id":"cjzqjd907001my8uhirkx2vpe","_id":"cjzqjd912002vy8uhcim8nqh8"},{"post_id":"cjzqjd8zp000yy8uhs8a1p7hn","tag_id":"cjzqjd90a001sy8uhaxjhxfhp","_id":"cjzqjd912002wy8uhx4n1hkn9"},{"post_id":"cjzqjd8zp000yy8uhs8a1p7hn","tag_id":"cjzqjd90c001wy8uhxktbkayt","_id":"cjzqjd913002yy8uh8im3jndw"},{"post_id":"cjzqjd8zp000yy8uhs8a1p7hn","tag_id":"cjzqjd90z002sy8uh1lsib024","_id":"cjzqjd913002zy8uhiwrokvpd"},{"post_id":"cjzqjd8zp000yy8uhs8a1p7hn","tag_id":"cjzqjd910002ty8uhfyvhnp41","_id":"cjzqjd9140031y8uhzm7kc9rl"},{"post_id":"cjzqjd8zr000zy8uh7ny0crf7","tag_id":"cjzqjd8v90005y8uh5p3joyln","_id":"cjzqjd9160033y8uhqiqa50ym"},{"post_id":"cjzqjd8zr000zy8uh7ny0crf7","tag_id":"cjzqjd90s002fy8uhc3e6rin6","_id":"cjzqjd9160034y8uhmwbjpt0a"},{"post_id":"cjzqjd8zr000zy8uh7ny0crf7","tag_id":"cjzqjd913002xy8uh0f4js19t","_id":"cjzqjd9170036y8uh2gd8cm9j"},{"post_id":"cjzqjd8zr000zy8uh7ny0crf7","tag_id":"cjzqjd9140030y8uh5u720ht6","_id":"cjzqjd9170037y8uhvn6gapca"},{"post_id":"cjzqjd8zt0013y8uhdepsx5zm","tag_id":"cjzqjd8v90005y8uh5p3joyln","_id":"cjzqjd9180039y8uh5jvpzl51"},{"post_id":"cjzqjd8zt0013y8uhdepsx5zm","tag_id":"cjzqjd90s002fy8uhc3e6rin6","_id":"cjzqjd919003ay8uhgurzdymw"},{"post_id":"cjzqjd8zu0014y8uhn4ndoabq","tag_id":"cjzqjd9160035y8uhx1ove4nk","_id":"cjzqjd91b003ey8uhunldc5xs"},{"post_id":"cjzqjd8zu0014y8uhn4ndoabq","tag_id":"cjzqjd9180038y8uhqoy5w4ft","_id":"cjzqjd91b003fy8uh040uq9ox"},{"post_id":"cjzqjd8zu0014y8uhn4ndoabq","tag_id":"cjzqjd919003by8uhm5hfpiy2","_id":"cjzqjd91c003hy8uhsve3wl0h"},{"post_id":"cjzqjd8zu0014y8uhn4ndoabq","tag_id":"cjzqjd91a003cy8uhd7wzaixj","_id":"cjzqjd91d003iy8uh52s23wi7"},{"post_id":"cjzqjd8zy0018y8uhs9krzgqy","tag_id":"cjzqjd9160035y8uhx1ove4nk","_id":"cjzqjd91f003ly8uhx21fa1hf"},{"post_id":"cjzqjd8zy0018y8uhs9krzgqy","tag_id":"cjzqjd91c003gy8uhueduoa31","_id":"cjzqjd91g003my8uhlmn4aqv8"},{"post_id":"cjzqjd8zy0018y8uhs9krzgqy","tag_id":"cjzqjd91d003jy8uhycb6zgc8","_id":"cjzqjd91h003oy8uhga2hi6n4"},{"post_id":"cjzqjd900001ay8uh5pmeg5jd","tag_id":"cjzqjd8v90005y8uh5p3joyln","_id":"cjzqjd91i003py8uhbaumu6jw"},{"post_id":"cjzqjd900001ay8uh5pmeg5jd","tag_id":"cjzqjd90s002fy8uhc3e6rin6","_id":"cjzqjd91j003ry8uh6tk60cky"},{"post_id":"cjzqjd903001fy8uhcr3qav21","tag_id":"cjzqjd8v90005y8uh5p3joyln","_id":"cjzqjd91j003sy8uhrmtpfrni"},{"post_id":"cjzqjd903001fy8uhcr3qav21","tag_id":"cjzqjd90s002fy8uhc3e6rin6","_id":"cjzqjd91k003ty8uhj26z6i8f"},{"post_id":"cjzqjd903001fy8uhcr3qav21","tag_id":"cjzqjd913002xy8uh0f4js19t","_id":"cjzqjd91k003uy8uhgzbu6h08"}],"Tag":[{"name":"mobile","_id":"cjzqjd8v90005y8uh5p3joyln"},{"name":"flutter","_id":"cjzqjd8vj000cy8uhfi2ia5qx"},{"name":"markdown","_id":"cjzqjd8vn000gy8uh2ytqgbw2"},{"name":"aws","_id":"cjzqjd8zd000qy8uhmbnc6zhq"},{"name":"lambda","_id":"cjzqjd8zm000xy8uht3e8tov0"},{"name":"claudiajs","_id":"cjzqjd8zt0012y8uhd0h4wszc"},{"name":"docker","_id":"cjzqjd907001my8uhirkx2vpe"},{"name":"container","_id":"cjzqjd90a001sy8uhaxjhxfhp"},{"name":"swarm","_id":"cjzqjd90c001wy8uhxktbkayt"},{"name":"redis","_id":"cjzqjd90e001zy8uhw5xi5tpi"},{"name":"sentinel","_id":"cjzqjd90g0022y8uh8npfx028"},{"name":"ionic","_id":"cjzqjd90s002fy8uhc3e6rin6"},{"name":"angular","_id":"cjzqjd90t002iy8uhwq8wsm2m"},{"name":"docker compose","_id":"cjzqjd90z002sy8uh1lsib024"},{"name":"vagrant","_id":"cjzqjd910002ty8uhfyvhnp41"},{"name":"android","_id":"cjzqjd913002xy8uh0f4js19t"},{"name":"play store","_id":"cjzqjd9140030y8uh5u720ht6"},{"name":"nodejs","_id":"cjzqjd9160035y8uhx1ove4nk"},{"name":"express","_id":"cjzqjd9180038y8uhqoy5w4ft"},{"name":"passport","_id":"cjzqjd919003by8uhm5hfpiy2"},{"name":"authentication","_id":"cjzqjd91a003cy8uhd7wzaixj"},{"name":"npm","_id":"cjzqjd91c003gy8uhueduoa31"},{"name":"nexus","_id":"cjzqjd91d003jy8uhycb6zgc8"}]}}