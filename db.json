{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/flutter/new_flutter_prj.png","path":"images/flutter/new_flutter_prj.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/images/ionic/deal_list.webp","path":"images/ionic/deal_list.webp","modified":0,"renderable":0},{"_id":"source/images/flutter/created_flutter_app.png","path":"images/flutter/created_flutter_app.png","modified":0,"renderable":0},{"_id":"source/images/ionic/folder_structure.png","path":"images/ionic/folder_structure.png","modified":0,"renderable":0},{"_id":"source/images/ionic/play_store_menu.png","path":"images/ionic/play_store_menu.png","modified":0,"renderable":0},{"_id":"source/images/ionic/p2p_statistics.webp","path":"images/ionic/p2p_statistics.webp","modified":0,"renderable":0},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"source/images/flutter/virtual_device.png","path":"images/flutter/virtual_device.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"source/images/ionic/play_store.png","path":"images/ionic/play_store.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"source/images/ionic/ios_setting.png","path":"images/ionic/ios_setting.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"source/images/jenkins/1.png","path":"images/jenkins/1.png","modified":0,"renderable":0},{"_id":"source/about/i_want_what_you_have.jpg","path":"about/i_want_what_you_have.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1546690546207},{"_id":"themes/next/.all-contributorsrc","hash":"0ca0200bb5cba4cd157f2cb74703c4cb4c29cda5","modified":1546690546203},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1546690546205},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1546690546208},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1546690546208},{"_id":"themes/next/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1546690546218},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1546690546220},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1546690546222},{"_id":"themes/next/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1546690546223},{"_id":"themes/next/README.md","hash":"5cc097c71ba6e99aaf4b19955a4df3951879d8c9","modified":1546690546224},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1546690546228},{"_id":"themes/next/_config.yml","hash":"a3bc0bb38e692aab975cf37cb9c10a664a1b74a7","modified":1546690546225},{"_id":"themes/next/bower.json","hash":"edbe7db4e39af86bb3163df5f0ab87cc0b420479","modified":1546690546227},{"_id":"themes/next/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1546690546260},{"_id":"themes/next/package.json","hash":"0a6b9a8d9ccf52a5941ce4ec28d5b490adbd9970","modified":1546690546406},{"_id":"source/_posts/claudiajs-get-started.md","hash":"4ba00b8661831fb32d82b81859029c451b1adab4","modified":1547904545700},{"_id":"source/_posts/claudiajs-rest-api.md","hash":"26d9bce4907425a9e7f58915231b503e430f9071","modified":1547904545688},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1546349549642},{"_id":"source/_posts/ionic-app-play-store-registration.md","hash":"b3ec00de108b7338f838675283ceb7ac7b6b9a7d","modified":1549264888175},{"_id":"source/_posts/flutter.md","hash":"e313e92fb5899c2098bbdb44d2f9ffaaa6771bb7","modified":1547903779611},{"_id":"source/_posts/ionic-get-started.md","hash":"27c8ce08bfc6c40c63443c4c00559aa9c406dc08","modified":1549264397959},{"_id":"source/_posts/ionic-make-android-jar.md","hash":"608ca6e5f2a5ba8bf55a267fd3b925df43f143a7","modified":1549264888166},{"_id":"source/_posts/ionic-prototype-app-development.md","hash":"341c05660657f2b6046c2d50bcdf8acdf67275ac","modified":1549264888183},{"_id":"source/_posts/markdown.md","hash":"23cb7a397d00254d000eea3f12a947e989662123","modified":1547903779615},{"_id":"source/_posts/ionic-set-environment.md","hash":"c63fa8b528d6ce76b374f9d706e39b804b1d2988","modified":1549264901766},{"_id":"source/about/index.md","hash":"6ea1c1c84bc0b08aa6edc4685b739234f1591116","modified":1550391716750},{"_id":"source/admire/index.md","hash":"0a33867c171a66f58f9743b2168bfd7003f86f71","modified":1546349549648},{"_id":"source/categories/index.md","hash":"e551b870ed03bcfdeda7b4ed8f539ae484a7dc71","modified":1546349549651},{"_id":"source/tags/index.md","hash":"524b0f0cf6a5c0bb514c247756c4259dd451377f","modified":1546349549652},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"22f2ccc5522563b67c8663849fc1d6cbae93a8ff","modified":1546690546210},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"40b0fd9fdb8586fab98e23f713940e7a2f80e2f9","modified":1546690546211},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1546690546212},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"36201119490a04107c8179b10202548a9d0e5e60","modified":1546690546213},{"_id":"themes/next/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1546690546217},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1546690546217},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1546690546231},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1546690546233},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1546690546229},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1546690546232},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1546690546235},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"f2fd611a84dd6f9ed5395b63e187e29e9effbcd3","modified":1546690546237},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1546690546241},{"_id":"themes/next/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1546690546238},{"_id":"themes/next/docs/MATH.md","hash":"0540cd9c961b07931af9f38a83bc9a0f90cd5291","modified":1546690546240},{"_id":"themes/next/layout/_layout.swig","hash":"34476a17f8c12c9f094a6cc59208c5af6dd89202","modified":1546690546286},{"_id":"themes/next/layout/archive.swig","hash":"4b53070008775ecfd03953bd1b4adfcb0fabcaac","modified":1546690546397},{"_id":"themes/next/layout/category.swig","hash":"f0e3338bfa5efb205d2c28e635e9611f1fff3b55","modified":1546690546398},{"_id":"themes/next/layout/index.swig","hash":"bdcc9f57adef49706b16b107791cacecbc23c1dc","modified":1546690546400},{"_id":"themes/next/layout/page.swig","hash":"22a4ce71857a871b6fd474ec28fc80f736c45185","modified":1546690546401},{"_id":"themes/next/layout/post.swig","hash":"0554f42f90f4a524666c2b520be30b689c1d6a87","modified":1546690546402},{"_id":"themes/next/layout/schedule.swig","hash":"e79f43df0e9a6cf48bbf00882de48c5a58080247","modified":1546690546404},{"_id":"themes/next/layout/tag.swig","hash":"7cda2822e50b9fee9848a6b81e6c2d1aca830aeb","modified":1546690546405},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1546690546263},{"_id":"themes/next/languages/en.yml","hash":"5d0e944d83d50bb2b7254662f05367973a85ef45","modified":1546690546264},{"_id":"themes/next/languages/de.yml","hash":"f1b2f4ad4c987e24834cc1af2e9e704fdb2bef76","modified":1546690546261},{"_id":"themes/next/languages/fr.yml","hash":"b786cefe0ddb3f59abef6919af45cf7f2929e7e3","modified":1546690546265},{"_id":"themes/next/languages/it.yml","hash":"9fc7e074b14adf5858d4d7f23e7cbaedbc17d8bb","modified":1546690546267},{"_id":"themes/next/languages/id.yml","hash":"c388e82599c417db0dd120a718e2aebc77d9fa3e","modified":1546690546266},{"_id":"themes/next/languages/ja.yml","hash":"53f925fd096dfebce921007bf54a95881da3a07e","modified":1546690546269},{"_id":"themes/next/languages/ko.yml","hash":"e13f380b32f58f2949ae3ded0203c040d1d60f65","modified":1546690546271},{"_id":"themes/next/languages/nl.yml","hash":"0b72cfcaaa0d760301e45f07a153d8913011dd34","modified":1546690546272},{"_id":"themes/next/languages/ru.yml","hash":"d2f31d19b2fd550a96b2b7d4695143bd9cc3f272","modified":1546690546275},{"_id":"themes/next/languages/pt-BR.yml","hash":"77577eb28d40053822254f86aef068b6cd4866af","modified":1546690546273},{"_id":"themes/next/languages/tr.yml","hash":"a7e93f212f7faaac0c747daa7dfa4ad9ffef310b","modified":1546690546276},{"_id":"themes/next/languages/pt.yml","hash":"cb3811900092596b43c440ae4c4c46e4939561df","modified":1546690546274},{"_id":"themes/next/languages/vi.yml","hash":"2085f4c9083186e61c6517a24de17246e67adf97","modified":1546690546277},{"_id":"themes/next/languages/zh-CN.yml","hash":"f38e41a4ccadf0a623b873bb3f7caae3776738a7","modified":1546690546278},{"_id":"themes/next/languages/zh-HK.yml","hash":"c8b8460e9d91ec3ebf0f64f677df29c26edc2488","modified":1546690546279},{"_id":"themes/next/languages/zh-TW.yml","hash":"4ae17650e457a1544a2080eaf87b23b5c935ce1a","modified":1546690546280},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1546690546443},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1546690546430},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1546690546825},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1546690546831},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1546690546828},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546629},{"_id":"source/_posts/nodejs/nodejs-passport.md","hash":"ae0d89aba21480c299621c6c2fc739597c00bd3e","modified":1550395912545},{"_id":"source/images/flutter/new_flutter_prj.png","hash":"93fc1df64813067400d08edeeb8191f32c8f353d","modified":1528461954836},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1546690546244},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1546690546242},{"_id":"themes/next/docs/ru/README.md","hash":"caaad965f9d54f82382c934f44a507d37a863fa3","modified":1546690546245},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1546690546248},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"6ea741f380dc3e90661d12db7e115a94b77643a4","modified":1546690546250},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1546690546246},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1546690546249},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1546690546252},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1546690546254},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"7214fcd1b5830e62b3ac0836ad2d1b0fa391ae12","modified":1546690546255},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1546690546282},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"69d73e86d8f7d2deafc436df84713a1425704d8a","modified":1546690546256},{"_id":"themes/next/docs/zh-CN/README.md","hash":"0e6652be1b6bca87479f2601ff89105def200b4c","modified":1546690546257},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1546690546258},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546690546283},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546690546284},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"4b48fdbfe3bf41ddeda4ff74c1ff17ab9f15c14e","modified":1546690546299},{"_id":"themes/next/layout/_partials/comments.swig","hash":"f1e25d53d76f898d280d0422d037e646d11f342b","modified":1546690546300},{"_id":"themes/next/layout/_partials/footer.swig","hash":"6d56acdcdc12ebca9c1d90f8a2b52ad17aafca6e","modified":1546690546303},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"206cbd6ac9ca6a219a8516f59beae25b3c770199","modified":1546690546315},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1546690546316},{"_id":"themes/next/layout/_partials/post-copyright.swig","hash":"55de88525c05af6053524c78ef4b42b46c3bfb6d","modified":1546690546317},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"32b1f74e6a144133ce3a60cd06dbef50d8286919","modified":1546690546291},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"e8dfb86eb62b9c2bc1435d6d1afa95d3b4c7b931","modified":1546690546292},{"_id":"themes/next/layout/_macro/post.swig","hash":"cbc5abd9a7caa3b280387d06519c9a74af5f6ecc","modified":1547903779620},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6e7d0af24b4d52d168a4eb0fb29bffa69621395","modified":1546690546295},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"7a9b687087793bf5e218cbc345214f927fa5601a","modified":1546690546297},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"be4904c682934bdda4a406f4c24f487b34047c09","modified":1546690546296},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"ed62ea83d3f2c9db2ea57bf23a7d765ed82504c2","modified":1546690546361},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"c62c37474c8de78cf34e54c6219b503ec28d9815","modified":1546690546373},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"53861f78a1fb52e96a43cf6909e1530dcf6cbff8","modified":1546690546374},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"20704846a29d72b24f6e446a6c22b10cf50a624b","modified":1546690546375},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"debba9b7110f635204a15df148194d4c2fd2668b","modified":1546690546380},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"ccf0035086e14dcefa24c2907301edf4c37d5448","modified":1546690546381},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"3bdd2ec6c75a2c3f62c55e7e43162c4802722edb","modified":1546690546382},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1546690546383},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"a174d4a0c9188f9c4a2652f49bfa7a60ad0a83e3","modified":1546690546386},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"27fb1d81151b9b79683e488579df19eee7e654d6","modified":1546690546330},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1546690546384},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"f544e21883d249d5a341c684c97bd25831008f07","modified":1546690546331},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"f8c7e729ad6e72b4c705a2c5d5041589c2b4cc52","modified":1546690546332},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"92ffb13ef1f6075f77f41b43ca04aaa0e9e65c10","modified":1546690546341},{"_id":"themes/next/source/css/main.styl","hash":"2a62e2a11e9cdcc69e538d856d6f9ce228a07c93","modified":1546690546628},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1546690546631},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1546690546640},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1546690546635},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1546690546644},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1546690546633},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1546690546651},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1546690546661},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1546690546663},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1546690546647},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546690546666},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1546690546659},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1546690546656},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546690546672},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1546690546670},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1546690546665},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1546690546674},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1546690546677},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"3db90c52bc8af57c6fa4a9dbdc524e1ecdc8b7b1","modified":1546690546421},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cdb6152582313268d970ffeef99b4a8a7850f034","modified":1546690546416},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1546690546680},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1546690546450},{"_id":"themes/next/scripts/tags/button.js","hash":"510f3711a9c9d3e2a844250647d90e8359e7d130","modified":1546690546447},{"_id":"themes/next/scripts/tags/exturl.js","hash":"e9dab948e6327b22b4fc0c66cf97f6600a444dd5","modified":1546690546455},{"_id":"themes/next/scripts/tags/full-image.js","hash":"ef2c2985a3edb9f69740740c5bc42d4b692c86fd","modified":1546690546458},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1546690546465},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"aface11629970a5c4ee38aaa15550d2caee59560","modified":1546690546462},{"_id":"themes/next/scripts/tags/label.js","hash":"bb502616bfabe85de5de903074ec6afe627f8413","modified":1546690546467},{"_id":"themes/next/scripts/tags/note.js","hash":"bd3310a5890bded1bda9ba3ad6f98ee44ecb101a","modified":1546690546470},{"_id":"themes/next/scripts/tags/tabs.js","hash":"2d257e26718d4011509fd6f530d2ea37e50e3e66","modified":1546690546475},{"_id":"source/images/ionic/deal_list.webp","hash":"fab22ff65bb3718ea2eed47327714dba4bf5057d","modified":1526121943170},{"_id":"source/images/flutter/created_flutter_app.png","hash":"58e559a758b882e6a176cd435caa6bd061d14c2a","modified":1528462658575},{"_id":"source/images/ionic/folder_structure.png","hash":"dcf28a52ca938b027ccaafbaa0bf7bdaa069db08","modified":1526121943172},{"_id":"source/images/ionic/play_store_menu.png","hash":"85c9be11515099c71034c5119695e5e5c4c1f8bc","modified":1526121943184},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546337},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546338},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546578},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546578},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546581},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546623},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546690546626},{"_id":"source/images/ionic/p2p_statistics.webp","hash":"985a58f6667e81df11abda1b96c9010403e869a8","modified":1526121943179},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"09109a5c5a301e7cc5e3c7aec32b0164739fc7d4","modified":1546690546308},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"19050627bc23b0b2c2e65e7248c0f88468eb8ea5","modified":1546690546309},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"0b8349710caf9691741a457aa746add35245048e","modified":1546690546307},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1546690546310},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1546690546306},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"3f11ae8e9084f39628cd2006931d39a2069b9dd6","modified":1546690546314},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"f3ae3168801304af3d80ec3b84264e1d4201cb89","modified":1546690546311},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"f6454c452b2e90a8c760321bce7e3dc6119b71fa","modified":1546690546319},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1546690546321},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1546690546323},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1546690546324},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1546690546326},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1546690546289},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1546690546327},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1546690546328},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"ef791a725ee7292a5207a629dbcae16022a6d068","modified":1546690546290},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1546690546345},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1546690546347},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1546690546344},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1546690546350},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"1ce5fa218a44cf6e620583e9013e0b674dd6a989","modified":1546690546348},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1546690546349},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"8ab040fccba41675bc835973515530af8a51f8bd","modified":1546690546351},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"cfc932c5db04fef64cc56d3ba0b8ddf3a15a63bd","modified":1546690546352},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"d461dfe853e5317f62e8551f9d8338c66a9935e7","modified":1546690546354},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"39928f358dd13d9fc1a4641800e57be157ecd815","modified":1546690546356},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"bd8382d4f12df207ed52f75f6e5fb06527970167","modified":1546690546357},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1546690546363},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1546690546358},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1546690546359},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1546690546360},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2440f1e66cb8e39cc2bacfd783fb6fe904a628e9","modified":1546690546364},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"080a3a30c65e9e97782b8c56a866ba4204247cc8","modified":1546690546366},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"b98e8acb635beeaa929dab41c8cc5e519b9609b0","modified":1546690546369},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1546690546368},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"d05e70a416963023ee1978e4168d58bcfd956ed3","modified":1546690546372},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c49a3b10b2f2f64a7ac41fa3d436fd2c8d31cca8","modified":1546690546370},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"860de4ce6fccc516d2f779a4b600a4214d8c18e2","modified":1546690546378},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"30e9e55d9af2ced6e6b156a042026a8b480f0ab0","modified":1546690546377},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1546690546392},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"6fec78f40913a284b38ffe48fc8c78e23efa8e27","modified":1546690546379},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1546690546395},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"71c897f9b107dd0de1b7f649633cf583c206a9db","modified":1546690546393},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1546690546396},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1546690546336},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1546690546340},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"580e9d9c4d8783ee6200d845ae16c98979bf1ea3","modified":1546690546334},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1546690546577},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1546690546580},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"d1deb849e697cfb6258b8ab7bfb47e219210ccd9","modified":1546690546581},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1546690546576},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"8d6cf29f63c90364f4d3c336f7c9bb794b4c46cc","modified":1546690546620},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1546690546622},{"_id":"themes/next/source/css/_variables/base.styl","hash":"e27a1034b0cd9821bab094565e9aa9bb80c6fa3e","modified":1546690546625},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"72927abd51d3a607a6ba32cf882390792b34e834","modified":1546690546624},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1546690546804},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1546690546815},{"_id":"themes/next/scripts/filters/after_post_render/exturl.js","hash":"899b5a5e80e2bf441b7c40f24123f26a5097b8de","modified":1546690546413},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1546690546692},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1546690546822},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"c7e2a588b679d46379124141bb2f30bc2f3210e2","modified":1546690546695},{"_id":"themes/next/source/js/src/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1546690546687},{"_id":"themes/next/source/js/src/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1546690546698},{"_id":"themes/next/source/js/src/motion.js","hash":"4c7f94e499743f4cc958f6cd1260a93d765d3051","modified":1546690546708},{"_id":"themes/next/source/js/src/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1546690546712},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1546690546727},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1546690546723},{"_id":"source/images/flutter/virtual_device.png","hash":"9328d41f8a6518026819e111c21ea774f8cc25f9","modified":1528463574281},{"_id":"themes/next/source/js/src/utils.js","hash":"406145e8eda9f0cec4f7a09b7c1f9247aa24e46e","modified":1546690546732},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1546690546702},{"_id":"source/images/ionic/play_store.png","hash":"efba53df109c7f5a315021569fd3f8f62635e979","modified":1526121943182},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1546690546760},{"_id":"source/images/ionic/ios_setting.png","hash":"c5012e5980888eee2d80c5148ccb25fe5938791f","modified":1526121943177},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6e076b5e183eedf425a445e99851f938789c3194","modified":1546690546390},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1546690546391},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1546690546480},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1546690546482},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"1fd0650a8e5bff2c7146c810b04b3b88ee1f670e","modified":1546690546479},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1546690546483},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1546690546481},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1546690546541},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1546690546508},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"fbb6be577529c750ef7c872fe7abdc7ab0faf0f8","modified":1546690546563},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"df72d012a51e0c705aa14c68cffd689a312f7250","modified":1546690546565},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"ab775f23ad475efb25376b5aad752ae8b56cfd8c","modified":1546690546568},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1546690546566},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1546690546571},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1546690546572},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1546690546587},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"60179df0e5c9f7c2e9fda046040536c5d8b02f65","modified":1546690546573},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"8e67eea73e9346f51ef26ecb35f67a1f5f672dcd","modified":1546690546584},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1546690546589},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1546690546588},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"a80782a6eb3b40da2e14251da49069aff3115d8a","modified":1546690546591},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa6c00fdaf8f0ca3b690a5a556671745fb67e2c9","modified":1546690546592},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"2ccb9bdc309b7c1ef183a3dbb0a4621bec54a328","modified":1546690546594},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546690546593},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1546690546610},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ccf5a4761cb0ce451b5e994cfabf8769248a45c1","modified":1546690546611},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"11fcaaf7524445a194801e1048ea2fb84b316414","modified":1546690546613},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9f125e2b46ac4542c600fa514b66daf2f58f4c07","modified":1546690546615},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1546690546614},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"be72740313a9a0477b8a22f62e4c8ffa6d23a2e5","modified":1546690546616},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1546690546617},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1546690546600},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1546690546601},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546690546605},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4ed12bf17eeb7cd4f22dd01fdd486cda68d169a8","modified":1546690546603},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1546690546606},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"e185d1bb2f5805db2bddaf9b0ed1e689f95bcd13","modified":1546690546719},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1546690546792},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1546690546496},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7dd247c8869fdefb5a007045d00f3ef8ceecf300","modified":1546690546485},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1546690546498},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"3f3d2a43d1a326bad25b633c8ec9ddd87867224c","modified":1546690546488},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1546690546490},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1546690546491},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"5a3b94bf978a9259d0a3a66bdfa8d7aa336a7934","modified":1546690546497},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1ec3102ee8f5b8cc0877da1fd109d37470401e7b","modified":1546690546492},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1546690546494},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1546690546493},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"cdd55b143453b0ca8bfabc9843abe9b4f85fb516","modified":1546690546500},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"630be616447a982413030e561bbd3a80ac14b120","modified":1546690546501},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1546690546503},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1546690546505},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1546690546506},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"ef588bc56eaa5b84296e28f4c2c36d9ea8b3b8c3","modified":1546690546507},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1546690546530},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"41858f2dfd34a57d0a2016b1bce08efb61943b7a","modified":1546690546532},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"00a504620c454287111dc0ace64c989e1ff97f54","modified":1546690546531},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1546690546533},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1546690546534},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1546690546535},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9e05a2232faabb41bcebb51d545d897a76f077da","modified":1546690546537},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1546690546510},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"94d76e6da600a36d80e2470326ebb6b3be447ccb","modified":1546690546539},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1546690546540},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1546690546538},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1546690546514},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"fc94dd09b4245143b452d6cf2fc4c12134d99d6d","modified":1546690546513},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3241c9ae85ca11b6c4e125ac471aa4342ba1ce9c","modified":1546690546511},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"317c9ceda655e9dc373ce8e7b71d20b794fce9a4","modified":1546690546515},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1546690546516},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"330c8884efb5612e7eb03986d87d29e8b0651974","modified":1546690546517},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1546690546518},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1546690546520},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ff50a32ae6fea5fcdf2939dc9b01e1eb76cc73f0","modified":1546690546522},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1546690546523},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"539fc0880b2e035e8316d5d4b423703195c1b7ba","modified":1546690546525},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1546690546524},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5c3141d58970a0614896b6a62fd7a8a8caf4e401","modified":1546690546527},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1546690546526},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1546690546543},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"2e36956c5f8802f703c7ce3893d16323a0e09d4c","modified":1546690546528},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1546690546544},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1546690546546},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1546690546545},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1546690546547},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1546690546548},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1546690546549},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"f1640253cbbf71d0c04c34c25bd61045894f98bc","modified":1546690546550},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"f4d8144c22544bdb89787c14ab9d39578dae4b7c","modified":1546690546552},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1546690546554},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"a01484e350ad5fc9b1fdfbfafb2ddd9687ad4d20","modified":1546690546555},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1546690546556},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1546690546557},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1546690546558},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1546690546559},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"84d844ff296fb7c8c8bec8296cdf82af40299fdb","modified":1546690546561},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"acfdd76b1c90d2e384affb3d0006a39b524609d2","modified":1546690546560},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546690546598},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1546690546596},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546690546608},{"_id":"source/images/jenkins/1.png","hash":"c5fa45241d6b1cf226350e12e2ba35f9f6f26425","modified":1526121943167},{"_id":"source/images/about/i_want_what_you_have.jpg","hash":"8ee7b845b60143308c72b28fe6e88fd571c4647e","modified":1491118683000},{"_id":"source/_posts/cloudiajs/claudiajs-get-started.md","hash":"4ba00b8661831fb32d82b81859029c451b1adab4","modified":1547904545700},{"_id":"source/_posts/cloudiajs/claudiajs-rest-api.md","hash":"26d9bce4907425a9e7f58915231b503e430f9071","modified":1547904545688},{"_id":"source/_posts/ionic/ionic-get-started.md","hash":"27c8ce08bfc6c40c63443c4c00559aa9c406dc08","modified":1549264397959},{"_id":"source/_posts/ionic/ionic-app-play-store-registration.md","hash":"b3ec00de108b7338f838675283ceb7ac7b6b9a7d","modified":1549264888175},{"_id":"source/_posts/ionic/ionic-make-android-jar.md","hash":"608ca6e5f2a5ba8bf55a267fd3b925df43f143a7","modified":1549264888166},{"_id":"source/_posts/ionic/ionic-prototype-app-development.md","hash":"341c05660657f2b6046c2d50bcdf8acdf67275ac","modified":1549264888183},{"_id":"source/_posts/ionic/ionic-set-environment.md","hash":"c63fa8b528d6ce76b374f9d706e39b804b1d2988","modified":1549264901766},{"_id":"source/about/i_want_what_you_have.jpg","hash":"8ee7b845b60143308c72b28fe6e88fd571c4647e","modified":1491118683000},{"_id":"public/admire/index.html","hash":"02f083e73937e2e29a4cf5875c440bbb2bd56fbf","modified":1550395729836},{"_id":"public/about/index.html","hash":"31773e3b19782bc31bbee13a56654ae1129f283e","modified":1550395729909},{"_id":"public/categories/index.html","hash":"e37ff578912002dcd7eec0eb5f8bf8b643f0e8c5","modified":1550395729909},{"_id":"public/tags/index.html","hash":"8d4467fc0f21465c3d5eb22d17e682d7e15027da","modified":1550395729909},{"_id":"public/archives/2019/02/index.html","hash":"47b3b07c3c43d19c5dedba1e973ca244941583f6","modified":1550395729909},{"_id":"public/archives/2019/01/index.html","hash":"bfcde432d175614cb91fb9b36eb3af8d3754d5a1","modified":1550395729909},{"_id":"public/2019/01/12/markdown/index.html","hash":"e6237952a8b2536b0dc79dcaa8e491b6dd203e6d","modified":1550395729912},{"_id":"public/2019/01/18/flutter/index.html","hash":"dab8cc2e1e662a9045cb45498e13e13f84e6c866","modified":1550395729912},{"_id":"public/2019/01/01/hello-world/index.html","hash":"e7d593a12f1af915e5d9fc583b68cb1d26a1b9b1","modified":1550395729912},{"_id":"public/archives/index.html","hash":"ec8202b662ae6030f3ddf34360ce0cf04d51d3e0","modified":1550395729912},{"_id":"public/archives/2019/index.html","hash":"d88fb53058fa5f90654f2adf6c7242a100cfdf54","modified":1550395729912},{"_id":"public/index.html","hash":"2353f06ce5146072848237c203a604161ee875e6","modified":1550395924772},{"_id":"public/page/2/index.html","hash":"e90b14751c7b16344a063df2a31ff9188d114a88","modified":1550395729912},{"_id":"public/page/3/index.html","hash":"9ac16795bbf6a6d8e2306b3195266181c50fc008","modified":1550395729912},{"_id":"public/page/4/index.html","hash":"c962063e7b2a4a76edda46ed10bfdbfd3829395a","modified":1550395729912},{"_id":"public/page/5/index.html","hash":"02983e2376313024a3aac3bdb620d1c305921afc","modified":1550395729912},{"_id":"public/2019/02/17/nodejs/nodejs-passport/index.html","hash":"3e4e2a14fb31ac14bc229ed7c39dfe2c25da5df3","modified":1550395924772},{"_id":"public/archives/page/2/index.html","hash":"5944ba2f99fa3040e1374a6f1eb78a48d889458b","modified":1550395729909},{"_id":"public/archives/2019/page/2/index.html","hash":"6f4a4e6b8965d6a30cab13900ec260b8c9afc766","modified":1550395729909},{"_id":"public/page/6/index.html","hash":"3762c9f0aa23c496c344800cab46ef89d34e36dc","modified":1550395729909},{"_id":"public/tags/lambda/index.html","hash":"df841ca555101a76a30369d6f7bb4c8e967f2a3b","modified":1550395729910},{"_id":"public/tags/aws/index.html","hash":"efef88e9d7dc46842db3439a7ef99854acf88cb6","modified":1550395729910},{"_id":"public/tags/mobile/index.html","hash":"dc8d5eec4b20fb9f9867663f1e7e5a9892995445","modified":1550395729910},{"_id":"public/tags/claudiajs/index.html","hash":"dee452d80cbf0f5fc7a789a64a4f379895523366","modified":1550395729910},{"_id":"public/tags/ionic/index.html","hash":"d04680f26ba71ab66c940a9fa600c18457b6937e","modified":1550395729910},{"_id":"public/tags/android/index.html","hash":"76ed8323ac30ff506817784f8d6ee92900277828","modified":1550395729910},{"_id":"public/tags/play-store/index.html","hash":"a9dba8a8192af54ec46e42395208432309c0f602","modified":1550395729910},{"_id":"public/tags/angular/index.html","hash":"31097ab80c4752769b246a765ac380dda30d2ea8","modified":1550395729910},{"_id":"public/tags/flutter/index.html","hash":"c2d2d345267ae7a00cf720ad5f8a07fca7003d4a","modified":1550395729910},{"_id":"public/tags/markdown/index.html","hash":"f28cc8de70860062f5596a1fc30f1149e488a86d","modified":1550395729910},{"_id":"public/categories/claudiajs/index.html","hash":"2805d6630fab8f0705c446d7dda8b6cc87bfd726","modified":1550395729910},{"_id":"public/categories/ionic/index.html","hash":"a98f341bc6366bf44aee730324fc25facd461f84","modified":1550395729911},{"_id":"public/categories/flutter/index.html","hash":"cb9b70787979fb69bb78491e02481d2e037d9e63","modified":1550395729911},{"_id":"public/categories/markdown/index.html","hash":"7fea7657938565d7d8da1cb859aec402743cc8fa","modified":1550395729911},{"_id":"public/2019/02/04/ionic/ionic-set-environment/index.html","hash":"5b5caac60ff8b44ed17e683e81a5c150ea6c2ba8","modified":1550395729911},{"_id":"public/2019/02/04/ionic/ionic-make-android-jar/index.html","hash":"c0edf5f4fb883a071d5f9e308d266ab99a9eaff5","modified":1550395729911},{"_id":"public/2019/02/04/ionic/ionic-app-play-store-registration/index.html","hash":"6e2ef1e4efe97bcfe4bac47968336771f6a5810e","modified":1550395729911},{"_id":"public/2019/02/04/ionic/ionic-prototype-app-development/index.html","hash":"adf8244a807c5751a86fd337c2aaba2c717e2c65","modified":1550395729911},{"_id":"public/2019/02/04/ionic/ionic-get-started/index.html","hash":"860d0ce6cf512d25d544036b70d2273b812beb85","modified":1550395729911},{"_id":"public/2019/01/19/cloudiajs/claudiajs-rest-api/index.html","hash":"4472be6676e8e2c2b9b3f2a12a2c1547e61ed345","modified":1550395729911},{"_id":"public/2019/01/19/cloudiajs/claudiajs-get-started/index.html","hash":"613ab4d9bfcabf7708784ef01aef331d46c1b430","modified":1550395729911},{"_id":"public/categories/nodejs/index.html","hash":"ebe8d4cd79856f34285681e45e8471e298be8b86","modified":1550395729911},{"_id":"public/about/i_want_what_you_have.jpg","hash":"8ee7b845b60143308c72b28fe6e88fd571c4647e","modified":1550391740149},{"_id":"public/tags/nodejs/index.html","hash":"01bcf264f7589a0b6ef81e2715cd99ed55edef80","modified":1550395729910},{"_id":"public/tags/passport/index.html","hash":"7b9c4a8a878061d2466a4de318a2871d709e77a2","modified":1550395729911},{"_id":"public/tags/express/index.html","hash":"ce73b8d1127c245819fe7548d08e6178d549147f","modified":1550395729910},{"_id":"public/tags/authentication/index.html","hash":"de57e6911cef860242a73d84e81ff589b1853141","modified":1550395729914}],"Category":[{"name":"claudiajs","_id":"cjs8mv9jz00046guhn2239r0l"},{"name":"ionic","_id":"cjs8mv9ki000f6guh26amnzzd"},{"name":"flutter","_id":"cjs8mv9ku000q6guhlkrh26l1"},{"name":"markdown","_id":"cjs8mv9ky000z6guhm1gdwhkh"},{"name":"nodejs","_id":"cjs8mv9rg00256guhgbz1u2ii"}],"Data":[],"Page":[{"title":"admire","comments":0,"date":"2018-12-29T01:45:37.000Z","_content":"","source":"admire/index.md","raw":"---\ntitle: admire\ncomments: false\ndate: 2018-12-29 10:45:37\n---\n","updated":"2019-01-01T13:32:29.648Z","path":"admire/index.html","layout":"page","_id":"cjs8mv9ju00016guhpxqvts4r","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2018-12-29T01:34:08.000Z","comments":0,"_content":"\n![](i_want_what_you_have.jpg \"i_want_what_you_have\")\n\nYou can see me on [Linkedin](https://www.linkedin.com/in/jiseob-kim/)🧐","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-12-29 10:34:08\ncomments: false\n---\n\n![](i_want_what_you_have.jpg \"i_want_what_you_have\")\n\nYou can see me on [Linkedin](https://www.linkedin.com/in/jiseob-kim/)🧐","updated":"2019-02-17T08:21:56.750Z","path":"about/index.html","_id":"cjs8mv9jx00036guh1f0pvsdy","layout":"page","content":"<p><img src=\"i_want_what_you_have.jpg\" alt=\"\" title=\"i_want_what_you_have\"></p>\n<p>You can see me on <a href=\"https://www.linkedin.com/in/jiseob-kim/\" target=\"_blank\" rel=\"noopener\">Linkedin</a>🧐</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"i_want_what_you_have.jpg\" alt=\"\" title=\"i_want_what_you_have\"></p>\n<p>You can see me on <a href=\"https://www.linkedin.com/in/jiseob-kim/\" target=\"_blank\" rel=\"noopener\">Linkedin</a>🧐</p>\n"},{"title":"categories","date":"2018-12-29T01:26:20.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-12-29 10:26:20\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-01-01T13:32:29.651Z","path":"categories/index.html","layout":"page","_id":"cjs8mv9k500076guhbt3p5ab7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-12-29T01:26:41.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-12-29 10:26:41\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-01-01T13:32:29.652Z","path":"tags/index.html","layout":"page","_id":"cjs8mv9k800096guhpgrbh2lw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-01-01T13:32:29.641Z","updated":"2019-01-01T13:32:29.642Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs8mv9jv00026guh08j8g01j","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"flutter","date":"2019-01-18T05:49:46.000Z","_content":"\n## flutter 설치하기 \n\nflutter는 windows, mac, linux에 설치할 수 있다.\n\n### 시스템 요구사항\n- windows 7 이상\n- 400mb 이상 disk\n- powershell 5.0 이상 / git 사용가능 상태\n\n### SDK 설치(https://flutter.io/setup-windows/)\n1. SDK 다운로드 받기\n2. 다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기\n3.  `flutter` 디렉토리에 있는 `flutter_console.bat`파일을 더블클릭해서 실행\n\n### 설정에 필요한 flutter 기본 command\n```jshelllanguage\n#setup 완료를 위해 필요한 디펜던시 확인하기\nflutter doctor\n#flutter 설정 확인하기\nflutter config\n```\n\n### 기타\n- flutter 업그레이드 하기 (https://flutter.io/upgrading/)\n- flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)\n  - 윈도우 환경설정 path에 `flutter\\bin;` 위치 추가하기\n  \n## android studio 설치\n\nIDE는 vs code, intellij, android studio를 지원한다. (https://flutter.io/get-started/editor/)\n\nandroid studio, flutter plugin 설치하기\n- file -> settings -> plugins, search flutter and install (dart plugin 같이 설치필요)\n\n\n## 프로젝트 생성하기 (android studio)\n\n1. flutter 프로젝트 생성\n![new flutter project](/images/flutter/new_flutter_prj.png \"create flutter project\")\n2. flutter application 선택 \n3. flutter sdk path 는 압축해제한 flutter 디렉토리 지정\n4. finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.\n![main.dart](/images/flutter/created_flutter_app.png \"created flutter\")\n\n## device 설정하기 (android studio)\n\n- flutter는 Android API 16이상 device가 필요합니다.\n- tools -> AVD Manager -> Create Virtual Device...\n- tools -> SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)\n- 가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.\n![virtual device](/images/flutter/virtual_device.png \"virtual device\")\n- command로 디바이스 확인하고 실행하기\n  - 디바이스 확인 : `flutter devices`\n  - 디바이스 실행 : `flutter run`\n\n## flutter package repository\nhttps://pub.dartlang.org/flutter/\n\n## flutter 공부하기 \n- free course : https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905","source":"_posts/flutter.md","raw":"---\ntitle: flutter\ndate: 2019-01-18 14:49:46\ntags:\n- mobile\n- flutter\ncategories:\n- flutter\n---\n\n## flutter 설치하기 \n\nflutter는 windows, mac, linux에 설치할 수 있다.\n\n### 시스템 요구사항\n- windows 7 이상\n- 400mb 이상 disk\n- powershell 5.0 이상 / git 사용가능 상태\n\n### SDK 설치(https://flutter.io/setup-windows/)\n1. SDK 다운로드 받기\n2. 다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기\n3.  `flutter` 디렉토리에 있는 `flutter_console.bat`파일을 더블클릭해서 실행\n\n### 설정에 필요한 flutter 기본 command\n```jshelllanguage\n#setup 완료를 위해 필요한 디펜던시 확인하기\nflutter doctor\n#flutter 설정 확인하기\nflutter config\n```\n\n### 기타\n- flutter 업그레이드 하기 (https://flutter.io/upgrading/)\n- flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)\n  - 윈도우 환경설정 path에 `flutter\\bin;` 위치 추가하기\n  \n## android studio 설치\n\nIDE는 vs code, intellij, android studio를 지원한다. (https://flutter.io/get-started/editor/)\n\nandroid studio, flutter plugin 설치하기\n- file -> settings -> plugins, search flutter and install (dart plugin 같이 설치필요)\n\n\n## 프로젝트 생성하기 (android studio)\n\n1. flutter 프로젝트 생성\n![new flutter project](/images/flutter/new_flutter_prj.png \"create flutter project\")\n2. flutter application 선택 \n3. flutter sdk path 는 압축해제한 flutter 디렉토리 지정\n4. finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.\n![main.dart](/images/flutter/created_flutter_app.png \"created flutter\")\n\n## device 설정하기 (android studio)\n\n- flutter는 Android API 16이상 device가 필요합니다.\n- tools -> AVD Manager -> Create Virtual Device...\n- tools -> SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)\n- 가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.\n![virtual device](/images/flutter/virtual_device.png \"virtual device\")\n- command로 디바이스 확인하고 실행하기\n  - 디바이스 확인 : `flutter devices`\n  - 디바이스 실행 : `flutter run`\n\n## flutter package repository\nhttps://pub.dartlang.org/flutter/\n\n## flutter 공부하기 \n- free course : https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905","slug":"flutter","published":1,"updated":"2019-01-19T13:16:19.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs8mv9kg000d6guhfthmmssr","content":"<h2 id=\"flutter-설치하기\"><a href=\"#flutter-설치하기\" class=\"headerlink\" title=\"flutter 설치하기\"></a>flutter 설치하기</h2><p>flutter는 windows, mac, linux에 설치할 수 있다.</p>\n<h3 id=\"시스템-요구사항\"><a href=\"#시스템-요구사항\" class=\"headerlink\" title=\"시스템 요구사항\"></a>시스템 요구사항</h3><ul>\n<li>windows 7 이상</li>\n<li>400mb 이상 disk</li>\n<li>powershell 5.0 이상 / git 사용가능 상태</li>\n</ul>\n<h3 id=\"SDK-설치-https-flutter-io-setup-windows\"><a href=\"#SDK-설치-https-flutter-io-setup-windows\" class=\"headerlink\" title=\"SDK 설치(https://flutter.io/setup-windows/)\"></a>SDK 설치(<a href=\"https://flutter.io/setup-windows/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/setup-windows/</a>)</h3><ol>\n<li>SDK 다운로드 받기</li>\n<li>다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기</li>\n<li><code>flutter</code> 디렉토리에 있는 <code>flutter_console.bat</code>파일을 더블클릭해서 실행</li>\n</ol>\n<h3 id=\"설정에-필요한-flutter-기본-command\"><a href=\"#설정에-필요한-flutter-기본-command\" class=\"headerlink\" title=\"설정에 필요한 flutter 기본 command\"></a>설정에 필요한 flutter 기본 command</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#setup 완료를 위해 필요한 디펜던시 확인하기</span><br><span class=\"line\">flutter doctor</span><br><span class=\"line\">#flutter 설정 확인하기</span><br><span class=\"line\">flutter config</span><br></pre></td></tr></table></figure>\n<h3 id=\"기타\"><a href=\"#기타\" class=\"headerlink\" title=\"기타\"></a>기타</h3><ul>\n<li>flutter 업그레이드 하기 (<a href=\"https://flutter.io/upgrading/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/upgrading/</a>)</li>\n<li>flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)<ul>\n<li>윈도우 환경설정 path에 <code>flutter\\bin;</code> 위치 추가하기</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"android-studio-설치\"><a href=\"#android-studio-설치\" class=\"headerlink\" title=\"android studio 설치\"></a>android studio 설치</h2><p>IDE는 vs code, intellij, android studio를 지원한다. (<a href=\"https://flutter.io/get-started/editor/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/get-started/editor/</a>)</p>\n<p>android studio, flutter plugin 설치하기</p>\n<ul>\n<li>file -&gt; settings -&gt; plugins, search flutter and install (dart plugin 같이 설치필요)</li>\n</ul>\n<h2 id=\"프로젝트-생성하기-android-studio\"><a href=\"#프로젝트-생성하기-android-studio\" class=\"headerlink\" title=\"프로젝트 생성하기 (android studio)\"></a>프로젝트 생성하기 (android studio)</h2><ol>\n<li>flutter 프로젝트 생성<br><img src=\"/images/flutter/new_flutter_prj.png\" alt=\"new flutter project\" title=\"create flutter project\"></li>\n<li>flutter application 선택 </li>\n<li>flutter sdk path 는 압축해제한 flutter 디렉토리 지정</li>\n<li>finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.<br><img src=\"/images/flutter/created_flutter_app.png\" alt=\"main.dart\" title=\"created flutter\"></li>\n</ol>\n<h2 id=\"device-설정하기-android-studio\"><a href=\"#device-설정하기-android-studio\" class=\"headerlink\" title=\"device 설정하기 (android studio)\"></a>device 설정하기 (android studio)</h2><ul>\n<li>flutter는 Android API 16이상 device가 필요합니다.</li>\n<li>tools -&gt; AVD Manager -&gt; Create Virtual Device…</li>\n<li>tools -&gt; SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)</li>\n<li>가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.<br><img src=\"/images/flutter/virtual_device.png\" alt=\"virtual device\" title=\"virtual device\"></li>\n<li>command로 디바이스 확인하고 실행하기<ul>\n<li>디바이스 확인 : <code>flutter devices</code></li>\n<li>디바이스 실행 : <code>flutter run</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"flutter-package-repository\"><a href=\"#flutter-package-repository\" class=\"headerlink\" title=\"flutter package repository\"></a>flutter package repository</h2><p><a href=\"https://pub.dartlang.org/flutter/\" target=\"_blank\" rel=\"noopener\">https://pub.dartlang.org/flutter/</a></p>\n<h2 id=\"flutter-공부하기\"><a href=\"#flutter-공부하기\" class=\"headerlink\" title=\"flutter 공부하기\"></a>flutter 공부하기</h2><ul>\n<li>free course : <a href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\" target=\"_blank\" rel=\"noopener\">https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"flutter-설치하기\"><a href=\"#flutter-설치하기\" class=\"headerlink\" title=\"flutter 설치하기\"></a>flutter 설치하기</h2><p>flutter는 windows, mac, linux에 설치할 수 있다.</p>\n<h3 id=\"시스템-요구사항\"><a href=\"#시스템-요구사항\" class=\"headerlink\" title=\"시스템 요구사항\"></a>시스템 요구사항</h3><ul>\n<li>windows 7 이상</li>\n<li>400mb 이상 disk</li>\n<li>powershell 5.0 이상 / git 사용가능 상태</li>\n</ul>\n<h3 id=\"SDK-설치-https-flutter-io-setup-windows\"><a href=\"#SDK-설치-https-flutter-io-setup-windows\" class=\"headerlink\" title=\"SDK 설치(https://flutter.io/setup-windows/)\"></a>SDK 설치(<a href=\"https://flutter.io/setup-windows/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/setup-windows/</a>)</h3><ol>\n<li>SDK 다운로드 받기</li>\n<li>다운받은 zip파일의 압축을 풀고 적당한 path에 옮기기</li>\n<li><code>flutter</code> 디렉토리에 있는 <code>flutter_console.bat</code>파일을 더블클릭해서 실행</li>\n</ol>\n<h3 id=\"설정에-필요한-flutter-기본-command\"><a href=\"#설정에-필요한-flutter-기본-command\" class=\"headerlink\" title=\"설정에 필요한 flutter 기본 command\"></a>설정에 필요한 flutter 기본 command</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#setup 완료를 위해 필요한 디펜던시 확인하기</span><br><span class=\"line\">flutter doctor</span><br><span class=\"line\">#flutter 설정 확인하기</span><br><span class=\"line\">flutter config</span><br></pre></td></tr></table></figure>\n<h3 id=\"기타\"><a href=\"#기타\" class=\"headerlink\" title=\"기타\"></a>기타</h3><ul>\n<li>flutter 업그레이드 하기 (<a href=\"https://flutter.io/upgrading/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/upgrading/</a>)</li>\n<li>flutter path 설정하기 (일반적인 윈도우 프롬프트에서 flutter 커맨드를 사용하려면)<ul>\n<li>윈도우 환경설정 path에 <code>flutter\\bin;</code> 위치 추가하기</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"android-studio-설치\"><a href=\"#android-studio-설치\" class=\"headerlink\" title=\"android studio 설치\"></a>android studio 설치</h2><p>IDE는 vs code, intellij, android studio를 지원한다. (<a href=\"https://flutter.io/get-started/editor/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/get-started/editor/</a>)</p>\n<p>android studio, flutter plugin 설치하기</p>\n<ul>\n<li>file -&gt; settings -&gt; plugins, search flutter and install (dart plugin 같이 설치필요)</li>\n</ul>\n<h2 id=\"프로젝트-생성하기-android-studio\"><a href=\"#프로젝트-생성하기-android-studio\" class=\"headerlink\" title=\"프로젝트 생성하기 (android studio)\"></a>프로젝트 생성하기 (android studio)</h2><ol>\n<li>flutter 프로젝트 생성<br><img src=\"/images/flutter/new_flutter_prj.png\" alt=\"new flutter project\" title=\"create flutter project\"></li>\n<li>flutter application 선택 </li>\n<li>flutter sdk path 는 압축해제한 flutter 디렉토리 지정</li>\n<li>finish 하면 아래처럼 생성된 프로젝트를 확인할 수 있습니다.<br><img src=\"/images/flutter/created_flutter_app.png\" alt=\"main.dart\" title=\"created flutter\"></li>\n</ol>\n<h2 id=\"device-설정하기-android-studio\"><a href=\"#device-설정하기-android-studio\" class=\"headerlink\" title=\"device 설정하기 (android studio)\"></a>device 설정하기 (android studio)</h2><ul>\n<li>flutter는 Android API 16이상 device가 필요합니다.</li>\n<li>tools -&gt; AVD Manager -&gt; Create Virtual Device…</li>\n<li>tools -&gt; SDK Manager (생성한 device api에 맞는 sdk를 설치해야 합니다.)</li>\n<li>가상 기기를 실행하면 android studio 에서 프로젝트를 실행할 수 있습니다.<br><img src=\"/images/flutter/virtual_device.png\" alt=\"virtual device\" title=\"virtual device\"></li>\n<li>command로 디바이스 확인하고 실행하기<ul>\n<li>디바이스 확인 : <code>flutter devices</code></li>\n<li>디바이스 실행 : <code>flutter run</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"flutter-package-repository\"><a href=\"#flutter-package-repository\" class=\"headerlink\" title=\"flutter package repository\"></a>flutter package repository</h2><p><a href=\"https://pub.dartlang.org/flutter/\" target=\"_blank\" rel=\"noopener\">https://pub.dartlang.org/flutter/</a></p>\n<h2 id=\"flutter-공부하기\"><a href=\"#flutter-공부하기\" class=\"headerlink\" title=\"flutter 공부하기\"></a>flutter 공부하기</h2><ul>\n<li>free course : <a href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\" target=\"_blank\" rel=\"noopener\">https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905</a></li>\n</ul>\n"},{"title":"how to use markdown","date":"2019-01-12T13:27:47.000Z","_content":"\nmarkdown으로 글쓰기\n\n### 제목을 지정해보자\n\n```\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n```\n\n### 링크 첨부하기\n\n```\n[Link1](https://j2yes.github.io/)\n\n[j2yess@gmail.com](mailto:j2yess@gmail.com)\n```\n> [Link1](https://j2yes.github.io/)\n\n> [j2yess@gmail.com](mailto:j2yess@gmail.com)\n\n### 이미지 첨부하기\n\n```\n![background](/images/jenkins/1.png \"Optional title\")\n```\n\n![background](/images/jenkins/1.png \"Optional title\")\n\n### 파일(PDF) 첨부하기\n\n```\n[다운로드](/assets/mydoc.pdf)\n```\n\n> [다운로드](/assets/mydoc.pdf)\n\n### 코드(GIST) 첨부하기\n\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n\n### 코드블럭 첨부하기\n\n```sbtshell\nps -ef | grep oh\n```\n\n```javascript\nconsole.log('oh');\n```\n\n```java\nstatic void main(String args[]) {\n    \n}\n```\n    \n\n### 수평선으로 구분하기\n\n```\n---\nor\n***\nor\n___\n```\n\n### 번호 없는 리스트\n\n```\n+ Java\n- Python\n* Ruby\n```\n\n+ Java\n- Python\n* Ruby\n\n### 번호 있는 리스트\n\n```\n1. 첫번째\n2. 두번째\n3. 세번째\n```\n\n1. 첫번째\n2. 두번째\n3. 세번째\n\n### 체크박스 \n\n```\n- [ ] 리스트1\n- [X] 리스트2\n```\n\n- [ ] 리스트1\n- [X] 리스트1\n\n### 텍스트에 효과주기\n\n```\n**두껍게**\n~~취소선~~\n```\n\n기본글씨\n\n**두껍게**\n\n~~취소선~~\n\n### \\` 사용하기\n\n```\n\\`\n```\n\n> \\`\n\n### 음영효과주기\n\n```\n`keyword`\n```\n\n`keyword`\n\n\n### Table\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n\n### 참고사이트\n* https://sourceforge.net/p/collapse/wiki/markdown_syntax/\n* http://commonmark.org/help/tutorial/index.html\n* https://guides.github.com/features/mastering-markdown/\n* http://marxi.co/","source":"_posts/markdown.md","raw":"---\ntitle: how to use markdown\ndate: 2019-01-12 22:27:47\ntags:\n- markdown\ncategories:\n- markdown\n---\n\nmarkdown으로 글쓰기\n\n### 제목을 지정해보자\n\n```\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n```\n\n### 링크 첨부하기\n\n```\n[Link1](https://j2yes.github.io/)\n\n[j2yess@gmail.com](mailto:j2yess@gmail.com)\n```\n> [Link1](https://j2yes.github.io/)\n\n> [j2yess@gmail.com](mailto:j2yess@gmail.com)\n\n### 이미지 첨부하기\n\n```\n![background](/images/jenkins/1.png \"Optional title\")\n```\n\n![background](/images/jenkins/1.png \"Optional title\")\n\n### 파일(PDF) 첨부하기\n\n```\n[다운로드](/assets/mydoc.pdf)\n```\n\n> [다운로드](/assets/mydoc.pdf)\n\n### 코드(GIST) 첨부하기\n\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n```\n{% gist j2yes/3451d495ee5b9a601385 %}\n\n### 코드블럭 첨부하기\n\n```sbtshell\nps -ef | grep oh\n```\n\n```javascript\nconsole.log('oh');\n```\n\n```java\nstatic void main(String args[]) {\n    \n}\n```\n    \n\n### 수평선으로 구분하기\n\n```\n---\nor\n***\nor\n___\n```\n\n### 번호 없는 리스트\n\n```\n+ Java\n- Python\n* Ruby\n```\n\n+ Java\n- Python\n* Ruby\n\n### 번호 있는 리스트\n\n```\n1. 첫번째\n2. 두번째\n3. 세번째\n```\n\n1. 첫번째\n2. 두번째\n3. 세번째\n\n### 체크박스 \n\n```\n- [ ] 리스트1\n- [X] 리스트2\n```\n\n- [ ] 리스트1\n- [X] 리스트1\n\n### 텍스트에 효과주기\n\n```\n**두껍게**\n~~취소선~~\n```\n\n기본글씨\n\n**두껍게**\n\n~~취소선~~\n\n### \\` 사용하기\n\n```\n\\`\n```\n\n> \\`\n\n### 음영효과주기\n\n```\n`keyword`\n```\n\n`keyword`\n\n\n### Table\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n\n### 참고사이트\n* https://sourceforge.net/p/collapse/wiki/markdown_syntax/\n* http://commonmark.org/help/tutorial/index.html\n* https://guides.github.com/features/mastering-markdown/\n* http://marxi.co/","slug":"markdown","published":1,"updated":"2019-01-19T13:16:19.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs8mv9kr000n6guhzjdh4qmp","content":"<p>markdown으로 글쓰기</p>\n<h3 id=\"제목을-지정해보자\"><a href=\"#제목을-지정해보자\" class=\"headerlink\" title=\"제목을 지정해보자\"></a>제목을 지정해보자</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># H1</span><br><span class=\"line\">## H2</span><br><span class=\"line\">### H3</span><br><span class=\"line\">#### H4</span><br><span class=\"line\">##### H5</span><br><span class=\"line\">###### H6</span><br></pre></td></tr></table></figure>\n<h3 id=\"링크-첨부하기\"><a href=\"#링크-첨부하기\" class=\"headerlink\" title=\"링크 첨부하기\"></a>링크 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Link1](https://j2yes.github.io/)</span><br><span class=\"line\"></span><br><span class=\"line\">[j2yess@gmail.com](mailto:j2yess@gmail.com)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"https://j2yes.github.io/\">Link1</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"mailto:j2yess@gmail.com\" target=\"_blank\" rel=\"noopener\">j2yess@gmail.com</a></p>\n</blockquote>\n<h3 id=\"이미지-첨부하기\"><a href=\"#이미지-첨부하기\" class=\"headerlink\" title=\"이미지 첨부하기\"></a>이미지 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![background](/images/jenkins/1.png &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/jenkins/1.png\" alt=\"background\" title=\"Optional title\"></p>\n<h3 id=\"파일-PDF-첨부하기\"><a href=\"#파일-PDF-첨부하기\" class=\"headerlink\" title=\"파일(PDF) 첨부하기\"></a>파일(PDF) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[다운로드](/assets/mydoc.pdf)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"/assets/mydoc.pdf\">다운로드</a></p>\n</blockquote>\n<h3 id=\"코드-GIST-첨부하기\"><a href=\"#코드-GIST-첨부하기\" class=\"headerlink\" title=\"코드(GIST) 첨부하기\"></a>코드(GIST) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gist j2yes/3451d495ee5b9a601385 %&#125;</span><br></pre></td></tr></table></figure>\n<script src=\"//gist.github.com/j2yes/3451d495ee5b9a601385.js\"></script>\n<h3 id=\"코드블럭-첨부하기\"><a href=\"#코드블럭-첨부하기\" class=\"headerlink\" title=\"코드블럭 첨부하기\"></a>코드블럭 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep oh</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'oh'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"수평선으로-구분하기\"><a href=\"#수평선으로-구분하기\" class=\"headerlink\" title=\"수평선으로 구분하기\"></a>수평선으로 구분하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">or</span><br><span class=\"line\">***</span><br><span class=\"line\">or</span><br><span class=\"line\">___</span><br></pre></td></tr></table></figure>\n<h3 id=\"번호-없는-리스트\"><a href=\"#번호-없는-리스트\" class=\"headerlink\" title=\"번호 없는 리스트\"></a>번호 없는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ Java</span><br><span class=\"line\">- Python</span><br><span class=\"line\">* Ruby</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Java</li>\n</ul>\n<ul>\n<li>Python</li>\n</ul>\n<ul>\n<li>Ruby</li>\n</ul>\n<h3 id=\"번호-있는-리스트\"><a href=\"#번호-있는-리스트\" class=\"headerlink\" title=\"번호 있는 리스트\"></a>번호 있는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 첫번째</span><br><span class=\"line\">2. 두번째</span><br><span class=\"line\">3. 세번째</span><br></pre></td></tr></table></figure>\n<ol>\n<li>첫번째</li>\n<li>두번째</li>\n<li>세번째</li>\n</ol>\n<h3 id=\"체크박스\"><a href=\"#체크박스\" class=\"headerlink\" title=\"체크박스\"></a>체크박스</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- [ ] 리스트1</span><br><span class=\"line\">- [X] 리스트2</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 리스트1</li>\n<li>[X] 리스트1</li>\n</ul>\n<h3 id=\"텍스트에-효과주기\"><a href=\"#텍스트에-효과주기\" class=\"headerlink\" title=\"텍스트에 효과주기\"></a>텍스트에 효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**두껍게**</span><br><span class=\"line\">~~취소선~~</span><br></pre></td></tr></table></figure>\n<p>기본글씨</p>\n<p><strong>두껍게</strong></p>\n<p><del>취소선</del></p>\n<h3 id=\"사용하기\"><a href=\"#사용하기\" class=\"headerlink\" title=\"` 사용하기\"></a>` 사용하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\`</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>`</p>\n</blockquote>\n<h3 id=\"음영효과주기\"><a href=\"#음영효과주기\" class=\"headerlink\" title=\"음영효과주기\"></a>음영효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`keyword`</span><br></pre></td></tr></table></figure>\n<p><code>keyword</code></p>\n<h3 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Item</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Qty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Computer</td>\n<td style=\"text-align:right\">1600 USD</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Phone</td>\n<td style=\"text-align:right\">12 USD</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Pipe</td>\n<td style=\"text-align:right\">1 USD</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"참고사이트\"><a href=\"#참고사이트\" class=\"headerlink\" title=\"참고사이트\"></a>참고사이트</h3><ul>\n<li><a href=\"https://sourceforge.net/p/collapse/wiki/markdown_syntax/\" target=\"_blank\" rel=\"noopener\">https://sourceforge.net/p/collapse/wiki/markdown_syntax/</a></li>\n<li><a href=\"http://commonmark.org/help/tutorial/index.html\" target=\"_blank\" rel=\"noopener\">http://commonmark.org/help/tutorial/index.html</a></li>\n<li><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></li>\n<li><a href=\"http://marxi.co/\" target=\"_blank\" rel=\"noopener\">http://marxi.co/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>markdown으로 글쓰기</p>\n<h3 id=\"제목을-지정해보자\"><a href=\"#제목을-지정해보자\" class=\"headerlink\" title=\"제목을 지정해보자\"></a>제목을 지정해보자</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># H1</span><br><span class=\"line\">## H2</span><br><span class=\"line\">### H3</span><br><span class=\"line\">#### H4</span><br><span class=\"line\">##### H5</span><br><span class=\"line\">###### H6</span><br></pre></td></tr></table></figure>\n<h3 id=\"링크-첨부하기\"><a href=\"#링크-첨부하기\" class=\"headerlink\" title=\"링크 첨부하기\"></a>링크 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Link1](https://j2yes.github.io/)</span><br><span class=\"line\"></span><br><span class=\"line\">[j2yess@gmail.com](mailto:j2yess@gmail.com)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"https://j2yes.github.io/\">Link1</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"mailto:j2yess@gmail.com\" target=\"_blank\" rel=\"noopener\">j2yess@gmail.com</a></p>\n</blockquote>\n<h3 id=\"이미지-첨부하기\"><a href=\"#이미지-첨부하기\" class=\"headerlink\" title=\"이미지 첨부하기\"></a>이미지 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![background](/images/jenkins/1.png &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/jenkins/1.png\" alt=\"background\" title=\"Optional title\"></p>\n<h3 id=\"파일-PDF-첨부하기\"><a href=\"#파일-PDF-첨부하기\" class=\"headerlink\" title=\"파일(PDF) 첨부하기\"></a>파일(PDF) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[다운로드](/assets/mydoc.pdf)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"/assets/mydoc.pdf\">다운로드</a></p>\n</blockquote>\n<h3 id=\"코드-GIST-첨부하기\"><a href=\"#코드-GIST-첨부하기\" class=\"headerlink\" title=\"코드(GIST) 첨부하기\"></a>코드(GIST) 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gist j2yes/3451d495ee5b9a601385 %&#125;</span><br></pre></td></tr></table></figure>\n<script src=\"//gist.github.com/j2yes/3451d495ee5b9a601385.js\"></script>\n<h3 id=\"코드블럭-첨부하기\"><a href=\"#코드블럭-첨부하기\" class=\"headerlink\" title=\"코드블럭 첨부하기\"></a>코드블럭 첨부하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep oh</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'oh'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"수평선으로-구분하기\"><a href=\"#수평선으로-구분하기\" class=\"headerlink\" title=\"수평선으로 구분하기\"></a>수평선으로 구분하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">or</span><br><span class=\"line\">***</span><br><span class=\"line\">or</span><br><span class=\"line\">___</span><br></pre></td></tr></table></figure>\n<h3 id=\"번호-없는-리스트\"><a href=\"#번호-없는-리스트\" class=\"headerlink\" title=\"번호 없는 리스트\"></a>번호 없는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ Java</span><br><span class=\"line\">- Python</span><br><span class=\"line\">* Ruby</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Java</li>\n</ul>\n<ul>\n<li>Python</li>\n</ul>\n<ul>\n<li>Ruby</li>\n</ul>\n<h3 id=\"번호-있는-리스트\"><a href=\"#번호-있는-리스트\" class=\"headerlink\" title=\"번호 있는 리스트\"></a>번호 있는 리스트</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 첫번째</span><br><span class=\"line\">2. 두번째</span><br><span class=\"line\">3. 세번째</span><br></pre></td></tr></table></figure>\n<ol>\n<li>첫번째</li>\n<li>두번째</li>\n<li>세번째</li>\n</ol>\n<h3 id=\"체크박스\"><a href=\"#체크박스\" class=\"headerlink\" title=\"체크박스\"></a>체크박스</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- [ ] 리스트1</span><br><span class=\"line\">- [X] 리스트2</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 리스트1</li>\n<li>[X] 리스트1</li>\n</ul>\n<h3 id=\"텍스트에-효과주기\"><a href=\"#텍스트에-효과주기\" class=\"headerlink\" title=\"텍스트에 효과주기\"></a>텍스트에 효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**두껍게**</span><br><span class=\"line\">~~취소선~~</span><br></pre></td></tr></table></figure>\n<p>기본글씨</p>\n<p><strong>두껍게</strong></p>\n<p><del>취소선</del></p>\n<h3 id=\"사용하기\"><a href=\"#사용하기\" class=\"headerlink\" title=\"` 사용하기\"></a>` 사용하기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\`</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>`</p>\n</blockquote>\n<h3 id=\"음영효과주기\"><a href=\"#음영효과주기\" class=\"headerlink\" title=\"음영효과주기\"></a>음영효과주기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`keyword`</span><br></pre></td></tr></table></figure>\n<p><code>keyword</code></p>\n<h3 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Item</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Qty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Computer</td>\n<td style=\"text-align:right\">1600 USD</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Phone</td>\n<td style=\"text-align:right\">12 USD</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Pipe</td>\n<td style=\"text-align:right\">1 USD</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"참고사이트\"><a href=\"#참고사이트\" class=\"headerlink\" title=\"참고사이트\"></a>참고사이트</h3><ul>\n<li><a href=\"https://sourceforge.net/p/collapse/wiki/markdown_syntax/\" target=\"_blank\" rel=\"noopener\">https://sourceforge.net/p/collapse/wiki/markdown_syntax/</a></li>\n<li><a href=\"http://commonmark.org/help/tutorial/index.html\" target=\"_blank\" rel=\"noopener\">http://commonmark.org/help/tutorial/index.html</a></li>\n<li><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></li>\n<li><a href=\"http://marxi.co/\" target=\"_blank\" rel=\"noopener\">http://marxi.co/</a></li>\n</ul>\n"},{"title":"passport","date":"2019-02-17T08:11:42.000Z","_content":"\n## passport : http://www.passportjs.org/\n\n> Simple, unobtrusive authentication for Node.js\n\n패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.\n\n## local strategy\n\n외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.\n로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.\n\n## 사전작업 \n\n\n### 패스포트가 자동으로 생성해주는 함수 (변수)\n\n- req.user : 로그인한 사용자 정보\n- req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)\n- req.logout : 로그아웃 함수 (세션정보 비움)\n- req.isAuthenticated : 요청 사용자의 인증여부 확인\n\n### Session Storage 설정\n\n- express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)\n- memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)\n- session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)\n- response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음\n\n```javascript\nconst express = require('express') ;\nconst passport = require('passport'); \nconst session = require('express-session'); \nconst RedisStore = require('connect-redis')(session);\n \nconst app = express() ;\napp.use(session({ \n  store: new RedisStore({\n    url: config.redisStore.url\n  }),\n  secret: config.redisStore.secret,\n  //resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)\n  resave: false,\n  saveUninitialized: false\n}));\n//express 연결\napp.use(passport.initialize()); \n//영속적인 로그인 세션 관리 (deserialize)\napp.use(passport.session());\n```\n\n### passport 기본 함수 구현\n\n#### passport id & pwd 체크 \n\n```javascript\nconst passport = require('passport') \nconst LocalStrategy = require('passport-local').Strategy\n \nconst user = { \n  username: 'test-user',\n  password: 'test-password',\n  id: 1\n}\n \n//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) \npassport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'passwd'\n  },\n  function(username, password, done) {\n    //findUser는 실제로 database에서 user를 조회해야 함\n    findUser(username, function (err, user) {\n      if (err) {\n        return done(err)\n      }\n      //일차하는 user가 없는 경우 ( = 일차하는 id 없음 )\n      if (!user) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )\n      if (!user.validPassword(password)) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공\n      return done(null, user)\n    })\n  }\n))\n \n \n//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다\n//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.\n//done 함수는 인증 실패/성공여부를 포함하여 실행된다.\n//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.\n```\n\n#### user serialize\n\n```javascript\npassport.serializeUser(function(user, done) {\n    done(null, user);\n});\n\n// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음\n```\n\n#### user deserialize\n\n```javascript\npassport.deserializeUser(function(user, done) {\n    done(null, user);\n});\n\n// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함\n```\n\n#### authentication middleware\n\n```javascript\nfunction authenticationMiddleware () { \n  return function (req, res, next) {\n    if (req.isAuthenticated()) {\n      return next()\n    }\n    res.redirect('/')\n  }\n}\n```\n\n## login flow\n\nflow\n\n1. id 와 password를 post method로 login url로 요청\n2. login router에서 passport.authenticate 함수를 이용해 strategy를 선택\n3. 선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달\n4. serialize 를 통해 session에 user 정보 저장\n5. callback 함수안에서 req.logIn 함수 실행\n6. Set-Cookie 헤더에 세션키값을 저장하여  response\n7. session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장\n\ncode\n\n```javascript\napp.get('/login', function(req, res, next) {\n  passport.authenticate('local', function(err, user, info) {\n    if (err) { return next(err); }\n    if (!user) { return res.redirect('/login'); }\n    //passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장\n    req.logIn(user, function(err) {\n      if (err) { return next(err); }\n      return res.redirect('/users/' + user.username);\n    });\n  })(req, res, next);\n});\n\n// logout 함수로 req.user 를 삭제하고 관련 login session을 비움\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n```\n\n## resource authentication flow\n\nflow \n\n1. endpont로 request 보냄\n2. cookie이용해서 session 정보 조회\n3. session 정보 deserialize 해서 user 정보 얻기\n4. req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인\n5. 인증된 경우 / 인증되지 않은 경우에 따라 처리\n\ncode\n\n```javascript\nconst passport = require('passport')\napp.get('/resource', passport.authenticationMiddleware(), function(req, res){\n    res.render('resource', { title: 'passport example' });\n});\n```\n\n## 참조 링크\n\n- https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\n- https://github.com/passport/express-4.x-local-example/blob/master/server.js\n- https://scotch.io/tutorials/easy-node-authentication-setup-and-local\n- https://bcho.tistory.com/920","source":"_posts/nodejs/nodejs-passport.md","raw":"---\ntitle: passport\ndate: 2019-02-17 17:11:42\ntags:\n- nodejs\n- express\n- passport\n- authentication\ncategories:\n- nodejs\n---\n\n## passport : http://www.passportjs.org/\n\n> Simple, unobtrusive authentication for Node.js\n\n패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.\n\n## local strategy\n\n외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.\n로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.\n\n## 사전작업 \n\n\n### 패스포트가 자동으로 생성해주는 함수 (변수)\n\n- req.user : 로그인한 사용자 정보\n- req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)\n- req.logout : 로그아웃 함수 (세션정보 비움)\n- req.isAuthenticated : 요청 사용자의 인증여부 확인\n\n### Session Storage 설정\n\n- express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)\n- memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)\n- session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)\n- response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음\n\n```javascript\nconst express = require('express') ;\nconst passport = require('passport'); \nconst session = require('express-session'); \nconst RedisStore = require('connect-redis')(session);\n \nconst app = express() ;\napp.use(session({ \n  store: new RedisStore({\n    url: config.redisStore.url\n  }),\n  secret: config.redisStore.secret,\n  //resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)\n  resave: false,\n  saveUninitialized: false\n}));\n//express 연결\napp.use(passport.initialize()); \n//영속적인 로그인 세션 관리 (deserialize)\napp.use(passport.session());\n```\n\n### passport 기본 함수 구현\n\n#### passport id & pwd 체크 \n\n```javascript\nconst passport = require('passport') \nconst LocalStrategy = require('passport-local').Strategy\n \nconst user = { \n  username: 'test-user',\n  password: 'test-password',\n  id: 1\n}\n \n//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) \npassport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'passwd'\n  },\n  function(username, password, done) {\n    //findUser는 실제로 database에서 user를 조회해야 함\n    findUser(username, function (err, user) {\n      if (err) {\n        return done(err)\n      }\n      //일차하는 user가 없는 경우 ( = 일차하는 id 없음 )\n      if (!user) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )\n      if (!user.validPassword(password)) {\n        return done(null, false, { message: 'Incorrect user information.' });\n      }\n      //예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공\n      return done(null, user)\n    })\n  }\n))\n \n \n//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다\n//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.\n//done 함수는 인증 실패/성공여부를 포함하여 실행된다.\n//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.\n```\n\n#### user serialize\n\n```javascript\npassport.serializeUser(function(user, done) {\n    done(null, user);\n});\n\n// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음\n```\n\n#### user deserialize\n\n```javascript\npassport.deserializeUser(function(user, done) {\n    done(null, user);\n});\n\n// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함\n```\n\n#### authentication middleware\n\n```javascript\nfunction authenticationMiddleware () { \n  return function (req, res, next) {\n    if (req.isAuthenticated()) {\n      return next()\n    }\n    res.redirect('/')\n  }\n}\n```\n\n## login flow\n\nflow\n\n1. id 와 password를 post method로 login url로 요청\n2. login router에서 passport.authenticate 함수를 이용해 strategy를 선택\n3. 선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달\n4. serialize 를 통해 session에 user 정보 저장\n5. callback 함수안에서 req.logIn 함수 실행\n6. Set-Cookie 헤더에 세션키값을 저장하여  response\n7. session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장\n\ncode\n\n```javascript\napp.get('/login', function(req, res, next) {\n  passport.authenticate('local', function(err, user, info) {\n    if (err) { return next(err); }\n    if (!user) { return res.redirect('/login'); }\n    //passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장\n    req.logIn(user, function(err) {\n      if (err) { return next(err); }\n      return res.redirect('/users/' + user.username);\n    });\n  })(req, res, next);\n});\n\n// logout 함수로 req.user 를 삭제하고 관련 login session을 비움\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n```\n\n## resource authentication flow\n\nflow \n\n1. endpont로 request 보냄\n2. cookie이용해서 session 정보 조회\n3. session 정보 deserialize 해서 user 정보 얻기\n4. req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인\n5. 인증된 경우 / 인증되지 않은 경우에 따라 처리\n\ncode\n\n```javascript\nconst passport = require('passport')\napp.get('/resource', passport.authenticationMiddleware(), function(req, res){\n    res.render('resource', { title: 'passport example' });\n});\n```\n\n## 참조 링크\n\n- https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\n- https://github.com/passport/express-4.x-local-example/blob/master/server.js\n- https://scotch.io/tutorials/easy-node-authentication-setup-and-local\n- https://bcho.tistory.com/920","slug":"nodejs/nodejs-passport","published":1,"updated":"2019-02-17T09:31:52.545Z","_id":"cjs8mv9rd00246guh1knh7x67","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"passport-http-www-passportjs-org\"><a href=\"#passport-http-www-passportjs-org\" class=\"headerlink\" title=\"passport : http://www.passportjs.org/\"></a>passport : <a href=\"http://www.passportjs.org/\" target=\"_blank\" rel=\"noopener\">http://www.passportjs.org/</a></h2><blockquote>\n<p>Simple, unobtrusive authentication for Node.js</p>\n</blockquote>\n<p>패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.</p>\n<h2 id=\"local-strategy\"><a href=\"#local-strategy\" class=\"headerlink\" title=\"local strategy\"></a>local strategy</h2><p>외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.<br>로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.</p>\n<h2 id=\"사전작업\"><a href=\"#사전작업\" class=\"headerlink\" title=\"사전작업\"></a>사전작업</h2><h3 id=\"패스포트가-자동으로-생성해주는-함수-변수\"><a href=\"#패스포트가-자동으로-생성해주는-함수-변수\" class=\"headerlink\" title=\"패스포트가 자동으로 생성해주는 함수 (변수)\"></a>패스포트가 자동으로 생성해주는 함수 (변수)</h3><ul>\n<li>req.user : 로그인한 사용자 정보</li>\n<li>req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)</li>\n<li>req.logout : 로그아웃 함수 (세션정보 비움)</li>\n<li>req.isAuthenticated : 요청 사용자의 인증여부 확인</li>\n</ul>\n<h3 id=\"Session-Storage-설정\"><a href=\"#Session-Storage-설정\" class=\"headerlink\" title=\"Session Storage 설정\"></a>Session Storage 설정</h3><ul>\n<li>express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)</li>\n<li>memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)</li>\n<li>session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)</li>\n<li>response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>) ;</span><br><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">'express-session'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> RedisStore = <span class=\"built_in\">require</span>(<span class=\"string\">'connect-redis'</span>)(session);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express() ;</span><br><span class=\"line\">app.use(session(&#123; </span><br><span class=\"line\">  store: <span class=\"keyword\">new</span> RedisStore(&#123;</span><br><span class=\"line\">    url: config.redisStore.url</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  secret: config.redisStore.secret,</span><br><span class=\"line\">  <span class=\"comment\">//resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)</span></span><br><span class=\"line\">  resave: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;));</span><br><span class=\"line\"><span class=\"comment\">//express 연결</span></span><br><span class=\"line\">app.use(passport.initialize()); </span><br><span class=\"line\"><span class=\"comment\">//영속적인 로그인 세션 관리 (deserialize)</span></span><br><span class=\"line\">app.use(passport.session());</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport-기본-함수-구현\"><a href=\"#passport-기본-함수-구현\" class=\"headerlink\" title=\"passport 기본 함수 구현\"></a>passport 기본 함수 구현</h3><h4 id=\"passport-id-amp-pwd-체크\"><a href=\"#passport-id-amp-pwd-체크\" class=\"headerlink\" title=\"passport id &amp; pwd 체크\"></a>passport id &amp; pwd 체크</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>) </span><br><span class=\"line\"><span class=\"keyword\">const</span> LocalStrategy = <span class=\"built_in\">require</span>(<span class=\"string\">'passport-local'</span>).Strategy</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; </span><br><span class=\"line\">  username: <span class=\"string\">'test-user'</span>,</span><br><span class=\"line\">  password: <span class=\"string\">'test-password'</span>,</span><br><span class=\"line\">  id: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) </span></span><br><span class=\"line\">passport.use(<span class=\"keyword\">new</span> LocalStrategy(&#123;</span><br><span class=\"line\">    usernameField: <span class=\"string\">'email'</span>,</span><br><span class=\"line\">    passwordField: <span class=\"string\">'passwd'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">username, password, done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//findUser는 실제로 database에서 user를 조회해야 함</span></span><br><span class=\"line\">    findUser(username, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, user</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//일차하는 user가 없는 경우 ( = 일차하는 id 없음 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user.validPassword(password)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, user)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">))</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다</span></span><br><span class=\"line\"><span class=\"comment\">//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 인증 실패/성공여부를 포함하여 실행된다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-serialize\"><a href=\"#user-serialize\" class=\"headerlink\" title=\"user serialize\"></a>user serialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.serializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-deserialize\"><a href=\"#user-deserialize\" class=\"headerlink\" title=\"user deserialize\"></a>user deserialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.deserializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"authentication-middleware\"><a href=\"#authentication-middleware\" class=\"headerlink\" title=\"authentication middleware\"></a>authentication middleware</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">authenticationMiddleware</span> (<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (req.isAuthenticated()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> next()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res.redirect(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"login-flow\"><a href=\"#login-flow\" class=\"headerlink\" title=\"login flow\"></a>login flow</h2><p>flow</p>\n<ol>\n<li>id 와 password를 post method로 login url로 요청</li>\n<li>login router에서 passport.authenticate 함수를 이용해 strategy를 선택</li>\n<li>선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달</li>\n<li>serialize 를 통해 session에 user 정보 저장</li>\n<li>callback 함수안에서 req.logIn 함수 실행</li>\n<li>Set-Cookie 헤더에 세션키값을 저장하여  response</li>\n<li>session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">'/login'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  passport.authenticate(<span class=\"string\">'local'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, user, info</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/login'</span>); &#125;</span><br><span class=\"line\">    <span class=\"comment\">//passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장</span></span><br><span class=\"line\">    req.logIn(user, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/users/'</span> + user.username);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)(req, res, next);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// logout 함수로 req.user 를 삭제하고 관련 login session을 비움</span></span><br><span class=\"line\">app.get(<span class=\"string\">'/logout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">  req.logout();</span><br><span class=\"line\">  res.redirect(<span class=\"string\">'/'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"resource-authentication-flow\"><a href=\"#resource-authentication-flow\" class=\"headerlink\" title=\"resource authentication flow\"></a>resource authentication flow</h2><p>flow </p>\n<ol>\n<li>endpont로 request 보냄</li>\n<li>cookie이용해서 session 정보 조회</li>\n<li>session 정보 deserialize 해서 user 정보 얻기</li>\n<li>req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인</li>\n<li>인증된 경우 / 인증되지 않은 경우에 따라 처리</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>)</span><br><span class=\"line\">app.get(<span class=\"string\">'/resource'</span>, passport.authenticationMiddleware(), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">    res.render(<span class=\"string\">'resource'</span>, &#123; <span class=\"attr\">title</span>: <span class=\"string\">'passport example'</span> &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"참조-링크\"><a href=\"#참조-링크\" class=\"headerlink\" title=\"참조 링크\"></a>참조 링크</h2><ul>\n<li><a href=\"https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\" target=\"_blank\" rel=\"noopener\">https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/</a></li>\n<li><a href=\"https://github.com/passport/express-4.x-local-example/blob/master/server.js\" target=\"_blank\" rel=\"noopener\">https://github.com/passport/express-4.x-local-example/blob/master/server.js</a></li>\n<li><a href=\"https://scotch.io/tutorials/easy-node-authentication-setup-and-local\" target=\"_blank\" rel=\"noopener\">https://scotch.io/tutorials/easy-node-authentication-setup-and-local</a></li>\n<li><a href=\"https://bcho.tistory.com/920\" target=\"_blank\" rel=\"noopener\">https://bcho.tistory.com/920</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"passport-http-www-passportjs-org\"><a href=\"#passport-http-www-passportjs-org\" class=\"headerlink\" title=\"passport : http://www.passportjs.org/\"></a>passport : <a href=\"http://www.passportjs.org/\" target=\"_blank\" rel=\"noopener\">http://www.passportjs.org/</a></h2><blockquote>\n<p>Simple, unobtrusive authentication for Node.js</p>\n</blockquote>\n<p>패스포트는 인증을 위한 다양한 Strategy Package를 제공합니다. 아래 본문은 그 중 Local Strategy에 대해 설명합니다.</p>\n<h2 id=\"local-strategy\"><a href=\"#local-strategy\" class=\"headerlink\" title=\"local strategy\"></a>local strategy</h2><p>외부 시스템의 인증 연동없이 직접 구현하는 방식이며 사용자 상태 관리를 위해 세션을 사용합니다.<br>로그인, 리소스 호출에 대한 흐름을 정리하고 코드로 설명하겠습니다.</p>\n<h2 id=\"사전작업\"><a href=\"#사전작업\" class=\"headerlink\" title=\"사전작업\"></a>사전작업</h2><h3 id=\"패스포트가-자동으로-생성해주는-함수-변수\"><a href=\"#패스포트가-자동으로-생성해주는-함수-변수\" class=\"headerlink\" title=\"패스포트가 자동으로 생성해주는 함수 (변수)\"></a>패스포트가 자동으로 생성해주는 함수 (변수)</h3><ul>\n<li>req.user : 로그인한 사용자 정보</li>\n<li>req.login(=logIn) : 로그인 함수 (세션에 사용자 정보를 저장)</li>\n<li>req.logout : 로그아웃 함수 (세션정보 비움)</li>\n<li>req.isAuthenticated : 요청 사용자의 인증여부 확인</li>\n</ul>\n<h3 id=\"Session-Storage-설정\"><a href=\"#Session-Storage-설정\" class=\"headerlink\" title=\"Session Storage 설정\"></a>Session Storage 설정</h3><ul>\n<li>express 는 기본 session을 in-memory 방식으로 저장하기 때문에 memory leak 문제가 있음(production 환경에서 사용 X)</li>\n<li>memory leak 방지 등 몇 가지 목적으로 session-storage 사용 추천 (mysql, mongodb, redis 등 모두 사용 가능함)</li>\n<li>session 은 기본적으로 passport가 아닌 express에서 관리해주고 있음, passport에서 회원정보를 기본적으로 저장하는 req.user정보는 req.session.passport.user를 의미하고 response하는 시점에 세션정보를 갱신함(store를 따로 써도 자동으로 갱신해줌)</li>\n<li>response하는 시점에 session을 업데이트하기 때문에 문제가 발생하면 req.logIn을 이용해서 serialize를 명시적으로 해줄 수 있음</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>) ;</span><br><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">'express-session'</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> RedisStore = <span class=\"built_in\">require</span>(<span class=\"string\">'connect-redis'</span>)(session);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express() ;</span><br><span class=\"line\">app.use(session(&#123; </span><br><span class=\"line\">  store: <span class=\"keyword\">new</span> RedisStore(&#123;</span><br><span class=\"line\">    url: config.redisStore.url</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  secret: config.redisStore.secret,</span><br><span class=\"line\">  <span class=\"comment\">//resave false는 session이 갱신된 경우만 데이터를 업데이트하도록 함(만료시간값 갱신은 관련없음)</span></span><br><span class=\"line\">  resave: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;));</span><br><span class=\"line\"><span class=\"comment\">//express 연결</span></span><br><span class=\"line\">app.use(passport.initialize()); </span><br><span class=\"line\"><span class=\"comment\">//영속적인 로그인 세션 관리 (deserialize)</span></span><br><span class=\"line\">app.use(passport.session());</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport-기본-함수-구현\"><a href=\"#passport-기본-함수-구현\" class=\"headerlink\" title=\"passport 기본 함수 구현\"></a>passport 기본 함수 구현</h3><h4 id=\"passport-id-amp-pwd-체크\"><a href=\"#passport-id-amp-pwd-체크\" class=\"headerlink\" title=\"passport id &amp; pwd 체크\"></a>passport id &amp; pwd 체크</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>) </span><br><span class=\"line\"><span class=\"keyword\">const</span> LocalStrategy = <span class=\"built_in\">require</span>(<span class=\"string\">'passport-local'</span>).Strategy</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; </span><br><span class=\"line\">  username: <span class=\"string\">'test-user'</span>,</span><br><span class=\"line\">  password: <span class=\"string\">'test-password'</span>,</span><br><span class=\"line\">  id: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//post로 넘어오는 parameter명으로 변수명을 설정한다 (email, passwd) </span></span><br><span class=\"line\">passport.use(<span class=\"keyword\">new</span> LocalStrategy(&#123;</span><br><span class=\"line\">    usernameField: <span class=\"string\">'email'</span>,</span><br><span class=\"line\">    passwordField: <span class=\"string\">'passwd'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">username, password, done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//findUser는 실제로 database에서 user를 조회해야 함</span></span><br><span class=\"line\">    findUser(username, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, user</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//일차하는 user가 없는 경우 ( = 일차하는 id 없음 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//조회한 user의 password가 입력된 password와 불일치 ( = 비밀번호 틀림 )</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!user.validPassword(password)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">'Incorrect user information.'</span> &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//예외 상황을 처리 완료 후 callback 두번째 parameter에 false가 아닌 값(searched user object)을 넘겨주면 로그인 성공</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> done(<span class=\"literal\">null</span>, user)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">))</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//LocalStrategy의 parameter로 정의된 익명함수는 verify callback이다</span></span><br><span class=\"line\"><span class=\"comment\">//verify callback은 request가 포함한 credential을 분석하여 done함수를 발생시킨다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 인증 실패/성공여부를 포함하여 실행된다.</span></span><br><span class=\"line\"><span class=\"comment\">//done 함수는 passport.authenticate (로그인 api에서 사용하는 함수) 의 두번째 parameter로 실행된다.</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-serialize\"><a href=\"#user-serialize\" class=\"headerlink\" title=\"user serialize\"></a>user serialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.serializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// user를 두번째 인자로 넘기면 user 정보 전체를 session에 저장한다. user.id 로 id 정보만 저장하여 관리할 수 있음</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"user-deserialize\"><a href=\"#user-deserialize\" class=\"headerlink\" title=\"user deserialize\"></a>user deserialize</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.deserializeUser(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">user, done</span>) </span>&#123;</span><br><span class=\"line\">    done(<span class=\"literal\">null</span>, user);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// session 에 저장된 user 정보를 deserialize 함, id만 관리한 경우 user 정보가 필요하면 DB에서 조회해야 함</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"authentication-middleware\"><a href=\"#authentication-middleware\" class=\"headerlink\" title=\"authentication middleware\"></a>authentication middleware</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">authenticationMiddleware</span> (<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (req.isAuthenticated()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> next()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res.redirect(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"login-flow\"><a href=\"#login-flow\" class=\"headerlink\" title=\"login flow\"></a>login flow</h2><p>flow</p>\n<ol>\n<li>id 와 password를 post method로 login url로 요청</li>\n<li>login router에서 passport.authenticate 함수를 이용해 strategy를 선택</li>\n<li>선택된 strategy에서 id, password 비교 (db 조회), 비교 결과를 callback 함수를 이용해서 passport.authenticate 두번째 인자 함수로 전달</li>\n<li>serialize 를 통해 session에 user 정보 저장</li>\n<li>callback 함수안에서 req.logIn 함수 실행</li>\n<li>Set-Cookie 헤더에 세션키값을 저장하여  response</li>\n<li>session storage를 사용하는 경우 response할 때 req.session 에 있는 user 정보를 storage에 저장</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">'/login'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  passport.authenticate(<span class=\"string\">'local'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, user, info</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/login'</span>); &#125;</span><br><span class=\"line\">    <span class=\"comment\">//passport가 제공하는 login함수(=logIn)을 이용하여 login session 저장</span></span><br><span class=\"line\">    req.logIn(user, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123; <span class=\"keyword\">return</span> next(err); &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> res.redirect(<span class=\"string\">'/users/'</span> + user.username);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)(req, res, next);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// logout 함수로 req.user 를 삭제하고 관련 login session을 비움</span></span><br><span class=\"line\">app.get(<span class=\"string\">'/logout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">  req.logout();</span><br><span class=\"line\">  res.redirect(<span class=\"string\">'/'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"resource-authentication-flow\"><a href=\"#resource-authentication-flow\" class=\"headerlink\" title=\"resource authentication flow\"></a>resource authentication flow</h2><p>flow </p>\n<ol>\n<li>endpont로 request 보냄</li>\n<li>cookie이용해서 session 정보 조회</li>\n<li>session 정보 deserialize 해서 user 정보 얻기</li>\n<li>req.isAuthenticate 함수를 이용해서 인증된 요청인지 확인</li>\n<li>인증된 경우 / 인증되지 않은 경우에 따라 처리</li>\n</ol>\n<p>code</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> passport = <span class=\"built_in\">require</span>(<span class=\"string\">'passport'</span>)</span><br><span class=\"line\">app.get(<span class=\"string\">'/resource'</span>, passport.authenticationMiddleware(), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>)</span>&#123;</span><br><span class=\"line\">    res.render(<span class=\"string\">'resource'</span>, &#123; <span class=\"attr\">title</span>: <span class=\"string\">'passport example'</span> &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"참조-링크\"><a href=\"#참조-링크\" class=\"headerlink\" title=\"참조 링크\"></a>참조 링크</h2><ul>\n<li><a href=\"https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/\" target=\"_blank\" rel=\"noopener\">https://blog.risingstack.com/node-hero-node-js-authentication-passport-js/</a></li>\n<li><a href=\"https://github.com/passport/express-4.x-local-example/blob/master/server.js\" target=\"_blank\" rel=\"noopener\">https://github.com/passport/express-4.x-local-example/blob/master/server.js</a></li>\n<li><a href=\"https://scotch.io/tutorials/easy-node-authentication-setup-and-local\" target=\"_blank\" rel=\"noopener\">https://scotch.io/tutorials/easy-node-authentication-setup-and-local</a></li>\n<li><a href=\"https://bcho.tistory.com/920\" target=\"_blank\" rel=\"noopener\">https://bcho.tistory.com/920</a></li>\n</ul>\n"},{"title":"claudiajs-get-started","date":"2019-01-19T13:20:19.000Z","_content":"### claudiajs : https://claudiajs.com\n\n1. install claudia\n2. execute command `npm init`\n3. make lambda.js\n4. set aws credential on user root path\n5. create lambda function as command with profile\n6. invoke lambda with profile : `claudia test-lambda --profile claudia`\n7. update lambda : `claudia update`\n8. mongodb example project\n\n### install claudia\n\n```jshelllanguage\n# global installation\nnpm install claudia -g\n\n# check installation\nclaudia -version\n```\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n### make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\n\n```javascript\n// 1.normal example\nexports.myHandler = function(event, context) {\n   ...\n}\n// 2.you can use callback\nexports.handler = function(event, context, callback) {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    console.log('value1 =', event.key1);\n    console.log('value2 =', event.key2);\n    console.log('value3 =', event.key3);\n    console.log('remaining time =', context.getRemainingTimeInMillis());\n    console.log('functionName =', context.functionName);\n    console.log('AWSrequestID =', context.awsRequestId);\n    console.log('logGroupName =', context.log_group_name);\n    console.log('logStreamName =', context.log_stream_name);\n    console.log('clientContext =', context.clientContext);\n    if (typeof context.identity !== 'undefined') {\n        console.log('Cognitoidentity ID =', context.identity.cognitoIdentityId);\n    }    \n    callback(null, event.key1); // Echo back the first key value\n    // or\n    // callback(\"some error type\"); \n};\n// 3.below is available on node 8.xx\nexports.myHandler = async function(event, context) {\n   console.log(\"value1 = \" + event.key1);\n   console.log(\"value2 = \" + event.key2);  \n   return \"some success message\";\n   // or \n   // throw new Error(“some error type”); \n} \n```\n\n### setting AWS IAM \n- https://claudiajs.com/tutorials/installing.html \n- https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\n\nmake file `.aws/credentials`  \n\n> first line is profile name.\n\n```jshelllanguage\n[claudia]\naws_access_key_id = YOUR_ACCESS_KEY\naws_secret_access_key = YOUR_ACCESS_SECRET\n```\n\n### create lambda function\n\nseoul region is `ap-northeast-2`.\n \n```jshelllanguage\n# create lambda\nclaudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia\n```\n\n### invoke lambda\n\n```jshelllanguage\n#'test-' prefix is required.\nclaudia test-lambda --profile claudia\n```\n\n### update lambda with npm run command\n\npackage.json\n\n```json\n...\n  \"scripts\": {\n    \"test\": \"claudia test-lambda --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\nupdate command : `npm run deploy`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-mongodb)","source":"_posts/cloudiajs/claudiajs-get-started.md","raw":"---\ntitle: claudiajs-get-started\ndate: 2019-01-19 22:20:19\ntags:\n- aws\n- lambda\n- claudiajs\ncategories:\n- claudiajs\n---\n### claudiajs : https://claudiajs.com\n\n1. install claudia\n2. execute command `npm init`\n3. make lambda.js\n4. set aws credential on user root path\n5. create lambda function as command with profile\n6. invoke lambda with profile : `claudia test-lambda --profile claudia`\n7. update lambda : `claudia update`\n8. mongodb example project\n\n### install claudia\n\n```jshelllanguage\n# global installation\nnpm install claudia -g\n\n# check installation\nclaudia -version\n```\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n### make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\n\n```javascript\n// 1.normal example\nexports.myHandler = function(event, context) {\n   ...\n}\n// 2.you can use callback\nexports.handler = function(event, context, callback) {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    console.log('value1 =', event.key1);\n    console.log('value2 =', event.key2);\n    console.log('value3 =', event.key3);\n    console.log('remaining time =', context.getRemainingTimeInMillis());\n    console.log('functionName =', context.functionName);\n    console.log('AWSrequestID =', context.awsRequestId);\n    console.log('logGroupName =', context.log_group_name);\n    console.log('logStreamName =', context.log_stream_name);\n    console.log('clientContext =', context.clientContext);\n    if (typeof context.identity !== 'undefined') {\n        console.log('Cognitoidentity ID =', context.identity.cognitoIdentityId);\n    }    \n    callback(null, event.key1); // Echo back the first key value\n    // or\n    // callback(\"some error type\"); \n};\n// 3.below is available on node 8.xx\nexports.myHandler = async function(event, context) {\n   console.log(\"value1 = \" + event.key1);\n   console.log(\"value2 = \" + event.key2);  \n   return \"some success message\";\n   // or \n   // throw new Error(“some error type”); \n} \n```\n\n### setting AWS IAM \n- https://claudiajs.com/tutorials/installing.html \n- https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\n\nmake file `.aws/credentials`  \n\n> first line is profile name.\n\n```jshelllanguage\n[claudia]\naws_access_key_id = YOUR_ACCESS_KEY\naws_secret_access_key = YOUR_ACCESS_SECRET\n```\n\n### create lambda function\n\nseoul region is `ap-northeast-2`.\n \n```jshelllanguage\n# create lambda\nclaudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia\n```\n\n### invoke lambda\n\n```jshelllanguage\n#'test-' prefix is required.\nclaudia test-lambda --profile claudia\n```\n\n### update lambda with npm run command\n\npackage.json\n\n```json\n...\n  \"scripts\": {\n    \"test\": \"claudia test-lambda --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\nupdate command : `npm run deploy`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-mongodb)","slug":"cloudiajs/claudiajs-get-started","published":1,"updated":"2019-01-19T13:29:05.700Z","_id":"cjs8my0ra00276guhlpzfk0sc","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>install claudia</li>\n<li>execute command <code>npm init</code></li>\n<li>make lambda.js</li>\n<li>set aws credential on user root path</li>\n<li>create lambda function as command with profile</li>\n<li>invoke lambda with profile : <code>claudia test-lambda --profile claudia</code></li>\n<li>update lambda : <code>claudia update</code></li>\n<li>mongodb example project</li>\n</ol>\n<h3 id=\"install-claudia\"><a href=\"#install-claudia\" class=\"headerlink\" title=\"install claudia\"></a>install claudia</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># global installation</span><br><span class=\"line\">npm install claudia -g</span><br><span class=\"line\"></span><br><span class=\"line\"># check installation</span><br><span class=\"line\">claudia -version</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\"><a href=\"#make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\" class=\"headerlink\" title=\"make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\"></a>make a lambda.js file : <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html</a></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.normal example</span></span><br><span class=\"line\">exports.myHandler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2.you can use callback</span></span><br><span class=\"line\">exports.handler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.log('Received event:', JSON.stringify(event, null, 2));</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value1 ='</span>, event.key1);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value2 ='</span>, event.key2);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value3 ='</span>, event.key3);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'remaining time ='</span>, context.getRemainingTimeInMillis());</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'functionName ='</span>, context.functionName);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'AWSrequestID ='</span>, context.awsRequestId);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logGroupName ='</span>, context.log_group_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logStreamName ='</span>, context.log_stream_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'clientContext ='</span>, context.clientContext);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> context.identity !== <span class=\"string\">'undefined'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Cognitoidentity ID ='</span>, context.identity.cognitoIdentityId);</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    callback(<span class=\"literal\">null</span>, event.key1); <span class=\"comment\">// Echo back the first key value</span></span><br><span class=\"line\">    <span class=\"comment\">// or</span></span><br><span class=\"line\">    <span class=\"comment\">// callback(\"some error type\"); </span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 3.below is available on node 8.xx</span></span><br><span class=\"line\">exports.myHandler = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value1 = \"</span> + event.key1);</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value2 = \"</span> + event.key2);  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">\"some success message\"</span>;</span><br><span class=\"line\">   <span class=\"comment\">// or </span></span><br><span class=\"line\">   <span class=\"comment\">// throw new Error(“some error type”); </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"setting-AWS-IAM\"><a href=\"#setting-AWS-IAM\" class=\"headerlink\" title=\"setting AWS IAM\"></a>setting AWS IAM</h3><ul>\n<li><a href=\"https://claudiajs.com/tutorials/installing.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/installing.html</a> </li>\n<li><a href=\"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html</a></li>\n</ul>\n<p>make file <code>.aws/credentials</code>  </p>\n<blockquote>\n<p>first line is profile name.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[claudia]</span><br><span class=\"line\">aws_access_key_id = YOUR_ACCESS_KEY</span><br><span class=\"line\">aws_secret_access_key = YOUR_ACCESS_SECRET</span><br></pre></td></tr></table></figure>\n<h3 id=\"create-lambda-function\"><a href=\"#create-lambda-function\" class=\"headerlink\" title=\"create lambda function\"></a>create lambda function</h3><p>seoul region is <code>ap-northeast-2</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># create lambda</span><br><span class=\"line\">claudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"invoke-lambda\"><a href=\"#invoke-lambda\" class=\"headerlink\" title=\"invoke lambda\"></a>invoke lambda</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#&apos;test-&apos; prefix is required.</span><br><span class=\"line\">claudia test-lambda --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"update-lambda-with-npm-run-command\"><a href=\"#update-lambda-with-npm-run-command\" class=\"headerlink\" title=\"update lambda with npm run command\"></a>update lambda with npm run command</h3><p>package.json</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"test\": \"claudia test-lambda --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>update command : <code>npm run deploy</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-mongodb\" target=\"_blank\" rel=\"noopener\">github</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>install claudia</li>\n<li>execute command <code>npm init</code></li>\n<li>make lambda.js</li>\n<li>set aws credential on user root path</li>\n<li>create lambda function as command with profile</li>\n<li>invoke lambda with profile : <code>claudia test-lambda --profile claudia</code></li>\n<li>update lambda : <code>claudia update</code></li>\n<li>mongodb example project</li>\n</ol>\n<h3 id=\"install-claudia\"><a href=\"#install-claudia\" class=\"headerlink\" title=\"install claudia\"></a>install claudia</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># global installation</span><br><span class=\"line\">npm install claudia -g</span><br><span class=\"line\"></span><br><span class=\"line\"># check installation</span><br><span class=\"line\">claudia -version</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\"><a href=\"#make-a-lambda-js-file-https-docs-aws-amazon-com-lambda-latest-dg-nodejs-prog-model-handler-html\" class=\"headerlink\" title=\"make a lambda.js file : https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\"></a>make a lambda.js file : <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html</a></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.normal example</span></span><br><span class=\"line\">exports.myHandler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2.you can use callback</span></span><br><span class=\"line\">exports.handler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.log('Received event:', JSON.stringify(event, null, 2));</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value1 ='</span>, event.key1);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value2 ='</span>, event.key2);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'value3 ='</span>, event.key3);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'remaining time ='</span>, context.getRemainingTimeInMillis());</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'functionName ='</span>, context.functionName);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'AWSrequestID ='</span>, context.awsRequestId);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logGroupName ='</span>, context.log_group_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'logStreamName ='</span>, context.log_stream_name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'clientContext ='</span>, context.clientContext);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> context.identity !== <span class=\"string\">'undefined'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Cognitoidentity ID ='</span>, context.identity.cognitoIdentityId);</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    callback(<span class=\"literal\">null</span>, event.key1); <span class=\"comment\">// Echo back the first key value</span></span><br><span class=\"line\">    <span class=\"comment\">// or</span></span><br><span class=\"line\">    <span class=\"comment\">// callback(\"some error type\"); </span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 3.below is available on node 8.xx</span></span><br><span class=\"line\">exports.myHandler = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, context</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value1 = \"</span> + event.key1);</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value2 = \"</span> + event.key2);  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">\"some success message\"</span>;</span><br><span class=\"line\">   <span class=\"comment\">// or </span></span><br><span class=\"line\">   <span class=\"comment\">// throw new Error(“some error type”); </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"setting-AWS-IAM\"><a href=\"#setting-AWS-IAM\" class=\"headerlink\" title=\"setting AWS IAM\"></a>setting AWS IAM</h3><ul>\n<li><a href=\"https://claudiajs.com/tutorials/installing.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/installing.html</a> </li>\n<li><a href=\"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html</a></li>\n</ul>\n<p>make file <code>.aws/credentials</code>  </p>\n<blockquote>\n<p>first line is profile name.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[claudia]</span><br><span class=\"line\">aws_access_key_id = YOUR_ACCESS_KEY</span><br><span class=\"line\">aws_secret_access_key = YOUR_ACCESS_SECRET</span><br></pre></td></tr></table></figure>\n<h3 id=\"create-lambda-function\"><a href=\"#create-lambda-function\" class=\"headerlink\" title=\"create lambda function\"></a>create lambda function</h3><p>seoul region is <code>ap-northeast-2</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># create lambda</span><br><span class=\"line\">claudia create --region ap-northeast-2 --handler lambda.myHandler --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"invoke-lambda\"><a href=\"#invoke-lambda\" class=\"headerlink\" title=\"invoke lambda\"></a>invoke lambda</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#&apos;test-&apos; prefix is required.</span><br><span class=\"line\">claudia test-lambda --profile claudia</span><br></pre></td></tr></table></figure>\n<h3 id=\"update-lambda-with-npm-run-command\"><a href=\"#update-lambda-with-npm-run-command\" class=\"headerlink\" title=\"update lambda with npm run command\"></a>update lambda with npm run command</h3><p>package.json</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"test\": \"claudia test-lambda --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>update command : <code>npm run deploy</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-mongodb\" target=\"_blank\" rel=\"noopener\">github</a></p>\n"},{"title":"claudiajs-rest-api","date":"2019-01-19T13:22:17.000Z","_content":"### claudiajs : https://claudiajs.com\n\n1. make project\n2. install claudia api module\n3. modify package.json script command\n4. make api.js file\n5. make api gateway\n6. example code\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n\n### install claudia api module : https://claudiajs.com/claudia-api-builder.html\n\n```jshelllanguage\nnpm install claudia-api-builder -S\n```\n\n### modify package.json script command\n\npackage.json\n```json\n...\n  \"scripts\": {\n    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\n\n### make a api.js file : \n- https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\n- https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\n\n```javascript\nvar ApiBuilder = require('claudia-api-builder'),\n\tapi = new ApiBuilder(),\n\tsuperb = require('superb');\n\nmodule.exports = api;\n\napi.get('/greet', function (request) {\n\treturn request.queryString.name + ' is ' + superb();\n});\n```\n\n### make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\n\nexecute command\n\n```jshelllanguage\n#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]\nnpm run start\n```\n\nyou can see below console as result\n\nsaving configuration\n```json\n{\n  \"lambda\": {\n    \"role\": \"rest-api-test-executor\",\n    \"name\": \"rest-api-test\",\n    \"region\": \"ap-northeast-2\"\n  },\n  \"api\": {\n    \"id\": \"XXXXXXXX\",\n    \"module\": \"api\",\n    \"url\": \"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"\n  }\n}\n```\n\nyou can connect to `api.url`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-rest-claudia)\n\n### 인증관련 Reference\n- 카카오 : https://github.com/bskim/gamingonaws2017_serverless\n- setting authorization to call api by aws iam : https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n","source":"_posts/cloudiajs/claudiajs-rest-api.md","raw":"---\ntitle: claudiajs-rest-api\ndate: 2019-01-19 22:22:17\ntags:\n- aws\n- lambda\n- claudiajs\ncategories:\n- claudiajs\n---\n### claudiajs : https://claudiajs.com\n\n1. make project\n2. install claudia api module\n3. modify package.json script command\n4. make api.js file\n5. make api gateway\n6. example code\n\n### make lambda project\n\n```jshelllanguage\nmkdir example\ncd example\nnpm init\n```\n\n### install claudia api module : https://claudiajs.com/claudia-api-builder.html\n\n```jshelllanguage\nnpm install claudia-api-builder -S\n```\n\n### modify package.json script command\n\npackage.json\n```json\n...\n  \"scripts\": {\n    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",\n    \"deploy\": \"claudia update --profile claudia\"\n  },\n...\n```\n\n### make a api.js file : \n- https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\n- https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\n\n```javascript\nvar ApiBuilder = require('claudia-api-builder'),\n\tapi = new ApiBuilder(),\n\tsuperb = require('superb');\n\nmodule.exports = api;\n\napi.get('/greet', function (request) {\n\treturn request.queryString.name + ' is ' + superb();\n});\n```\n\n### make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\n\nexecute command\n\n```jshelllanguage\n#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]\nnpm run start\n```\n\nyou can see below console as result\n\nsaving configuration\n```json\n{\n  \"lambda\": {\n    \"role\": \"rest-api-test-executor\",\n    \"name\": \"rest-api-test\",\n    \"region\": \"ap-northeast-2\"\n  },\n  \"api\": {\n    \"id\": \"XXXXXXXX\",\n    \"module\": \"api\",\n    \"url\": \"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"\n  }\n}\n```\n\nyou can connect to `api.url`\n\n### example code\n\n[github](https://github.com/j2yes/lambda-rest-claudia)\n\n### 인증관련 Reference\n- 카카오 : https://github.com/bskim/gamingonaws2017_serverless\n- setting authorization to call api by aws iam : https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n","slug":"cloudiajs/claudiajs-rest-api","published":1,"updated":"2019-01-19T13:29:05.688Z","_id":"cjs8my0t2002c6guhl5uiiuwb","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>make project</li>\n<li>install claudia api module</li>\n<li>modify package.json script command</li>\n<li>make api.js file</li>\n<li>make api gateway</li>\n<li>example code</li>\n</ol>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\"><a href=\"#install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\" class=\"headerlink\" title=\"install claudia api module : https://claudiajs.com/claudia-api-builder.html\"></a>install claudia api module : <a href=\"https://claudiajs.com/claudia-api-builder.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/claudia-api-builder.html</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install claudia-api-builder -S</span><br></pre></td></tr></table></figure>\n<h3 id=\"modify-package-json-script-command\"><a href=\"#modify-package-json-script-command\" class=\"headerlink\" title=\"modify package.json script command\"></a>modify package.json script command</h3><p>package.json<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"make-a-api-js-file\"><a href=\"#make-a-api-js-file\" class=\"headerlink\" title=\"make a api.js file :\"></a>make a api.js file :</h3><ul>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax</a></li>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md</a></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ApiBuilder = <span class=\"built_in\">require</span>(<span class=\"string\">'claudia-api-builder'</span>),</span><br><span class=\"line\">\tapi = <span class=\"keyword\">new</span> ApiBuilder(),</span><br><span class=\"line\">\tsuperb = <span class=\"built_in\">require</span>(<span class=\"string\">'superb'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = api;</span><br><span class=\"line\"></span><br><span class=\"line\">api.get(<span class=\"string\">'/greet'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">request</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> request.queryString.name + <span class=\"string\">' is '</span> + superb();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\"><a href=\"#make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\" class=\"headerlink\" title=\"make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\"></a>make api gateway : <a href=\"https://claudiajs.com/tutorials/hello-world-api-gateway.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/hello-world-api-gateway.html</a></h3><p>execute command</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]</span><br><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n<p>you can see below console as result</p>\n<p>saving configuration<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"lambda\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"role\"</span>: <span class=\"string\">\"rest-api-test-executor\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"rest-api-test\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"region\"</span>: <span class=\"string\">\"ap-northeast-2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"api\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"string\">\"XXXXXXXX\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"api\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"url\"</span>: <span class=\"string\">\"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>you can connect to <code>api.url</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-rest-claudia\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<h3 id=\"인증관련-Reference\"><a href=\"#인증관련-Reference\" class=\"headerlink\" title=\"인증관련 Reference\"></a>인증관련 Reference</h3><ul>\n<li>카카오 : <a href=\"https://github.com/bskim/gamingonaws2017_serverless\" target=\"_blank\" rel=\"noopener\">https://github.com/bskim/gamingonaws2017_serverless</a></li>\n<li>setting authorization to call api by aws iam : <a href=\"https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"claudiajs-https-claudiajs-com\"><a href=\"#claudiajs-https-claudiajs-com\" class=\"headerlink\" title=\"claudiajs : https://claudiajs.com\"></a>claudiajs : <a href=\"https://claudiajs.com\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com</a></h3><ol>\n<li>make project</li>\n<li>install claudia api module</li>\n<li>modify package.json script command</li>\n<li>make api.js file</li>\n<li>make api gateway</li>\n<li>example code</li>\n</ol>\n<h3 id=\"make-lambda-project\"><a href=\"#make-lambda-project\" class=\"headerlink\" title=\"make lambda project\"></a>make lambda project</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir example</span><br><span class=\"line\">cd example</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\"><a href=\"#install-claudia-api-module-https-claudiajs-com-claudia-api-builder-html\" class=\"headerlink\" title=\"install claudia api module : https://claudiajs.com/claudia-api-builder.html\"></a>install claudia api module : <a href=\"https://claudiajs.com/claudia-api-builder.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/claudia-api-builder.html</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install claudia-api-builder -S</span><br></pre></td></tr></table></figure>\n<h3 id=\"modify-package-json-script-command\"><a href=\"#modify-package-json-script-command\" class=\"headerlink\" title=\"modify package.json script command\"></a>modify package.json script command</h3><p>package.json<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"start\": \"claudia create --name rest-api-test --region ap-northeast-2 --api-module api --profile claudia\",</span><br><span class=\"line\">    \"deploy\": \"claudia update --profile claudia\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"make-a-api-js-file\"><a href=\"#make-a-api-js-file\" class=\"headerlink\" title=\"make a api.js file :\"></a>make a api.js file :</h3><ul>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#api-definition-syntax</a></li>\n<li><a href=\"https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md\" target=\"_blank\" rel=\"noopener\">https://github.com/claudiajs/claudia-api-builder/blob/4f5c30df0365812765806ae2f9fd97e7a1287ed9/docs/api.md</a></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ApiBuilder = <span class=\"built_in\">require</span>(<span class=\"string\">'claudia-api-builder'</span>),</span><br><span class=\"line\">\tapi = <span class=\"keyword\">new</span> ApiBuilder(),</span><br><span class=\"line\">\tsuperb = <span class=\"built_in\">require</span>(<span class=\"string\">'superb'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = api;</span><br><span class=\"line\"></span><br><span class=\"line\">api.get(<span class=\"string\">'/greet'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">request</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> request.queryString.name + <span class=\"string\">' is '</span> + superb();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\"><a href=\"#make-api-gateway-https-claudiajs-com-tutorials-hello-world-api-gateway-html\" class=\"headerlink\" title=\"make api gateway : https://claudiajs.com/tutorials/hello-world-api-gateway.html\"></a>make api gateway : <a href=\"https://claudiajs.com/tutorials/hello-world-api-gateway.html\" target=\"_blank\" rel=\"noopener\">https://claudiajs.com/tutorials/hello-world-api-gateway.html</a></h3><p>execute command</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#claudia create --name [lambda function name, api gateway name] --region [region name] --api-module [main javascript file name] --profile [profile name]</span><br><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n<p>you can see below console as result</p>\n<p>saving configuration<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"lambda\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"role\"</span>: <span class=\"string\">\"rest-api-test-executor\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"rest-api-test\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"region\"</span>: <span class=\"string\">\"ap-northeast-2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"api\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"string\">\"XXXXXXXX\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"api\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"url\"</span>: <span class=\"string\">\"https://XXXXXXXX.execute-api.ap-northeast-2.amazonaws.com/latest\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>you can connect to <code>api.url</code></p>\n<h3 id=\"example-code\"><a href=\"#example-code\" class=\"headerlink\" title=\"example code\"></a>example code</h3><p><a href=\"https://github.com/j2yes/lambda-rest-claudia\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<h3 id=\"인증관련-Reference\"><a href=\"#인증관련-Reference\" class=\"headerlink\" title=\"인증관련 Reference\"></a>인증관련 Reference</h3><ul>\n<li>카카오 : <a href=\"https://github.com/bskim/gamingonaws2017_serverless\" target=\"_blank\" rel=\"noopener\">https://github.com/bskim/gamingonaws2017_serverless</a></li>\n<li>setting authorization to call api by aws iam : <a href=\"https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html</a></li>\n</ul>\n"},{"title":"ionic-app-play-store-registration","date":"2019-02-04T07:16:26.000Z","_content":"### 구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\n\n> 업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)\n\n참고사이트 \n- https://thenounproject.com/\n- https://www.iconfinder.com/\n\n#### 1. 스토어 등록정보 \n\n![스토어 화면](/images/ionic/play_store.png \"스토어 화면\")\n\n애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.\n\n만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.\n\n필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다\n\n- 2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)\n- 고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))\n- 그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))\n\n필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.\n\n![메뉴 화면](/images/ionic/play_store_menu.png \"메뉴 화면\")\n\n이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자\n\n#### 2. 앱 등록하기\n\n스토어에 업로드 가능한 apk 버전을 만들어야 합니다.\n(참고 :  [APK 만들기](https://j2yes.github.io/ionic-2/make-android-jar/) )\n\n#### 3. 콘텐츠 등급 & 가격 및 배포 설정\n\n그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. \n\n여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. \n\n출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.\n\n(이제 기다리는 일만 남았습니다. 끝!)","source":"_posts/ionic/ionic-app-play-store-registration.md","raw":"---\ntitle: ionic-app-play-store-registration\ndate: 2019-02-04 16:16:26\ntags:\n- mobile\n- ionic\n- android\n- play store\ncategories:\n- ionic\n---\n### 구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\n\n> 업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)\n\n참고사이트 \n- https://thenounproject.com/\n- https://www.iconfinder.com/\n\n#### 1. 스토어 등록정보 \n\n![스토어 화면](/images/ionic/play_store.png \"스토어 화면\")\n\n애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.\n\n만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.\n\n필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다\n\n- 2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)\n- 고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))\n- 그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))\n\n필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.\n\n![메뉴 화면](/images/ionic/play_store_menu.png \"메뉴 화면\")\n\n이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자\n\n#### 2. 앱 등록하기\n\n스토어에 업로드 가능한 apk 버전을 만들어야 합니다.\n(참고 :  [APK 만들기](https://j2yes.github.io/ionic-2/make-android-jar/) )\n\n#### 3. 콘텐츠 등급 & 가격 및 배포 설정\n\n그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. \n\n여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. \n\n출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.\n\n(이제 기다리는 일만 남았습니다. 끝!)","slug":"ionic/ionic-app-play-store-registration","published":1,"updated":"2019-02-04T07:21:28.175Z","_id":"cjs8myevq002h6guh55jcwyss","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\"><a href=\"#구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\" class=\"headerlink\" title=\"구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\"></a>구글 플레이 개발자 콘솔에 접속해보자 (<a href=\"https://play.google.com/apps/publish\" target=\"_blank\" rel=\"noopener\">https://play.google.com/apps/publish</a>)</h3><blockquote>\n<p>업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)</p>\n</blockquote>\n<p>참고사이트 </p>\n<ul>\n<li><a href=\"https://thenounproject.com/\" target=\"_blank\" rel=\"noopener\">https://thenounproject.com/</a></li>\n<li><a href=\"https://www.iconfinder.com/\" target=\"_blank\" rel=\"noopener\">https://www.iconfinder.com/</a></li>\n</ul>\n<h4 id=\"1-스토어-등록정보\"><a href=\"#1-스토어-등록정보\" class=\"headerlink\" title=\"1. 스토어 등록정보\"></a>1. 스토어 등록정보</h4><p><img src=\"/images/ionic/play_store.png\" alt=\"스토어 화면\" title=\"스토어 화면\"></p>\n<p>애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.</p>\n<p>만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.</p>\n<p>필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다</p>\n<ul>\n<li>2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)</li>\n<li>고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))</li>\n<li>그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))</li>\n</ul>\n<p>필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.</p>\n<p><img src=\"/images/ionic/play_store_menu.png\" alt=\"메뉴 화면\" title=\"메뉴 화면\"></p>\n<p>이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자</p>\n<h4 id=\"2-앱-등록하기\"><a href=\"#2-앱-등록하기\" class=\"headerlink\" title=\"2. 앱 등록하기\"></a>2. 앱 등록하기</h4><p>스토어에 업로드 가능한 apk 버전을 만들어야 합니다.<br>(참고 :  <a href=\"https://j2yes.github.io/ionic-2/make-android-jar/\">APK 만들기</a> )</p>\n<h4 id=\"3-콘텐츠-등급-amp-가격-및-배포-설정\"><a href=\"#3-콘텐츠-등급-amp-가격-및-배포-설정\" class=\"headerlink\" title=\"3. 콘텐츠 등급 &amp; 가격 및 배포 설정\"></a>3. 콘텐츠 등급 &amp; 가격 및 배포 설정</h4><p>그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. </p>\n<p>여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. </p>\n<p>출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.</p>\n<p>(이제 기다리는 일만 남았습니다. 끝!)</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\"><a href=\"#구글-플레이-개발자-콘솔에-접속해보자-https-play-google-com-apps-publish\" class=\"headerlink\" title=\"구글 플레이 개발자 콘솔에 접속해보자 (https://play.google.com/apps/publish)\"></a>구글 플레이 개발자 콘솔에 접속해보자 (<a href=\"https://play.google.com/apps/publish\" target=\"_blank\" rel=\"noopener\">https://play.google.com/apps/publish</a>)</h3><blockquote>\n<p>업로드전에 앱의 아이콘과 스플래쉬 이미지부터 변경해두자 (png 파일이어야 함)</p>\n</blockquote>\n<p>참고사이트 </p>\n<ul>\n<li><a href=\"https://thenounproject.com/\" target=\"_blank\" rel=\"noopener\">https://thenounproject.com/</a></li>\n<li><a href=\"https://www.iconfinder.com/\" target=\"_blank\" rel=\"noopener\">https://www.iconfinder.com/</a></li>\n</ul>\n<h4 id=\"1-스토어-등록정보\"><a href=\"#1-스토어-등록정보\" class=\"headerlink\" title=\"1. 스토어 등록정보\"></a>1. 스토어 등록정보</h4><p><img src=\"/images/ionic/play_store.png\" alt=\"스토어 화면\" title=\"스토어 화면\"></p>\n<p>애플리케이션 만들기를 하면 상단 화면과 같은 팝업을 볼 수 있다.</p>\n<p>만들기를 클릭한 후 상세화면에서 *가 체크된 필수 항목을 채워서 저장해야 한다.</p>\n<p>필수 항목을 채우기 위해서 아래 이미지 파일이 필요하다</p>\n<ul>\n<li>2개이상의 스크린샷 (JPEG 또는 24비트 PNG(알파 없음). 측면 최소 길이: 320픽셀. 측면 최대 길이: 3840픽셀.)</li>\n<li>고해상도 아이콘 (512x512, 32비트 PNG(알파 있음))</li>\n<li>그래픽 이미지 : 앱다운로드 화면의 배경으로 사용된다 (가로세로 1024x500, JPG 또는 24비트 PNG(알파 없음))</li>\n</ul>\n<p>필수 항목을 다 채우고 저장하면 메뉴에서 초록색 체크를 확인할 수 있다.</p>\n<p><img src=\"/images/ionic/play_store_menu.png\" alt=\"메뉴 화면\" title=\"메뉴 화면\"></p>\n<p>이제 나머지 ! 표시가 있는 메뉴정보를 설정해보자</p>\n<h4 id=\"2-앱-등록하기\"><a href=\"#2-앱-등록하기\" class=\"headerlink\" title=\"2. 앱 등록하기\"></a>2. 앱 등록하기</h4><p>스토어에 업로드 가능한 apk 버전을 만들어야 합니다.<br>(참고 :  <a href=\"https://j2yes.github.io/ionic-2/make-android-jar/\">APK 만들기</a> )</p>\n<h4 id=\"3-콘텐츠-등급-amp-가격-및-배포-설정\"><a href=\"#3-콘텐츠-등급-amp-가격-및-배포-설정\" class=\"headerlink\" title=\"3. 콘텐츠 등급 &amp; 가격 및 배포 설정\"></a>3. 콘텐츠 등급 &amp; 가격 및 배포 설정</h4><p>그냥 설문에 잘 응답하고 체크하면서 넘어가면 됩니다. </p>\n<p>여기까지 완료하면 오른쪽 상단에 출시준비 버튼을 보실 수 있습니다. </p>\n<p>출시준비 버튼을 누르면 나오는 화면에서 프로덕션 버전으로 업로드한 앱을 최종적으로 검토버튼으로 제출하면 됩니다.</p>\n<p>(이제 기다리는 일만 남았습니다. 끝!)</p>\n"},{"title":"ionic-get-started","date":"2019-02-04T06:49:46.000Z","_content":"### 프로젝트 구조\n\n![폴더 구조](/images/ionic/folder_structure.png \"folder_structure\")\n\n- src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )\n- src/pages : 화면 페이지 단위로 구분\n- src/asset : 이미지 등 \n\n### ionic view life cycle\n\nhttp://blog.ionic.io/navigating-lifecycle-events/\n\n### 페이지 파일 구성\n\n한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음\n\n예) hello-ionic/\n- hello-ionic.html\n- hello-ionic.scss\n- hello-ionic.ts\n  ```javascript\n  import { Component } from '@angular/core';\n  \n  @Component({\n    //selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함\n    selector: 'page-hello-ionic',\n    templateUrl: 'hello-ionic.html'\n  })\n  export class HelloIonicPage {\n    constructor() {\n  \n    }\n  }\n  ```\n\n### ionic navigation\n\nionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.\n\n```sbtshell\n#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지\n<ion-nav [root]=\"rootPage\"></ion-nav>\n```\n\n페이지 이동 (push, pop)\n\n```javascript\nclass OtherPage {\n  constructor(public navCtrl: NavController) {}\n\n  //다른 페이지로 이동하기\n  goToOtherPage() {\n    //push another page onto the history stack\n    //causing the nav controller to animate the new page in\n    this.navCtrl.push(OtherPage);\n  }\n\n  //뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)\n  goBack() {\n    this.navCtrl.pop();\n  }\n}\n```\n\n#### 탭 페이지이동 처리\n\n탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함\n\n### component 정리하기 (http://ionicframework.com/docs//api/)\n\n#### http 통신하기\n\nhttp 를 이용하는 방법은 두가지\n- @angular/http 사용\n- @ionic-native/http 사용 \n- 차이점 : https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\n\n@ionic-native/http 사용 예시\n\n- 설치\n  ```sbtshell\n  #설치\n  ionic plugin add --save cordova-plugin-http\n  npm install --save @ionic-native/http\n  ```\n- 설정\n  ```javascript\n  // provider에 추가하기\n  // app.module.ts 파일에 provider로 추가하고 사용해야 함\n  // ...\n  \n  providers: [\n      StatusBar,\n      SplashScreen,\n      HTTP,\n      {provide: ErrorHandler, useClass: IonicErrorHandler}\n    ]\n  \n  // ...\n  ```\n\n@angular/http 사용 예시\n\n- 설정\n  ```javascript\n  // app.module.ts 파일에 모듈 추가하고 사용해야 함\n  // ...\n  import { HttpModule } from '@angular/http';\n  \n  // ...\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  ```\n\n#### 참조문서\n\n- https://ionicframework.com/docs/native/http/\n- http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\n\n\n#### whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\n\n- 설치\n  ```sbtshell\n  cordova plugin add cordova-plugin-whitelist\n  ```\n- proxy 설정하기\n  ```sbtshell\n  #프로젝트의 ionic.config.json 파일에 설정\n  {\n    \"name\": \"auction\",  \"app_id\": \"\",  \"type\": \"ionic-angular\",  \"proxies\": [\n      {\n        \"path\": \"/apt\",      \"proxyUrl\": \"http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev\"    }\n    ]\n  }\n  ```\n\n### typescript 기본\n\nhttps://www.typescriptlang.org/docs/handbook/basic-types.html\n\n### angular2 기본 문법\n\n반복문\n\n```angular2html\n<li *ngFor=\"let hero of heroes” (click)=\"onSelect(hero)>\n    <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n조건문\n\n```angular2html\n<div *ngIf=\"selectedHero\">\n  <h2>{{selectedHero.name}} details!</h2>\n  <div><label>id: </label>{{selectedHero.id}}</div>\n  <div>\n    <label>name: </label>\n    <input [(ngModel)]=\"selectedHero.name\" placeholder=\"name\"/>\n  </div>\n</div>\n```\n\n동적 스타일\n\n```angular2html\n<li *ngFor=\"let hero of heroes\"\n  [class.selected]=\"hero === selectedHero\"\n  (click)=\"onSelect(hero)\">\n  <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n@Injectable() 사용하기 : https://angular.io/docs/ts/latest/guide/dependency-injection.html\n\n","source":"_posts/ionic/ionic-get-started.md","raw":"---\ntitle: ionic-get-started\ndate: 2019-02-04 15:49:46\ntags:\n- mobile\n- ionic\n- angular\ncategories:\n- ionic\n---\n### 프로젝트 구조\n\n![폴더 구조](/images/ionic/folder_structure.png \"folder_structure\")\n\n- src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )\n- src/pages : 화면 페이지 단위로 구분\n- src/asset : 이미지 등 \n\n### ionic view life cycle\n\nhttp://blog.ionic.io/navigating-lifecycle-events/\n\n### 페이지 파일 구성\n\n한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음\n\n예) hello-ionic/\n- hello-ionic.html\n- hello-ionic.scss\n- hello-ionic.ts\n  ```javascript\n  import { Component } from '@angular/core';\n  \n  @Component({\n    //selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함\n    selector: 'page-hello-ionic',\n    templateUrl: 'hello-ionic.html'\n  })\n  export class HelloIonicPage {\n    constructor() {\n  \n    }\n  }\n  ```\n\n### ionic navigation\n\nionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.\n\n```sbtshell\n#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지\n<ion-nav [root]=\"rootPage\"></ion-nav>\n```\n\n페이지 이동 (push, pop)\n\n```javascript\nclass OtherPage {\n  constructor(public navCtrl: NavController) {}\n\n  //다른 페이지로 이동하기\n  goToOtherPage() {\n    //push another page onto the history stack\n    //causing the nav controller to animate the new page in\n    this.navCtrl.push(OtherPage);\n  }\n\n  //뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)\n  goBack() {\n    this.navCtrl.pop();\n  }\n}\n```\n\n#### 탭 페이지이동 처리\n\n탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함\n\n### component 정리하기 (http://ionicframework.com/docs//api/)\n\n#### http 통신하기\n\nhttp 를 이용하는 방법은 두가지\n- @angular/http 사용\n- @ionic-native/http 사용 \n- 차이점 : https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\n\n@ionic-native/http 사용 예시\n\n- 설치\n  ```sbtshell\n  #설치\n  ionic plugin add --save cordova-plugin-http\n  npm install --save @ionic-native/http\n  ```\n- 설정\n  ```javascript\n  // provider에 추가하기\n  // app.module.ts 파일에 provider로 추가하고 사용해야 함\n  // ...\n  \n  providers: [\n      StatusBar,\n      SplashScreen,\n      HTTP,\n      {provide: ErrorHandler, useClass: IonicErrorHandler}\n    ]\n  \n  // ...\n  ```\n\n@angular/http 사용 예시\n\n- 설정\n  ```javascript\n  // app.module.ts 파일에 모듈 추가하고 사용해야 함\n  // ...\n  import { HttpModule } from '@angular/http';\n  \n  // ...\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  ```\n\n#### 참조문서\n\n- https://ionicframework.com/docs/native/http/\n- http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\n\n\n#### whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\n\n- 설치\n  ```sbtshell\n  cordova plugin add cordova-plugin-whitelist\n  ```\n- proxy 설정하기\n  ```sbtshell\n  #프로젝트의 ionic.config.json 파일에 설정\n  {\n    \"name\": \"auction\",  \"app_id\": \"\",  \"type\": \"ionic-angular\",  \"proxies\": [\n      {\n        \"path\": \"/apt\",      \"proxyUrl\": \"http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev\"    }\n    ]\n  }\n  ```\n\n### typescript 기본\n\nhttps://www.typescriptlang.org/docs/handbook/basic-types.html\n\n### angular2 기본 문법\n\n반복문\n\n```angular2html\n<li *ngFor=\"let hero of heroes” (click)=\"onSelect(hero)>\n    <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n조건문\n\n```angular2html\n<div *ngIf=\"selectedHero\">\n  <h2>{{selectedHero.name}} details!</h2>\n  <div><label>id: </label>{{selectedHero.id}}</div>\n  <div>\n    <label>name: </label>\n    <input [(ngModel)]=\"selectedHero.name\" placeholder=\"name\"/>\n  </div>\n</div>\n```\n\n동적 스타일\n\n```angular2html\n<li *ngFor=\"let hero of heroes\"\n  [class.selected]=\"hero === selectedHero\"\n  (click)=\"onSelect(hero)\">\n  <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n</li>\n```\n\n@Injectable() 사용하기 : https://angular.io/docs/ts/latest/guide/dependency-injection.html\n\n","slug":"ionic/ionic-get-started","published":1,"updated":"2019-02-04T07:13:17.959Z","_id":"cjs8myf3r002n6guh0y6di4id","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"프로젝트-구조\"><a href=\"#프로젝트-구조\" class=\"headerlink\" title=\"프로젝트 구조\"></a>프로젝트 구조</h3><p><img src=\"/images/ionic/folder_structure.png\" alt=\"폴더 구조\" title=\"folder_structure\"></p>\n<ul>\n<li>src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )</li>\n<li>src/pages : 화면 페이지 단위로 구분</li>\n<li>src/asset : 이미지 등 </li>\n</ul>\n<h3 id=\"ionic-view-life-cycle\"><a href=\"#ionic-view-life-cycle\" class=\"headerlink\" title=\"ionic view life cycle\"></a>ionic view life cycle</h3><p><a href=\"http://blog.ionic.io/navigating-lifecycle-events/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/navigating-lifecycle-events/</a></p>\n<h3 id=\"페이지-파일-구성\"><a href=\"#페이지-파일-구성\" class=\"headerlink\" title=\"페이지 파일 구성\"></a>페이지 파일 구성</h3><p>한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음</p>\n<p>예) hello-ionic/</p>\n<ul>\n<li>hello-ionic.html</li>\n<li>hello-ionic.scss</li>\n<li>hello-ionic.ts<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함</span></span><br><span class=\"line\">  selector: <span class=\"string\">'page-hello-ionic'</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">'hello-ionic.html'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloIonicPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ionic-navigation\"><a href=\"#ionic-navigation\" class=\"headerlink\" title=\"ionic navigation\"></a>ionic navigation</h3><p>ionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지</span><br><span class=\"line\">&lt;ion-nav [root]=&quot;rootPage&quot;&gt;&lt;/ion-nav&gt;</span><br></pre></td></tr></table></figure>\n<p>페이지 이동 (push, pop)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OtherPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(public navCtrl: NavController) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//다른 페이지로 이동하기</span></span><br><span class=\"line\">  goToOtherPage() &#123;</span><br><span class=\"line\">    <span class=\"comment\">//push another page onto the history stack</span></span><br><span class=\"line\">    <span class=\"comment\">//causing the nav controller to animate the new page in</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.push(OtherPage);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)</span></span><br><span class=\"line\">  goBack() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.pop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"탭-페이지이동-처리\"><a href=\"#탭-페이지이동-처리\" class=\"headerlink\" title=\"탭 페이지이동 처리\"></a>탭 페이지이동 처리</h4><p>탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함</p>\n<h3 id=\"component-정리하기-http-ionicframework-com-docs-api\"><a href=\"#component-정리하기-http-ionicframework-com-docs-api\" class=\"headerlink\" title=\"component 정리하기 (http://ionicframework.com/docs//api/)\"></a>component 정리하기 (<a href=\"http://ionicframework.com/docs//api/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs//api/</a>)</h3><h4 id=\"http-통신하기\"><a href=\"#http-통신하기\" class=\"headerlink\" title=\"http 통신하기\"></a>http 통신하기</h4><p>http 를 이용하는 방법은 두가지</p>\n<ul>\n<li>@angular/http 사용</li>\n<li>@ionic-native/http 사용 </li>\n<li>차이점 : <a href=\"https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095</a></li>\n</ul>\n<p>@ionic-native/http 사용 예시</p>\n<ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#설치</span><br><span class=\"line\">ionic plugin add --save cordova-plugin-http</span><br><span class=\"line\">npm install --save @ionic-native/http</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>설정</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// provider에 추가하기</span></span><br><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 provider로 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">providers: [</span><br><span class=\"line\">    StatusBar,</span><br><span class=\"line\">    SplashScreen,</span><br><span class=\"line\">    HTTP,</span><br><span class=\"line\">    &#123;<span class=\"attr\">provide</span>: ErrorHandler, <span class=\"attr\">useClass</span>: IonicErrorHandler&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>@angular/http 사용 예시</p>\n<ul>\n<li>설정<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 모듈 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; HttpModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/http'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">imports: [</span><br><span class=\"line\">  BrowserModule,</span><br><span class=\"line\">  HttpModule,</span><br><span class=\"line\">  IonicModule.forRoot(MyApp)</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"참조문서\"><a href=\"#참조문서\" class=\"headerlink\" title=\"참조문서\"></a>참조문서</h4><ul>\n<li><a href=\"https://ionicframework.com/docs/native/http/\" target=\"_blank\" rel=\"noopener\">https://ionicframework.com/docs/native/http/</a></li>\n<li><a href=\"http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/</a></li>\n</ul>\n<h4 id=\"whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\"><a href=\"#whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\" class=\"headerlink\" title=\"whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\"></a>whitelist 설정 (<a href=\"http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/\" target=\"_blank\" rel=\"noopener\">http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/</a>)</h4><ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova plugin add cordova-plugin-whitelist</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>proxy 설정하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트의 ionic.config.json 파일에 설정</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;auction&quot;,  &quot;app_id&quot;: &quot;&quot;,  &quot;type&quot;: &quot;ionic-angular&quot;,  &quot;proxies&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;path&quot;: &quot;/apt&quot;,      &quot;proxyUrl&quot;: &quot;http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev&quot;    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"typescript-기본\"><a href=\"#typescript-기본\" class=\"headerlink\" title=\"typescript 기본\"></a>typescript 기본</h3><p><a href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\" target=\"_blank\" rel=\"noopener\">https://www.typescriptlang.org/docs/handbook/basic-types.html</a></p>\n<h3 id=\"angular2-기본-문법\"><a href=\"#angular2-기본-문법\" class=\"headerlink\" title=\"angular2 기본 문법\"></a>angular2 기본 문법</h3><p>반복문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes” (click)=&quot;onSelect(hero)&gt;</span><br><span class=\"line\">    &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>조건문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div *ngIf=&quot;selectedHero&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;&#123;&#123;selectedHero.name&#125;&#125; details!&lt;/h2&gt;</span><br><span class=\"line\">  &lt;div&gt;&lt;label&gt;id: &lt;/label&gt;&#123;&#123;selectedHero.id&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;label&gt;name: &lt;/label&gt;</span><br><span class=\"line\">    &lt;input [(ngModel)]=&quot;selectedHero.name&quot; placeholder=&quot;name&quot;/&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>동적 스타일</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes&quot;</span><br><span class=\"line\">  [class.selected]=&quot;hero === selectedHero&quot;</span><br><span class=\"line\">  (click)=&quot;onSelect(hero)&quot;&gt;</span><br><span class=\"line\">  &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>@Injectable() 사용하기 : <a href=\"https://angular.io/docs/ts/latest/guide/dependency-injection.html\" target=\"_blank\" rel=\"noopener\">https://angular.io/docs/ts/latest/guide/dependency-injection.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"프로젝트-구조\"><a href=\"#프로젝트-구조\" class=\"headerlink\" title=\"프로젝트 구조\"></a>프로젝트 구조</h3><p><img src=\"/images/ionic/folder_structure.png\" alt=\"폴더 구조\" title=\"folder_structure\"></p>\n<ul>\n<li>src/app : app.module.ts가 entry point ( index.html에서 ion-app에 표시될 root component가 entry point 인 app.module파일에 지정되어 있다. )</li>\n<li>src/pages : 화면 페이지 단위로 구분</li>\n<li>src/asset : 이미지 등 </li>\n</ul>\n<h3 id=\"ionic-view-life-cycle\"><a href=\"#ionic-view-life-cycle\" class=\"headerlink\" title=\"ionic view life cycle\"></a>ionic view life cycle</h3><p><a href=\"http://blog.ionic.io/navigating-lifecycle-events/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/navigating-lifecycle-events/</a></p>\n<h3 id=\"페이지-파일-구성\"><a href=\"#페이지-파일-구성\" class=\"headerlink\" title=\"페이지 파일 구성\"></a>페이지 파일 구성</h3><p>한페이지에 ts, html, scss 파일 구조를 유지하는게 좋음</p>\n<p>예) hello-ionic/</p>\n<ul>\n<li>hello-ionic.html</li>\n<li>hello-ionic.scss</li>\n<li>hello-ionic.ts<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//selector 는 필수는 아니지만 특정 페이지에서 기본 스타일 적용에 유용함</span></span><br><span class=\"line\">  selector: <span class=\"string\">'page-hello-ionic'</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">'hello-ionic.html'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloIonicPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ionic-navigation\"><a href=\"#ionic-navigation\" class=\"headerlink\" title=\"ionic navigation\"></a>ionic navigation</h3><p>ionic은 navigationController를 이용해서 flexible하게 페이지를 이동할 수 있다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ion-nav 태그에 root로 지정된 페이지가 가장 상위 페이지</span><br><span class=\"line\">&lt;ion-nav [root]=&quot;rootPage&quot;&gt;&lt;/ion-nav&gt;</span><br></pre></td></tr></table></figure>\n<p>페이지 이동 (push, pop)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OtherPage</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(public navCtrl: NavController) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//다른 페이지로 이동하기</span></span><br><span class=\"line\">  goToOtherPage() &#123;</span><br><span class=\"line\">    <span class=\"comment\">//push another page onto the history stack</span></span><br><span class=\"line\">    <span class=\"comment\">//causing the nav controller to animate the new page in</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.push(OtherPage);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//뒤로가기 (ion-navbar 태그를 페이지에 포함하고 있는 경우, 백버튼에 대한 이벤트 처리가 자동으로 처리됨)</span></span><br><span class=\"line\">  goBack() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navCtrl.pop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"탭-페이지이동-처리\"><a href=\"#탭-페이지이동-처리\" class=\"headerlink\" title=\"탭 페이지이동 처리\"></a>탭 페이지이동 처리</h4><p>탭으로 구성된 화면은 각각의 탭이 최상위 화면이 되어 각 탭마다 고유한 아이디를 갖고 있는 navigationController를 이용함</p>\n<h3 id=\"component-정리하기-http-ionicframework-com-docs-api\"><a href=\"#component-정리하기-http-ionicframework-com-docs-api\" class=\"headerlink\" title=\"component 정리하기 (http://ionicframework.com/docs//api/)\"></a>component 정리하기 (<a href=\"http://ionicframework.com/docs//api/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs//api/</a>)</h3><h4 id=\"http-통신하기\"><a href=\"#http-통신하기\" class=\"headerlink\" title=\"http 통신하기\"></a>http 통신하기</h4><p>http 를 이용하는 방법은 두가지</p>\n<ul>\n<li>@angular/http 사용</li>\n<li>@ionic-native/http 사용 </li>\n<li>차이점 : <a href=\"https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/what-is-the-difference-between-angular-and-native-http/73095</a></li>\n</ul>\n<p>@ionic-native/http 사용 예시</p>\n<ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#설치</span><br><span class=\"line\">ionic plugin add --save cordova-plugin-http</span><br><span class=\"line\">npm install --save @ionic-native/http</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>설정</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// provider에 추가하기</span></span><br><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 provider로 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">providers: [</span><br><span class=\"line\">    StatusBar,</span><br><span class=\"line\">    SplashScreen,</span><br><span class=\"line\">    HTTP,</span><br><span class=\"line\">    &#123;<span class=\"attr\">provide</span>: ErrorHandler, <span class=\"attr\">useClass</span>: IonicErrorHandler&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>@angular/http 사용 예시</p>\n<ul>\n<li>설정<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.module.ts 파일에 모듈 추가하고 사용해야 함</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; HttpModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/http'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">imports: [</span><br><span class=\"line\">  BrowserModule,</span><br><span class=\"line\">  HttpModule,</span><br><span class=\"line\">  IonicModule.forRoot(MyApp)</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"참조문서\"><a href=\"#참조문서\" class=\"headerlink\" title=\"참조문서\"></a>참조문서</h4><ul>\n<li><a href=\"https://ionicframework.com/docs/native/http/\" target=\"_blank\" rel=\"noopener\">https://ionicframework.com/docs/native/http/</a></li>\n<li><a href=\"http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/\" target=\"_blank\" rel=\"noopener\">http://blog.ionic.io/10-minutes-with-ionic-2-calling-an-api/</a></li>\n</ul>\n<h4 id=\"whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\"><a href=\"#whitelist-설정-http-www-gajotres-net-ionic-2-making-rest-http-requests-like-a-pro\" class=\"headerlink\" title=\"whitelist 설정 (http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/)\"></a>whitelist 설정 (<a href=\"http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/\" target=\"_blank\" rel=\"noopener\">http://www.gajotres.net/ionic-2-making-rest-http-requests-like-a-pro/</a>)</h4><ul>\n<li><p>설치</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova plugin add cordova-plugin-whitelist</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>proxy 설정하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트의 ionic.config.json 파일에 설정</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;auction&quot;,  &quot;app_id&quot;: &quot;&quot;,  &quot;type&quot;: &quot;ionic-angular&quot;,  &quot;proxies&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;path&quot;: &quot;/apt&quot;,      &quot;proxyUrl&quot;: &quot;http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev&quot;    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"typescript-기본\"><a href=\"#typescript-기본\" class=\"headerlink\" title=\"typescript 기본\"></a>typescript 기본</h3><p><a href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\" target=\"_blank\" rel=\"noopener\">https://www.typescriptlang.org/docs/handbook/basic-types.html</a></p>\n<h3 id=\"angular2-기본-문법\"><a href=\"#angular2-기본-문법\" class=\"headerlink\" title=\"angular2 기본 문법\"></a>angular2 기본 문법</h3><p>반복문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes” (click)=&quot;onSelect(hero)&gt;</span><br><span class=\"line\">    &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>조건문</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div *ngIf=&quot;selectedHero&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;&#123;&#123;selectedHero.name&#125;&#125; details!&lt;/h2&gt;</span><br><span class=\"line\">  &lt;div&gt;&lt;label&gt;id: &lt;/label&gt;&#123;&#123;selectedHero.id&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;label&gt;name: &lt;/label&gt;</span><br><span class=\"line\">    &lt;input [(ngModel)]=&quot;selectedHero.name&quot; placeholder=&quot;name&quot;/&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>동적 스타일</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li *ngFor=&quot;let hero of heroes&quot;</span><br><span class=\"line\">  [class.selected]=&quot;hero === selectedHero&quot;</span><br><span class=\"line\">  (click)=&quot;onSelect(hero)&quot;&gt;</span><br><span class=\"line\">  &lt;span class=&quot;badge&quot;&gt;&#123;&#123;hero.id&#125;&#125;&lt;/span&gt; &#123;&#123;hero.name&#125;&#125;</span><br><span class=\"line\">&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n<p>@Injectable() 사용하기 : <a href=\"https://angular.io/docs/ts/latest/guide/dependency-injection.html\" target=\"_blank\" rel=\"noopener\">https://angular.io/docs/ts/latest/guide/dependency-injection.html</a></p>\n"},{"title":"ionic-make-android-jar","date":"2019-02-04T07:18:33.000Z","_content":"#### 릴리즈 버전 apk 파일 생성\n```\nionic cordova build android --release\n```\n\ncommand를 입력하면 아래처럼 빌드결과가 출력됩니다.\n\n```\n.\n.\n.\n:transformNative_libsWithMergeJniLibsForRelease\n:processReleaseJavaRes UP-TO-DATE\n:transformResourcesWithMergeJavaResForRelease\n:packageRelease\n:assembleRelease\n:cdvBuildRelease\n\nBUILD SUCCESSFUL    \n\nTotal time: 22.868 secs\nBuilt the following apk(s): \n        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk\n\n```\n\n#### keystore 파일만들기\nkeystore를 만들 때 password를 물어보는데, 잘 저장해 두세요. \n아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.\n(* keystore는 처음 한번만 만들어 사용합니다.)\n```\nkeytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000\n```\n\n#### apk sign하기\n위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)\n\n```\njarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**\n```\n\n#### apk align 하기\n```\n~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk\n```\n\n***최종 아웃풋 파일인 `android-release-aligned.apk`를 마켓에 업로드할 수 있습니다.***\n","source":"_posts/ionic/ionic-make-android-jar.md","raw":"---\ntitle: ionic-make-android-jar\ndate: 2019-02-04 16:18:33\ntags:\n- mobile\n- ionic\n- android\ncategories:\n- ionic\n---\n#### 릴리즈 버전 apk 파일 생성\n```\nionic cordova build android --release\n```\n\ncommand를 입력하면 아래처럼 빌드결과가 출력됩니다.\n\n```\n.\n.\n.\n:transformNative_libsWithMergeJniLibsForRelease\n:processReleaseJavaRes UP-TO-DATE\n:transformResourcesWithMergeJavaResForRelease\n:packageRelease\n:assembleRelease\n:cdvBuildRelease\n\nBUILD SUCCESSFUL    \n\nTotal time: 22.868 secs\nBuilt the following apk(s): \n        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk\n\n```\n\n#### keystore 파일만들기\nkeystore를 만들 때 password를 물어보는데, 잘 저장해 두세요. \n아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.\n(* keystore는 처음 한번만 만들어 사용합니다.)\n```\nkeytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000\n```\n\n#### apk sign하기\n위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)\n\n```\njarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**\n```\n\n#### apk align 하기\n```\n~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk\n```\n\n***최종 아웃풋 파일인 `android-release-aligned.apk`를 마켓에 업로드할 수 있습니다.***\n","slug":"ionic/ionic-make-android-jar","published":1,"updated":"2019-02-04T07:21:28.166Z","_id":"cjs8myf4l002s6guhcwvok41i","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"릴리즈-버전-apk-파일-생성\"><a href=\"#릴리즈-버전-apk-파일-생성\" class=\"headerlink\" title=\"릴리즈 버전 apk 파일 생성\"></a>릴리즈 버전 apk 파일 생성</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic cordova build android --release</span><br></pre></td></tr></table></figure>\n<p>command를 입력하면 아래처럼 빌드결과가 출력됩니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">:transformNative_libsWithMergeJniLibsForRelease</span><br><span class=\"line\">:processReleaseJavaRes UP-TO-DATE</span><br><span class=\"line\">:transformResourcesWithMergeJavaResForRelease</span><br><span class=\"line\">:packageRelease</span><br><span class=\"line\">:assembleRelease</span><br><span class=\"line\">:cdvBuildRelease</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD SUCCESSFUL    </span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 22.868 secs</span><br><span class=\"line\">Built the following apk(s): </span><br><span class=\"line\">        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk</span><br></pre></td></tr></table></figure>\n<h4 id=\"keystore-파일만들기\"><a href=\"#keystore-파일만들기\" class=\"headerlink\" title=\"keystore 파일만들기\"></a>keystore 파일만들기</h4><p>keystore를 만들 때 password를 물어보는데, 잘 저장해 두세요.<br>아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.<br>(* keystore는 처음 한번만 만들어 사용합니다.)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"apk-sign하기\"><a href=\"#apk-sign하기\" class=\"headerlink\" title=\"apk sign하기\"></a>apk sign하기</h4><p>위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**</span><br></pre></td></tr></table></figure>\n<h4 id=\"apk-align-하기\"><a href=\"#apk-align-하기\" class=\"headerlink\" title=\"apk align 하기\"></a>apk align 하기</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk</span><br></pre></td></tr></table></figure>\n<p><strong><em>최종 아웃풋 파일인 <code>android-release-aligned.apk</code>를 마켓에 업로드할 수 있습니다.</em></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"릴리즈-버전-apk-파일-생성\"><a href=\"#릴리즈-버전-apk-파일-생성\" class=\"headerlink\" title=\"릴리즈 버전 apk 파일 생성\"></a>릴리즈 버전 apk 파일 생성</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic cordova build android --release</span><br></pre></td></tr></table></figure>\n<p>command를 입력하면 아래처럼 빌드결과가 출력됩니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">:transformNative_libsWithMergeJniLibsForRelease</span><br><span class=\"line\">:processReleaseJavaRes UP-TO-DATE</span><br><span class=\"line\">:transformResourcesWithMergeJavaResForRelease</span><br><span class=\"line\">:packageRelease</span><br><span class=\"line\">:assembleRelease</span><br><span class=\"line\">:cdvBuildRelease</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD SUCCESSFUL    </span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 22.868 secs</span><br><span class=\"line\">Built the following apk(s): </span><br><span class=\"line\">        /workspace_path/platforms/android/build/outputs/apk/android-release-unsigned.apk</span><br></pre></td></tr></table></figure>\n<h4 id=\"keystore-파일만들기\"><a href=\"#keystore-파일만들기\" class=\"headerlink\" title=\"keystore 파일만들기\"></a>keystore 파일만들기</h4><p>keystore를 만들 때 password를 물어보는데, 잘 저장해 두세요.<br>아래 굵은 글씨로 작성한 sign key도 잘 저장해 두어야 합니다.<br>(* keystore는 처음 한번만 만들어 사용합니다.)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -genkey -v -keystore stroke-key.keystore -alias **its_my_sign_key** -keyalg RSA -keysize 2048 -validity 10000</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"apk-sign하기\"><a href=\"#apk-sign하기\" class=\"headerlink\" title=\"apk sign하기\"></a>apk sign하기</h4><p>위에서 만든 릴리즈버전 apk에 아래 command로 sign을 해주자 (keystore 만들 때 지정한 password를 물어봅니다)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore stroke-key.keystore android-release-unsigned.apk **its_my_sign_key**</span><br></pre></td></tr></table></figure>\n<h4 id=\"apk-align-하기\"><a href=\"#apk-align-하기\" class=\"headerlink\" title=\"apk align 하기\"></a>apk align 하기</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Library/Android/sdk/build-tools/25.0.2/zipalign -v 4 /path/android-release-unsigned.apk android-release-aligned.apk</span><br></pre></td></tr></table></figure>\n<p><strong><em>최종 아웃풋 파일인 <code>android-release-aligned.apk</code>를 마켓에 업로드할 수 있습니다.</em></strong></p>\n"},{"title":"ionic-prototype-app-development","date":"2019-02-04T07:14:38.000Z","_content":"> p2p 금융상품 모아서 보여주기\n\n이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.\np2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요...\n\n### 시작하기\nionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.\n\n업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.\n\nnode와 ionic 설치를 끝내고, 프로젝트를 생성합니다.\n\n````sbtshell\nionic start MyIonicProject super\n````\n\nsuper로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 `복붙`이 너무 편해요.\n\n나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.\n\n폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. \n\n프로젝트 생성이 완료되었으면 간단히 실행해봅시다.\n\n````sbtshell\nionic serve\n````\n\n브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.\n\n#### 기능 정의하기\n어떤 화면이 필요할까...\n\n이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.\n\n대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.\n\n이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.\n\n사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.\n \n그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.\n\n***목록에서 보여지는 정보***\n- 사이트로고\n- 금액\n- 수익률\n- 기간\n- 소진율(optional)\n\n목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.\n\n한페이지로 끝내버리기 위한.. 화면 구성입니다.\n\n이제 생각한대로 만들기 시작해봅시다.\n\n#### 플러그인 설치\n\n대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.\nhttps://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n- 누적 투자금 (파이차트)\n- 누적 수익률\n- 기준금리(http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927)\n\n중간에 소진율을 보여주기 위한 progress bar 도 추가하고..\n```sbtshell\n#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/\nionic g component ProgressBar\n```\n\n상세화면을 띄우기 위해서 in-app-browser도 설치\n```sbtshell\n#https://ionicframework.com/docs/native/in-app-browser/\nionic cordova plugin add cordova-plugin-inappbrowser\nnpm install --save @ionic-native/in-app-browser\n```\n\n대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.\n(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)\n\n##### 딜 목록화면\n\n![딜 목록화면](/images/ionic/deal_list.webp \"딜 목록화면\")\n\n##### 통계화면\n\n![통계화면](/images/ionic/p2p_statistics.webp \"통계화면\")\n\n#### api 만들기\nnode를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.\n\n필수정보만 디비스키마를 만들어서 필요한 정보를 저장\n```sql\nCREATE TABLE `p2p`.`deal` (\n  `id` INT NOT NULL AUTO_INCREMENT COMMENT '딜 아이디 ',\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealTitle` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL,\n  `dealUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL,\n  `dealAmount` INT NOT NULL COMMENT '딜 금액 ',\n  `dealRevenueRate` FLOAT NOT NULL COMMENT '수익률 ',\n  `dealMonthPeriod` INT NOT NULL COMMENT '딜 기간 (월 기준) ',\n  `dealRunoutRate` FLOAT NOT NULL COMMENT '딜 소진율 ',\n  `updatedAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '갱신일시\\n',\n  `createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시\\n',\n  PRIMARY KEY (`id`));\n\nCREATE TABLE `p2p`.`site` (\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 코드 ',\n  `siteName` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 이름 ',\n  `siteUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 주소 ',\n  `siteLogo` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 로고 ',\n  PRIMARY KEY (`siteCode`));\n```\n","source":"_posts/ionic/ionic-prototype-app-development.md","raw":"---\ntitle: ionic-prototype-app-development\ndate: 2019-02-04 16:14:38\ntags:\n- mobile\n- ionic\ncategories:\n- ionic\n---\n> p2p 금융상품 모아서 보여주기\n\n이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.\np2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요...\n\n### 시작하기\nionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.\n\n업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.\n\nnode와 ionic 설치를 끝내고, 프로젝트를 생성합니다.\n\n````sbtshell\nionic start MyIonicProject super\n````\n\nsuper로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 `복붙`이 너무 편해요.\n\n나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.\n\n폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. \n\n프로젝트 생성이 완료되었으면 간단히 실행해봅시다.\n\n````sbtshell\nionic serve\n````\n\n브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.\n\n#### 기능 정의하기\n어떤 화면이 필요할까...\n\n이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.\n\n대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.\n\n이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.\n\n사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.\n \n그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.\n\n***목록에서 보여지는 정보***\n- 사이트로고\n- 금액\n- 수익률\n- 기간\n- 소진율(optional)\n\n목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.\n\n한페이지로 끝내버리기 위한.. 화면 구성입니다.\n\n이제 생각한대로 만들기 시작해봅시다.\n\n#### 플러그인 설치\n\n대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.\nhttps://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n- 누적 투자금 (파이차트)\n- 누적 수익률\n- 기준금리(http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927)\n\n중간에 소진율을 보여주기 위한 progress bar 도 추가하고..\n```sbtshell\n#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/\nionic g component ProgressBar\n```\n\n상세화면을 띄우기 위해서 in-app-browser도 설치\n```sbtshell\n#https://ionicframework.com/docs/native/in-app-browser/\nionic cordova plugin add cordova-plugin-inappbrowser\nnpm install --save @ionic-native/in-app-browser\n```\n\n대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.\n(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)\n\n##### 딜 목록화면\n\n![딜 목록화면](/images/ionic/deal_list.webp \"딜 목록화면\")\n\n##### 통계화면\n\n![통계화면](/images/ionic/p2p_statistics.webp \"통계화면\")\n\n#### api 만들기\nnode를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.\n\n필수정보만 디비스키마를 만들어서 필요한 정보를 저장\n```sql\nCREATE TABLE `p2p`.`deal` (\n  `id` INT NOT NULL AUTO_INCREMENT COMMENT '딜 아이디 ',\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,\n  `dealTitle` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL,\n  `dealUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL,\n  `dealAmount` INT NOT NULL COMMENT '딜 금액 ',\n  `dealRevenueRate` FLOAT NOT NULL COMMENT '수익률 ',\n  `dealMonthPeriod` INT NOT NULL COMMENT '딜 기간 (월 기준) ',\n  `dealRunoutRate` FLOAT NOT NULL COMMENT '딜 소진율 ',\n  `updatedAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '갱신일시\\n',\n  `createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시\\n',\n  PRIMARY KEY (`id`));\n\nCREATE TABLE `p2p`.`site` (\n  `siteCode` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 코드 ',\n  `siteName` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 이름 ',\n  `siteUrl` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 주소 ',\n  `siteLogo` VARCHAR(500) CHARACTER SET 'utf8' NOT NULL COMMENT '사이트 로고 ',\n  PRIMARY KEY (`siteCode`));\n```\n","slug":"ionic/ionic-prototype-app-development","published":1,"updated":"2019-02-04T07:21:28.183Z","_id":"cjs8myfmk002x6guh2at5oulp","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>p2p 금융상품 모아서 보여주기</p>\n</blockquote>\n<p>이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.<br>p2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요…</p>\n<h3 id=\"시작하기\"><a href=\"#시작하기\" class=\"headerlink\" title=\"시작하기\"></a>시작하기</h3><p>ionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.</p>\n<p>업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.</p>\n<p>node와 ionic 설치를 끝내고, 프로젝트를 생성합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic start MyIonicProject super</span><br></pre></td></tr></table></figure>\n<p>super로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 <code>복붙</code>이 너무 편해요.</p>\n<p>나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.</p>\n<p>폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. </p>\n<p>프로젝트 생성이 완료되었으면 간단히 실행해봅시다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<p>브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.</p>\n<h4 id=\"기능-정의하기\"><a href=\"#기능-정의하기\" class=\"headerlink\" title=\"기능 정의하기\"></a>기능 정의하기</h4><p>어떤 화면이 필요할까…</p>\n<p>이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.</p>\n<p>대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.</p>\n<p>이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.</p>\n<p>사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.</p>\n<p>그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.</p>\n<p><strong><em>목록에서 보여지는 정보</em></strong></p>\n<ul>\n<li>사이트로고</li>\n<li>금액</li>\n<li>수익률</li>\n<li>기간</li>\n<li>소진율(optional)</li>\n</ul>\n<p>목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.</p>\n<p>한페이지로 끝내버리기 위한.. 화면 구성입니다.</p>\n<p>이제 생각한대로 만들기 시작해봅시다.</p>\n<h4 id=\"플러그인-설치\"><a href=\"#플러그인-설치\" class=\"headerlink\" title=\"플러그인 설치\"></a>플러그인 설치</h4><p>대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.<br><a href=\"https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\" target=\"_blank\" rel=\"noopener\">https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/</a></p>\n<ul>\n<li>누적 투자금 (파이차트)</li>\n<li>누적 수익률</li>\n<li>기준금리(<a href=\"http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927\" target=\"_blank\" rel=\"noopener\">http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927</a>)</li>\n</ul>\n<p>중간에 소진율을 보여주기 위한 progress bar 도 추가하고..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/</span><br><span class=\"line\">ionic g component ProgressBar</span><br></pre></td></tr></table></figure></p>\n<p>상세화면을 띄우기 위해서 in-app-browser도 설치<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://ionicframework.com/docs/native/in-app-browser/</span><br><span class=\"line\">ionic cordova plugin add cordova-plugin-inappbrowser</span><br><span class=\"line\">npm install --save @ionic-native/in-app-browser</span><br></pre></td></tr></table></figure></p>\n<p>대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.<br>(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)</p>\n<h5 id=\"딜-목록화면\"><a href=\"#딜-목록화면\" class=\"headerlink\" title=\"딜 목록화면\"></a>딜 목록화면</h5><p><img src=\"/images/ionic/deal_list.webp\" alt=\"딜 목록화면\" title=\"딜 목록화면\"></p>\n<h5 id=\"통계화면\"><a href=\"#통계화면\" class=\"headerlink\" title=\"통계화면\"></a>통계화면</h5><p><img src=\"/images/ionic/p2p_statistics.webp\" alt=\"통계화면\" title=\"통계화면\"></p>\n<h4 id=\"api-만들기\"><a href=\"#api-만들기\" class=\"headerlink\" title=\"api 만들기\"></a>api 만들기</h4><p>node를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.</p>\n<p>필수정보만 디비스키마를 만들어서 필요한 정보를 저장<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`deal`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 아이디 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealTitle`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealAmount`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 금액 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRevenueRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'수익률 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealMonthPeriod`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 기간 (월 기준) '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRunoutRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 소진율 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`updatedAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'갱신일시\\n'</span>,</span><br><span class=\"line\">  <span class=\"string\">`createdAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'생성일시\\n'</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`site`</span> (</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 코드 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteName`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 이름 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 주소 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteLogo`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 로고 '</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`siteCode`</span>));</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>p2p 금융상품 모아서 보여주기</p>\n</blockquote>\n<p>이번에 p2p 금융상품을 모아서 보여주는 앱을 만들어 보기로 했습니다.<br>p2p에 투자하려다 보면 사이트마다 들어가서 투자상품을 확인하는게 너무 번거로워서 시작했는데, 이미 있더군요…</p>\n<h3 id=\"시작하기\"><a href=\"#시작하기\" class=\"headerlink\" title=\"시작하기\"></a>시작하기</h3><p>ionic이 문제인건지 angular가 문제인지 업데이트만 되면 앱을 수정해야 합니다.</p>\n<p>업데이트하고 버전에 맞게 수정하는데 너무 많은 시간을 써서 최신 stable로 시작하고 버전을 fix하고 사용했습니다.</p>\n<p>node와 ionic 설치를 끝내고, 프로젝트를 생성합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic start MyIonicProject super</span><br></pre></td></tr></table></figure>\n<p>super로 만들면 왠만한 기능의 템플릿이 포함되어 있어서 <code>복붙</code>이 너무 편해요.</p>\n<p>나중에 필요없는 파일 지우는것도 일이긴 하지만 빨리, 쉽게 만들기 위해서 super로 생성했습니다.</p>\n<p>폴더 구조도 잘 잡혀있어서 처음 ionic 프로젝트를 접해보는 분께 추천드립니다. </p>\n<p>프로젝트 생성이 완료되었으면 간단히 실행해봅시다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<p>브라우저에서 정상적으로 실행된다면 기본적인 설정은 끝입니다.</p>\n<h4 id=\"기능-정의하기\"><a href=\"#기능-정의하기\" class=\"headerlink\" title=\"기능 정의하기\"></a>기능 정의하기</h4><p>어떤 화면이 필요할까…</p>\n<p>이번 앱의 목적은 여러 p2p 사이트의 딜 목록을 모아서 보여주는 것입니다.</p>\n<p>대표적인 p2p 사이트를 들락날락.. 공통적으로 보이는 factor가 수익률(이자율)과 금액 소진율정도입니다.</p>\n<p>이미지가 있으면 좋겠지만 이미지는 없는 경우도 많아서 공통으로 넣기 애매해 보입니다.</p>\n<p>사실 상환방법에 따라 실수익률이 많이 달라지기 때문에 상환방식도 목록에서 보여주고 싶지만, 해당 정보가 p2p사이트에서 상세로 빠져있는 경우가 많아 빼기로 했습니다.</p>\n<p>그래서 목록에서 보여지는 정보를 다섯가지 항목으로 구성하기로 했습니다.</p>\n<p><strong><em>목록에서 보여지는 정보</em></strong></p>\n<ul>\n<li>사이트로고</li>\n<li>금액</li>\n<li>수익률</li>\n<li>기간</li>\n<li>소진율(optional)</li>\n</ul>\n<p>목록 화면은 사이트 검색이 가능하게하고, 화면 상단에 대쉬보드 기능을 겸할 수 있는 요약 정보를 보여주기로 합니다.</p>\n<p>한페이지로 끝내버리기 위한.. 화면 구성입니다.</p>\n<p>이제 생각한대로 만들기 시작해봅시다.</p>\n<h4 id=\"플러그인-설치\"><a href=\"#플러그인-설치\" class=\"headerlink\" title=\"플러그인 설치\"></a>플러그인 설치</h4><p>대쉬보드는 검색 사이트의 누적 데이터를 보여주도록 합시다.<br><a href=\"https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\" target=\"_blank\" rel=\"noopener\">https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/</a></p>\n<ul>\n<li>누적 투자금 (파이차트)</li>\n<li>누적 수익률</li>\n<li>기준금리(<a href=\"http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927\" target=\"_blank\" rel=\"noopener\">http://www.bok.or.kr/baserate/baserateList.action?menuNaviId=1927</a>)</li>\n</ul>\n<p>중간에 소진율을 보여주기 위한 progress bar 도 추가하고..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://www.joshmorony.com/build-a-simple-progress-bar-component-in-ionic-2/</span><br><span class=\"line\">ionic g component ProgressBar</span><br></pre></td></tr></table></figure></p>\n<p>상세화면을 띄우기 위해서 in-app-browser도 설치<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://ionicframework.com/docs/native/in-app-browser/</span><br><span class=\"line\">ionic cordova plugin add cordova-plugin-inappbrowser</span><br><span class=\"line\">npm install --save @ionic-native/in-app-browser</span><br></pre></td></tr></table></figure></p>\n<p>대충 화면 작업은 끝났습니다. 처음 예상한 화면이랑 조금 다르긴 한데, 유사한 결과물을 만들었습니다.<br>(통계화면과 목록화면을 나누고 사이트별 검색은 셀렉트박스를 이용했습니다.)</p>\n<h5 id=\"딜-목록화면\"><a href=\"#딜-목록화면\" class=\"headerlink\" title=\"딜 목록화면\"></a>딜 목록화면</h5><p><img src=\"/images/ionic/deal_list.webp\" alt=\"딜 목록화면\" title=\"딜 목록화면\"></p>\n<h5 id=\"통계화면\"><a href=\"#통계화면\" class=\"headerlink\" title=\"통계화면\"></a>통계화면</h5><p><img src=\"/images/ionic/p2p_statistics.webp\" alt=\"통계화면\" title=\"통계화면\"></p>\n<h4 id=\"api-만들기\"><a href=\"#api-만들기\" class=\"headerlink\" title=\"api 만들기\"></a>api 만들기</h4><p>node를 이용해서 api 서버를 만들고, 스크랩핑할 수 있도록 작업합니다.</p>\n<p>필수정보만 디비스키마를 만들어서 필요한 정보를 저장<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`deal`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 아이디 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealTitle`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealAmount`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 금액 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRevenueRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'수익률 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealMonthPeriod`</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 기간 (월 기준) '</span>,</span><br><span class=\"line\">  <span class=\"string\">`dealRunoutRate`</span> <span class=\"built_in\">FLOAT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'딜 소진율 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`updatedAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'갱신일시\\n'</span>,</span><br><span class=\"line\">  <span class=\"string\">`createdAt`</span> DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'생성일시\\n'</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`p2p`</span>.<span class=\"string\">`site`</span> (</span><br><span class=\"line\">  <span class=\"string\">`siteCode`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">45</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 코드 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteName`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 이름 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteUrl`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 주소 '</span>,</span><br><span class=\"line\">  <span class=\"string\">`siteLogo`</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">500</span>) <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"string\">'utf8'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'사이트 로고 '</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`siteCode`</span>));</span><br></pre></td></tr></table></figure></p>\n"},{"title":"ionic-set-environment","date":"2019-02-04T07:19:45.000Z","_content":"## 공식 document\nhttp://ionicframework.com/docs/intro/installation/\n\n## 설치\n```sbtshell\n# permission deny되는 경우 sudo로 설치해주세요\nnpm install -g ionic cordova\n```\n\n***node는 필수로 설치되어 있어야 합니다.*** \n\n## 프로젝트 생성 / 실행\n\n```sbtshell\n#프로젝트만들기\n#https://ionicframework.com/getting-started/\nionic start myFirstApp template_name\n\n##template type\n#tabs(default) : a simple 3 tab layout\n#sidemenu: a layout with a swipable menu on the side\n#blank: a bare starter with a single page\n#super: starter project with over 14 ready to use page designs\n#tutorial: a guided starter project\n\n#생성한 프로젝트로 이동\ncd myFirstApp\n\n#실행하기(run on browser)\nionic serve\n```\n\n> 에러[Error: Cannot find module 'reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.\n> https://github.com/driftyco/ionic/issues/9689 \n\n## 플랫폼별 개발환경 만들기\n\n```sbtshell\n#프로젝트에 설치된 플랫폼 리스트 확인하기\ncordova platform ls\n\n#플랫폼별 요구사항 체크\ncordova requirements\n\n#프로젝트에 플랫폼 추가하기\ncordova platform add ios --save\ncordova platform add android --save\n```\n\n### ios 개발환경 만들기\n\n- app store에서 xcode 검색해서 설치하기\n- iOS기기로 런치할 수 있는 개발 툴 설치\n```sbtshell\nnpm install -g ios-sim\nnpm install -g ios-deploy\n```\n\n> 에러[xcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance]나는 경우\n> http://frontend.diffthink.kr/2016/04/ios.html\n\n![ios_setting](/images/ionic/ios_setting.png \"ios 설정\")\n\n- xcode에서 preference -> Locations command line tools 선택\n  - 참고 : https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\n\n### android 개발환경 만들기\n\nandroid studio 설치하기 : https://developer.android.com/studio/install.html\n\nANDROID_HOME path 설정\n\n```\n#mac에서 설정 \n#~.bash_profile 파일에 설정하기\nexport ANDROID_HOME=\"/Users/username/Library/Android/sdk\"\nexport ANDROID_TOOLS=\"/Users/username/Library/Android/sdk/tools\"\nexport ANDROID_PLATFORM_TOOLS=\"/Users/username/Library/Android/sdk/platform-tools\"\nPATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS\n```\n\nandroid 가상 디바이스에서 실행하기\n\n```\n# 가상 디바이스 목록보기\nadb devices\n\n# 결과목록\n# emulator-5554   device\n\n# 특정 타겟에서 실행하기\nionic run android --target=emulator-5554\n```\n\n> 에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.\n> Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우\n> https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\n> 링크 참고해서 다운로드 받은 파일은 tools에 덮기\n\n> 에러[Error: android: Command failed with exit code 2]\n> 에뮬레이터 실행해 놓고, 빌드하기\n> 참고하기 : https://cordova.apache.org/docs/en/latest/guide/platforms/android/\n\n## 자주 사용하는 ionic command\n\n```\n#특정 플랫폼으로 실행하기\n#실제 디바이스에 설치하기 (debugging & developer mode 켜고 usb로 연결한 후 사용)\n#https://developer.android.com/studio/run/device.html#developer-device-options\nionic cordova run android --device\nionic cordova build android --release\nionic cordova platform ls\n\n# browser에서 실행하기\nionic serve \nionic run browser\n\n##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함\n#(plaform에 browser 추가 필요)\n#https://github.com/driftyco/ionic-native/issues/403\n\n#ionic serve runs your app as a website (meaning it doesn't have any Cordova capabilities)\n#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities\n```","source":"_posts/ionic/ionic-set-environment.md","raw":"---\ntitle: ionic-set-environment\ndate: 2019-02-04 16:19:45\ntags:\n- mobile\n- ionic\ncategories:\n- ionic\n---\n## 공식 document\nhttp://ionicframework.com/docs/intro/installation/\n\n## 설치\n```sbtshell\n# permission deny되는 경우 sudo로 설치해주세요\nnpm install -g ionic cordova\n```\n\n***node는 필수로 설치되어 있어야 합니다.*** \n\n## 프로젝트 생성 / 실행\n\n```sbtshell\n#프로젝트만들기\n#https://ionicframework.com/getting-started/\nionic start myFirstApp template_name\n\n##template type\n#tabs(default) : a simple 3 tab layout\n#sidemenu: a layout with a swipable menu on the side\n#blank: a bare starter with a single page\n#super: starter project with over 14 ready to use page designs\n#tutorial: a guided starter project\n\n#생성한 프로젝트로 이동\ncd myFirstApp\n\n#실행하기(run on browser)\nionic serve\n```\n\n> 에러[Error: Cannot find module 'reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.\n> https://github.com/driftyco/ionic/issues/9689 \n\n## 플랫폼별 개발환경 만들기\n\n```sbtshell\n#프로젝트에 설치된 플랫폼 리스트 확인하기\ncordova platform ls\n\n#플랫폼별 요구사항 체크\ncordova requirements\n\n#프로젝트에 플랫폼 추가하기\ncordova platform add ios --save\ncordova platform add android --save\n```\n\n### ios 개발환경 만들기\n\n- app store에서 xcode 검색해서 설치하기\n- iOS기기로 런치할 수 있는 개발 툴 설치\n```sbtshell\nnpm install -g ios-sim\nnpm install -g ios-deploy\n```\n\n> 에러[xcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance]나는 경우\n> http://frontend.diffthink.kr/2016/04/ios.html\n\n![ios_setting](/images/ionic/ios_setting.png \"ios 설정\")\n\n- xcode에서 preference -> Locations command line tools 선택\n  - 참고 : https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\n\n### android 개발환경 만들기\n\nandroid studio 설치하기 : https://developer.android.com/studio/install.html\n\nANDROID_HOME path 설정\n\n```\n#mac에서 설정 \n#~.bash_profile 파일에 설정하기\nexport ANDROID_HOME=\"/Users/username/Library/Android/sdk\"\nexport ANDROID_TOOLS=\"/Users/username/Library/Android/sdk/tools\"\nexport ANDROID_PLATFORM_TOOLS=\"/Users/username/Library/Android/sdk/platform-tools\"\nPATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS\n```\n\nandroid 가상 디바이스에서 실행하기\n\n```\n# 가상 디바이스 목록보기\nadb devices\n\n# 결과목록\n# emulator-5554   device\n\n# 특정 타겟에서 실행하기\nionic run android --target=emulator-5554\n```\n\n> 에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.\n> Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우\n> https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\n> 링크 참고해서 다운로드 받은 파일은 tools에 덮기\n\n> 에러[Error: android: Command failed with exit code 2]\n> 에뮬레이터 실행해 놓고, 빌드하기\n> 참고하기 : https://cordova.apache.org/docs/en/latest/guide/platforms/android/\n\n## 자주 사용하는 ionic command\n\n```\n#특정 플랫폼으로 실행하기\n#실제 디바이스에 설치하기 (debugging & developer mode 켜고 usb로 연결한 후 사용)\n#https://developer.android.com/studio/run/device.html#developer-device-options\nionic cordova run android --device\nionic cordova build android --release\nionic cordova platform ls\n\n# browser에서 실행하기\nionic serve \nionic run browser\n\n##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함\n#(plaform에 browser 추가 필요)\n#https://github.com/driftyco/ionic-native/issues/403\n\n#ionic serve runs your app as a website (meaning it doesn't have any Cordova capabilities)\n#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities\n```","slug":"ionic/ionic-set-environment","published":1,"updated":"2019-02-04T07:21:41.766Z","_id":"cjs8myfng00316guh8t6lp4ch","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"공식-document\"><a href=\"#공식-document\" class=\"headerlink\" title=\"공식 document\"></a>공식 document</h2><p><a href=\"http://ionicframework.com/docs/intro/installation/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs/intro/installation/</a></p>\n<h2 id=\"설치\"><a href=\"#설치\" class=\"headerlink\" title=\"설치\"></a>설치</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permission deny되는 경우 sudo로 설치해주세요</span><br><span class=\"line\">npm install -g ionic cordova</span><br></pre></td></tr></table></figure>\n<p><strong><em>node는 필수로 설치되어 있어야 합니다.</em></strong> </p>\n<h2 id=\"프로젝트-생성-실행\"><a href=\"#프로젝트-생성-실행\" class=\"headerlink\" title=\"프로젝트 생성 / 실행\"></a>프로젝트 생성 / 실행</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트만들기</span><br><span class=\"line\">#https://ionicframework.com/getting-started/</span><br><span class=\"line\">ionic start myFirstApp template_name</span><br><span class=\"line\"></span><br><span class=\"line\">##template type</span><br><span class=\"line\">#tabs(default) : a simple 3 tab layout</span><br><span class=\"line\">#sidemenu: a layout with a swipable menu on the side</span><br><span class=\"line\">#blank: a bare starter with a single page</span><br><span class=\"line\">#super: starter project with over 14 ready to use page designs</span><br><span class=\"line\">#tutorial: a guided starter project</span><br><span class=\"line\"></span><br><span class=\"line\">#생성한 프로젝트로 이동</span><br><span class=\"line\">cd myFirstApp</span><br><span class=\"line\"></span><br><span class=\"line\">#실행하기(run on browser)</span><br><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Cannot find module ‘reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.<br><a href=\"https://github.com/driftyco/ionic/issues/9689\" target=\"_blank\" rel=\"noopener\">https://github.com/driftyco/ionic/issues/9689</a> </p>\n</blockquote>\n<h2 id=\"플랫폼별-개발환경-만들기\"><a href=\"#플랫폼별-개발환경-만들기\" class=\"headerlink\" title=\"플랫폼별 개발환경 만들기\"></a>플랫폼별 개발환경 만들기</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트에 설치된 플랫폼 리스트 확인하기</span><br><span class=\"line\">cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\">#플랫폼별 요구사항 체크</span><br><span class=\"line\">cordova requirements</span><br><span class=\"line\"></span><br><span class=\"line\">#프로젝트에 플랫폼 추가하기</span><br><span class=\"line\">cordova platform add ios --save</span><br><span class=\"line\">cordova platform add android --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"ios-개발환경-만들기\"><a href=\"#ios-개발환경-만들기\" class=\"headerlink\" title=\"ios 개발환경 만들기\"></a>ios 개발환경 만들기</h3><ul>\n<li>app store에서 xcode 검색해서 설치하기</li>\n<li>iOS기기로 런치할 수 있는 개발 툴 설치<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g ios-sim</span><br><span class=\"line\">npm install -g ios-deploy</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>에러[xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance]나는 경우<br><a href=\"http://frontend.diffthink.kr/2016/04/ios.html\" target=\"_blank\" rel=\"noopener\">http://frontend.diffthink.kr/2016/04/ios.html</a></p>\n</blockquote>\n<p><img src=\"/images/ionic/ios_setting.png\" alt=\"ios_setting\" title=\"ios 설정\"></p>\n<ul>\n<li>xcode에서 preference -&gt; Locations command line tools 선택<ul>\n<li>참고 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/ios/</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"android-개발환경-만들기\"><a href=\"#android-개발환경-만들기\" class=\"headerlink\" title=\"android 개발환경 만들기\"></a>android 개발환경 만들기</h3><p>android studio 설치하기 : <a href=\"https://developer.android.com/studio/install.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/studio/install.html</a></p>\n<p>ANDROID_HOME path 설정</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#mac에서 설정 </span><br><span class=\"line\">#~.bash_profile 파일에 설정하기</span><br><span class=\"line\">export ANDROID_HOME=&quot;/Users/username/Library/Android/sdk&quot;</span><br><span class=\"line\">export ANDROID_TOOLS=&quot;/Users/username/Library/Android/sdk/tools&quot;</span><br><span class=\"line\">export ANDROID_PLATFORM_TOOLS=&quot;/Users/username/Library/Android/sdk/platform-tools&quot;</span><br><span class=\"line\">PATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS</span><br></pre></td></tr></table></figure>\n<p>android 가상 디바이스에서 실행하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 가상 디바이스 목록보기</span><br><span class=\"line\">adb devices</span><br><span class=\"line\"></span><br><span class=\"line\"># 결과목록</span><br><span class=\"line\"># emulator-5554   device</span><br><span class=\"line\"></span><br><span class=\"line\"># 특정 타겟에서 실행하기</span><br><span class=\"line\">ionic run android --target=emulator-5554</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.<br>Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우<br><a href=\"https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15</a><br>링크 참고해서 다운로드 받은 파일은 tools에 덮기</p>\n</blockquote>\n<blockquote>\n<p>에러[Error: android: Command failed with exit code 2]<br>에뮬레이터 실행해 놓고, 빌드하기<br>참고하기 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/android/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/android/</a></p>\n</blockquote>\n<h2 id=\"자주-사용하는-ionic-command\"><a href=\"#자주-사용하는-ionic-command\" class=\"headerlink\" title=\"자주 사용하는 ionic command\"></a>자주 사용하는 ionic command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#특정 플랫폼으로 실행하기</span><br><span class=\"line\">#실제 디바이스에 설치하기 (debugging &amp; developer mode 켜고 usb로 연결한 후 사용)</span><br><span class=\"line\">#https://developer.android.com/studio/run/device.html#developer-device-options</span><br><span class=\"line\">ionic cordova run android --device</span><br><span class=\"line\">ionic cordova build android --release</span><br><span class=\"line\">ionic cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\"># browser에서 실행하기</span><br><span class=\"line\">ionic serve </span><br><span class=\"line\">ionic run browser</span><br><span class=\"line\"></span><br><span class=\"line\">##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함</span><br><span class=\"line\">#(plaform에 browser 추가 필요)</span><br><span class=\"line\">#https://github.com/driftyco/ionic-native/issues/403</span><br><span class=\"line\"></span><br><span class=\"line\">#ionic serve runs your app as a website (meaning it doesn&apos;t have any Cordova capabilities)</span><br><span class=\"line\">#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"공식-document\"><a href=\"#공식-document\" class=\"headerlink\" title=\"공식 document\"></a>공식 document</h2><p><a href=\"http://ionicframework.com/docs/intro/installation/\" target=\"_blank\" rel=\"noopener\">http://ionicframework.com/docs/intro/installation/</a></p>\n<h2 id=\"설치\"><a href=\"#설치\" class=\"headerlink\" title=\"설치\"></a>설치</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permission deny되는 경우 sudo로 설치해주세요</span><br><span class=\"line\">npm install -g ionic cordova</span><br></pre></td></tr></table></figure>\n<p><strong><em>node는 필수로 설치되어 있어야 합니다.</em></strong> </p>\n<h2 id=\"프로젝트-생성-실행\"><a href=\"#프로젝트-생성-실행\" class=\"headerlink\" title=\"프로젝트 생성 / 실행\"></a>프로젝트 생성 / 실행</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트만들기</span><br><span class=\"line\">#https://ionicframework.com/getting-started/</span><br><span class=\"line\">ionic start myFirstApp template_name</span><br><span class=\"line\"></span><br><span class=\"line\">##template type</span><br><span class=\"line\">#tabs(default) : a simple 3 tab layout</span><br><span class=\"line\">#sidemenu: a layout with a swipable menu on the side</span><br><span class=\"line\">#blank: a bare starter with a single page</span><br><span class=\"line\">#super: starter project with over 14 ready to use page designs</span><br><span class=\"line\">#tutorial: a guided starter project</span><br><span class=\"line\"></span><br><span class=\"line\">#생성한 프로젝트로 이동</span><br><span class=\"line\">cd myFirstApp</span><br><span class=\"line\"></span><br><span class=\"line\">#실행하기(run on browser)</span><br><span class=\"line\">ionic serve</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Cannot find module ‘reflect-metadata’]발생하는 경우 node 버전 6.xx로 올려주세요.<br><a href=\"https://github.com/driftyco/ionic/issues/9689\" target=\"_blank\" rel=\"noopener\">https://github.com/driftyco/ionic/issues/9689</a> </p>\n</blockquote>\n<h2 id=\"플랫폼별-개발환경-만들기\"><a href=\"#플랫폼별-개발환경-만들기\" class=\"headerlink\" title=\"플랫폼별 개발환경 만들기\"></a>플랫폼별 개발환경 만들기</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#프로젝트에 설치된 플랫폼 리스트 확인하기</span><br><span class=\"line\">cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\">#플랫폼별 요구사항 체크</span><br><span class=\"line\">cordova requirements</span><br><span class=\"line\"></span><br><span class=\"line\">#프로젝트에 플랫폼 추가하기</span><br><span class=\"line\">cordova platform add ios --save</span><br><span class=\"line\">cordova platform add android --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"ios-개발환경-만들기\"><a href=\"#ios-개발환경-만들기\" class=\"headerlink\" title=\"ios 개발환경 만들기\"></a>ios 개발환경 만들기</h3><ul>\n<li>app store에서 xcode 검색해서 설치하기</li>\n<li>iOS기기로 런치할 수 있는 개발 툴 설치<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g ios-sim</span><br><span class=\"line\">npm install -g ios-deploy</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>에러[xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance]나는 경우<br><a href=\"http://frontend.diffthink.kr/2016/04/ios.html\" target=\"_blank\" rel=\"noopener\">http://frontend.diffthink.kr/2016/04/ios.html</a></p>\n</blockquote>\n<p><img src=\"/images/ionic/ios_setting.png\" alt=\"ios_setting\" title=\"ios 설정\"></p>\n<ul>\n<li>xcode에서 preference -&gt; Locations command line tools 선택<ul>\n<li>참고 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/ios/</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"android-개발환경-만들기\"><a href=\"#android-개발환경-만들기\" class=\"headerlink\" title=\"android 개발환경 만들기\"></a>android 개발환경 만들기</h3><p>android studio 설치하기 : <a href=\"https://developer.android.com/studio/install.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/studio/install.html</a></p>\n<p>ANDROID_HOME path 설정</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#mac에서 설정 </span><br><span class=\"line\">#~.bash_profile 파일에 설정하기</span><br><span class=\"line\">export ANDROID_HOME=&quot;/Users/username/Library/Android/sdk&quot;</span><br><span class=\"line\">export ANDROID_TOOLS=&quot;/Users/username/Library/Android/sdk/tools&quot;</span><br><span class=\"line\">export ANDROID_PLATFORM_TOOLS=&quot;/Users/username/Library/Android/sdk/platform-tools&quot;</span><br><span class=\"line\">PATH=$PATH:$ANDROID_HOME:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS</span><br></pre></td></tr></table></figure>\n<p>android 가상 디바이스에서 실행하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 가상 디바이스 목록보기</span><br><span class=\"line\">adb devices</span><br><span class=\"line\"></span><br><span class=\"line\"># 결과목록</span><br><span class=\"line\"># emulator-5554   device</span><br><span class=\"line\"></span><br><span class=\"line\"># 특정 타겟에서 실행하기</span><br><span class=\"line\">ionic run android --target=emulator-5554</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>에러[Error: Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.<br>Looked here: /Users/jiseob/Library/Android/sdk/tools/templates/gradle/wrapper]나는경우<br><a href=\"https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15\" target=\"_blank\" rel=\"noopener\">https://forum.ionicframework.com/t/error-could-not-find-gradle-wrapper-within-android-sdk-might-need-to-update-yo-ur-android-sdk/22056/15</a><br>링크 참고해서 다운로드 받은 파일은 tools에 덮기</p>\n</blockquote>\n<blockquote>\n<p>에러[Error: android: Command failed with exit code 2]<br>에뮬레이터 실행해 놓고, 빌드하기<br>참고하기 : <a href=\"https://cordova.apache.org/docs/en/latest/guide/platforms/android/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/docs/en/latest/guide/platforms/android/</a></p>\n</blockquote>\n<h2 id=\"자주-사용하는-ionic-command\"><a href=\"#자주-사용하는-ionic-command\" class=\"headerlink\" title=\"자주 사용하는 ionic command\"></a>자주 사용하는 ionic command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#특정 플랫폼으로 실행하기</span><br><span class=\"line\">#실제 디바이스에 설치하기 (debugging &amp; developer mode 켜고 usb로 연결한 후 사용)</span><br><span class=\"line\">#https://developer.android.com/studio/run/device.html#developer-device-options</span><br><span class=\"line\">ionic cordova run android --device</span><br><span class=\"line\">ionic cordova build android --release</span><br><span class=\"line\">ionic cordova platform ls</span><br><span class=\"line\"></span><br><span class=\"line\"># browser에서 실행하기</span><br><span class=\"line\">ionic serve </span><br><span class=\"line\">ionic run browser</span><br><span class=\"line\"></span><br><span class=\"line\">##위의 두 커맨드는 브라우저에서 실행되지만 네이티브 기능을 사용하려면 밑의 커맨드를 이용해야 함</span><br><span class=\"line\">#(plaform에 browser 추가 필요)</span><br><span class=\"line\">#https://github.com/driftyco/ionic-native/issues/403</span><br><span class=\"line\"></span><br><span class=\"line\">#ionic serve runs your app as a website (meaning it doesn&apos;t have any Cordova capabilities)</span><br><span class=\"line\">#ionic run browser runs your app in the Cordova browser platform, which will inject cordova.jsand any plugins that have browser capabilities</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjs8mv9kg000d6guhfthmmssr","category_id":"cjs8mv9ku000q6guhlkrh26l1","_id":"cjs8mv9kz00106guhynhlh37j"},{"post_id":"cjs8mv9kr000n6guhzjdh4qmp","category_id":"cjs8mv9ky000z6guhm1gdwhkh","_id":"cjs8mv9l200176guh8ufqn29o"},{"post_id":"cjs8mv9rd00246guh1knh7x67","category_id":"cjs8mv9rg00256guhgbz1u2ii","_id":"cjs8mv9rh00266guhq1zg1r4t"},{"post_id":"cjs8my0ra00276guhlpzfk0sc","category_id":"cjs8mv9jz00046guhn2239r0l","_id":"cjs8my0rd002a6guhe5nxy2x0"},{"post_id":"cjs8my0t2002c6guhl5uiiuwb","category_id":"cjs8mv9jz00046guhn2239r0l","_id":"cjs8my0t5002f6guh4gsvum6s"},{"post_id":"cjs8myevq002h6guh55jcwyss","category_id":"cjs8mv9ki000f6guh26amnzzd","_id":"cjs8myevu002k6guhjymflidj"},{"post_id":"cjs8myf3r002n6guh0y6di4id","category_id":"cjs8mv9ki000f6guh26amnzzd","_id":"cjs8myf3w002q6guhmaywnqxf"},{"post_id":"cjs8myf4l002s6guhcwvok41i","category_id":"cjs8mv9ki000f6guh26amnzzd","_id":"cjs8myf4o002v6guhgwalsfc0"},{"post_id":"cjs8myfmk002x6guh2at5oulp","category_id":"cjs8mv9ki000f6guh26amnzzd","_id":"cjs8myfmo00306guhcxklbwu5"},{"post_id":"cjs8myfng00316guh8t6lp4ch","category_id":"cjs8mv9ki000f6guh26amnzzd","_id":"cjs8myfnk00346guhddjy2arq"}],"PostTag":[{"post_id":"cjs8mv9kg000d6guhfthmmssr","tag_id":"cjs8mv9kz00116guhr5leuywo","_id":"cjs8mv9lc001n6guhgyyjjwzt"},{"post_id":"cjs8mv9kg000d6guhfthmmssr","tag_id":"cjs8mv9la001k6guh7naxtsjs","_id":"cjs8mv9lc001o6guh226sy8ot"},{"post_id":"cjs8mv9kr000n6guhzjdh4qmp","tag_id":"cjs8mv9lj00206guhuohpnt03","_id":"cjs8mv9ll00236guhe80zvo3j"},{"post_id":"cjs8my0ra00276guhlpzfk0sc","tag_id":"cjs8mv9k200056guhtd4n6coe","_id":"cjs8my0rc00286guh3spc0ott"},{"post_id":"cjs8my0ra00276guhlpzfk0sc","tag_id":"cjs8mv9kd000c6guhd3lludch","_id":"cjs8my0rd00296guhpmh0cd4e"},{"post_id":"cjs8my0ra00276guhlpzfk0sc","tag_id":"cjs8mv9kk000h6guhydpu904h","_id":"cjs8my0rd002b6guhmacenx4p"},{"post_id":"cjs8my0t2002c6guhl5uiiuwb","tag_id":"cjs8mv9k200056guhtd4n6coe","_id":"cjs8my0t4002d6guhfcqvk7ng"},{"post_id":"cjs8my0t2002c6guhl5uiiuwb","tag_id":"cjs8mv9kd000c6guhd3lludch","_id":"cjs8my0t5002e6guh490atoek"},{"post_id":"cjs8my0t2002c6guhl5uiiuwb","tag_id":"cjs8mv9kk000h6guhydpu904h","_id":"cjs8my0t5002g6guhqbgw3mpg"},{"post_id":"cjs8myevq002h6guh55jcwyss","tag_id":"cjs8mv9kz00116guhr5leuywo","_id":"cjs8myevt002i6guhx0mp48rz"},{"post_id":"cjs8myevq002h6guh55jcwyss","tag_id":"cjs8mv9l100156guhjj0z374v","_id":"cjs8myevt002j6guh9l5fdrgy"},{"post_id":"cjs8myevq002h6guh55jcwyss","tag_id":"cjs8mv9l300186guh69tbkz7u","_id":"cjs8myevu002l6guhxq06fkkw"},{"post_id":"cjs8myevq002h6guh55jcwyss","tag_id":"cjs8mv9l300196guh2ljievdj","_id":"cjs8myevv002m6guh3qdkt4wu"},{"post_id":"cjs8myf3r002n6guh0y6di4id","tag_id":"cjs8mv9kz00116guhr5leuywo","_id":"cjs8myf3t002o6guhc5r3fhx6"},{"post_id":"cjs8myf3r002n6guh0y6di4id","tag_id":"cjs8mv9l100156guhjj0z374v","_id":"cjs8myf3v002p6guhba9z96e9"},{"post_id":"cjs8myf3r002n6guh0y6di4id","tag_id":"cjs8mv9l7001g6guhchknl0p1","_id":"cjs8myf3x002r6guhedla4532"},{"post_id":"cjs8myf4l002s6guhcwvok41i","tag_id":"cjs8mv9kz00116guhr5leuywo","_id":"cjs8myf4n002t6guhbnb9d3s3"},{"post_id":"cjs8myf4l002s6guhcwvok41i","tag_id":"cjs8mv9l100156guhjj0z374v","_id":"cjs8myf4n002u6guhphx3vx7e"},{"post_id":"cjs8myf4l002s6guhcwvok41i","tag_id":"cjs8mv9l300186guh69tbkz7u","_id":"cjs8myf4o002w6guhnb4gjg6v"},{"post_id":"cjs8myfmk002x6guh2at5oulp","tag_id":"cjs8mv9kz00116guhr5leuywo","_id":"cjs8myfml002y6guhaa8b52f9"},{"post_id":"cjs8myfmk002x6guh2at5oulp","tag_id":"cjs8mv9l100156guhjj0z374v","_id":"cjs8myfmn002z6guhb46mea1r"},{"post_id":"cjs8myfng00316guh8t6lp4ch","tag_id":"cjs8mv9kz00116guhr5leuywo","_id":"cjs8myfni00326guhwz0qnxrd"},{"post_id":"cjs8myfng00316guh8t6lp4ch","tag_id":"cjs8mv9l100156guhjj0z374v","_id":"cjs8myfnj00336guh44n193fi"},{"post_id":"cjs8mv9rd00246guh1knh7x67","tag_id":"cjs8n9lkq0000aguh3jfg1k7m","_id":"cjs8n9lky0003aguhe4ojwxkd"},{"post_id":"cjs8mv9rd00246guh1knh7x67","tag_id":"cjs8n9lks0001aguhtdj6pb97","_id":"cjs8n9lky0004aguh7kiq2mxb"},{"post_id":"cjs8mv9rd00246guh1knh7x67","tag_id":"cjs8n9lkt0002aguhp13pw2xw","_id":"cjs8n9lkz0005aguhuhqmdose"},{"post_id":"cjs8mv9rd00246guh1knh7x67","tag_id":"cjs8pkx1i0000tkuhu3s9yyql","_id":"cjs8pkx1j0001tkuhq1yvxile"}],"Tag":[{"name":"aws","_id":"cjs8mv9k200056guhtd4n6coe"},{"name":"lambda","_id":"cjs8mv9kd000c6guhd3lludch"},{"name":"claudiajs","_id":"cjs8mv9kk000h6guhydpu904h"},{"name":"mobile","_id":"cjs8mv9kz00116guhr5leuywo"},{"name":"ionic","_id":"cjs8mv9l100156guhjj0z374v"},{"name":"android","_id":"cjs8mv9l300186guh69tbkz7u"},{"name":"play store","_id":"cjs8mv9l300196guh2ljievdj"},{"name":"angular","_id":"cjs8mv9l7001g6guhchknl0p1"},{"name":"flutter","_id":"cjs8mv9la001k6guh7naxtsjs"},{"name":"markdown","_id":"cjs8mv9lj00206guhuohpnt03"},{"name":"nodejs","_id":"cjs8n9lkq0000aguh3jfg1k7m"},{"name":"express","_id":"cjs8n9lks0001aguhtdj6pb97"},{"name":"passport","_id":"cjs8n9lkt0002aguhp13pw2xw"},{"name":"authentication","_id":"cjs8pkx1i0000tkuhu3s9yyql"}]}}